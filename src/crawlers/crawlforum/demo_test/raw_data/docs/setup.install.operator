



Instead of manually installing, upgrading, and uninstalling Istio in a production environment,
you can instead let the Istio 

manage the installation for you.
This relieves you of the burden of managing different 
 versions.
Simply update the operator 
 and the
operator controller will apply the corresponding configuration changes for you.
The same 
 is used
to install Istio with the operator as when using the 
.
In both cases, configuration is validated against a schema and the same correctness
checks are performed.
Perform any necessary 
.
Check the 
.
Install the 
.
Deploy the Istio operator:
This command runs the operator by creating the following resources in the 
 namespace:
You can configure which namespace the operator controller is installed in, the namespace(s) the operator watches, the installed Istio image sources and versions, and more. For example, you can pass one or more namespaces to watch using the 
 flag:
See the 
 for details.
You can alternatively deploy the operator using Helm:
Note that you need to 

to run the above command.
To install the Istio 
 

using the operator, run the following command:
The controller will detect the 
 resource and then install the Istio
components corresponding to the specified (
) configuration.
The Istio control plane (istiod) will be installed in the 
 namespace by default. To install it in a different location, specify the namespace using the 
 field as follows:
You can confirm the Istio control plane services have been deployed with the following commands:
Now, with the controller running, you can change the Istio configuration by editing or replacing
the 
 resource. The controller will detect the change and respond by updating
the Istio installation correspondingly.
For example, you can switch the installation to the 

profile with the following command:
You can also enable or disable components and modify resource settings.
For example, to enable the 
 component and increase pilot memory requests:
You can observe the changes that the controller makes in the cluster in response to 
 CR updates by
checking the operator controller logs:
Refer to the 

for the complete set of configuration settings.
Download and extract the 
 corresponding to the version of Istio you wish to upgrade to. Reinstall the operator
at the target Istio version:
You should see that the 
 pod has restarted and its version has changed to the target version:
After a minute or two, the Istio control plane components should also be restarted at the new version:
The process for canary upgrade is similar to the 
.
For example, to upgrade the revision of Istio installed in the previous section, first verify that the 
 CR named 
 exists in your cluster:
Download and extract the 
 corresponding to the version of Istio you wish to upgrade to.
Then, run the following command to install the new target revision of the Istio control plane based on the in-cluster

 CR (here, we assume the target revision is 1.8.1):
You can alternatively use Helm to deploy another operator with a different revision setting:
Note that you need to 

to run the above command.
Make a copy of the 
 CR and save it in a file named 
.
Change the name to 
 and add 
 to the CR.
Your updated 
 CR should look something like this:
Apply the updated 
 CR to the cluster. After that, you will have two control plane deployments and services running side-by-side:
To complete the upgrade, label the workload namespaces with 
 and restart the workloads, as
explained in the 
 documentation.
If you used the operator to perform a canary upgrade of the control plane, you can uninstall the old control plane and keep the new one by deleting the old in-cluster 
 CR, which will uninstall the old revision of Istio:
Wait until Istio is uninstalled - this may take some time.
Then you can remove the Istio operator for the old revision by running the following command:
If you omit the 
 flag, then all revisions of Istio operator will be removed.
Note that deleting the operator before the 
 CR and corresponding Istio revision are fully removed may result in leftover Istio resources.
To clean up anything not removed by the operator:
Community partner tooling of Wasm for Istio by Solo.io.
Istiod consolidates the Istio control plane components into a single binary.
Configuring Wasm extensions for Envoy and Istio declaratively.
The future of Istio extensibility using WASM.
A vision statement and roadmap for Istio in 2020.
Provision and manage DNS certificates in Istio.
Istio
1.8.1
Â© 2020 Istio Authors, 
Page last modified: December 9, 2020
