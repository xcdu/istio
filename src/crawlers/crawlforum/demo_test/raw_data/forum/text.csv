Prevent outbound packet sniffing - Security - Discuss Istio,"Our security team is evaluating our Istio implementation and stumbled across the plaintext communication between sidecars in a pod. While the mTLS between proxies is sufficient once the traffic leaves the pod, they are curious about the TCP plaintext communication over the lo interface. We are able to satisfy their concern on inbound traffic by connecting the sidecars using a unix socket, however the only way that we think we can do the same for outbound is by maintaining our own certificates and letting envoy wrap TLS with mTLS. The downsides of this are obvious (cert/CA management, application code needs to listen on SSL, etc). Curious if there are any other thoughts on this?"
TLS Handling from Envoy - Security - Discuss Istio,I want to ask which is the exact flow between container and envoy proxy sidecar for tls connections. What I have seen so far: With tls origination: What about an https connection? What I would like to achieve is the following: Im not able to achieve this with any configuration. Is it possible?,What are you trying to achieve? are you worried about http traffic from your app container to envoy? If so the recommended approach is to use unix domain sockets to communicate with the envoy sidecar.,"Hi Nick, thanks for the reply. 
To be honest Im trying to achieve an https communication between the pod and the target without certificate validation. it seems strange to me that you can do Istio tls origination without certificate validation for http requests from the pod while you cannot do the same for https requests. 
i.e 
pod ->(http to target URL) reaches envoy sidecar -> (mTLS) to egress Gateway ->(SIMPLE, no validation) to target 
while 
pod->(https to target) requires certificate validation"
Jwt origin auth on ingress for some hosts but not for others - Security - Discuss Istio,"I would like to enable a policy to enforce jwt origin authentication for requests hitting the ingressgateway, but only for requests for certain hosts. i.e., requests to  https://secure.example.com  should require jwt origin authentication, but  https://www.example.com  should not. The use case is that I have services running in the mesh that serve static content for React apps which need to be accessed without origin authentication, but service calls to API endpoints running in the mesh need jwt origin authentication. Also, some of the API services need to talk to each other with just peer authentication (for periodic tasks that do not have an external origin). I know I could add path based exclusion rules in my policies, but that doesn’t scale very well and would be hard to maintain. One option I am considering is to create a custom ingress gateway similar to  https://istio.io/blog/2019/custom-ingress-gateway/  and and only apply the Policy object requiring jwt origin authentication to traffic targeting the custom gateway, and then use the default “istio-ingressgateway” for services that do not require jwt origin authentication. Does anyone know of a simpler way to accomplish this without using two different ingress gateways?","This is a good use case of applying JWT policy on ingressgateway on different hosts, currently the JWT policy itself doesn’t support this, the  https://istio.io/docs/reference/config/istio.authentication.v1alpha1/#Jwt-TriggerRule  only supports path but not host. I think the option you mentioned is possible, the other option that uses only 1 ingressgateway is to combine the JWT policy and RBAC policy. In JWT policy, you can set  https://istio.io/docs/reference/config/istio.authentication.v1alpha1/#Policy  to true, and in RBAC policy, you can use  https://istio.io/docs/reference/config/authorization/constraints-and-properties/  and  https://istio.io/docs/reference/config/authorization/constraints-and-properties/#supported-properties  to enforce the JWT requirements based on host (i.e. the  :authority  header) Note, the RBAC unofficially supports to be applied on ingressgateway since istio 1.2. I’m also working on a new task do document this more clearly and with the   https://github.com/istio/api/blob/638cf7f5063efe5619cbf296dd83e2b36e784df9/security/v1beta1/authorization.proto  (this deprecates the current RBAC policy) coming in 1.4, the integration should be easier.",I will try implementing the RBAC policy approach before creating another ingress gateway. Looking forward to 1.4. Thank you.,"/u/yangminzhu  Here is my attempt at implementing this. Goal is to enable RBAC only for the ingress service and to allow any access when :authority ==  http://www.example.com  or  http://keycloak.example.com , but require a valid jwt claim for all others. Since I’m pretty new to Istio RBAC, before I role it out, any feedback you could provide as to whether I’m on the correct path would be greatly appreciated: Require authentication with originIsOptional for istio-ingressgateway: Enable RBAC just for istio-ingressgateway service: Service role allowing access to  http://www.example.com  and  http://keycloak.example.com : ServiceRoleBinding connecting the above service role to all users (authenticated or not): Service role allowing access to all hosts: ServiceRoleBinding connecting the above service role to authenticated users","Hi,  /u/dan_mcfarlane  and  /u/yangminzhu 
Although lot has changed in the Istio release and security polices since you have posted this. 
But, the use-case still remains as alive as it was then. I am trying to use same ingressgateway for jwt authn and public services in the mesh with Authorization Polices. But Struggling very badly finding Authorization polices scope (on Ingressgateway or Namespace or Workload). Will really appreciate input from the experts here!","First look at the namespace of the policy, if it is the same as the root namespace (the default root namespace value is istio-system and configurable in meshconfig), it then applies to all namespaces, think of the root namespace as a special namespace to store mesh-wide policies. If not, the policy applies only to the given namespace. Then look at the selector, if the policy has no selector at all, it applies to all workloads in the namespace (or all namespaces if it’s root namespace). If not empty, it applies to all matched pods in the namespace (or all namespaces if it’s root namespace). See more in  https://istio.io/latest/docs/concepts/security/#policy-target"
Chiron for mTLS certificates - Security - Discuss Istio,"Hey folks, I’ve noticed the availability of Chiron. Are there any plans to support that workflow for mTLS certificates as well (e.g. use k8s own CA as a signing authority for workload proxies)? 
It seems the only use case at the moment is istio’s service-2-service communication (unless I got it all wrong). Thanks",Chiron is used for signing control plane certificate and webhook certificate using k8s CA. Are you asking about using k8s CA to sign workload certificates?  /u/leitang,"Using k8s CA as a signing authority for workload proxies is not planned for Istio 1.5, but may be planned after 1.5 (no concrete timeline yet).","Indeed that’s what I was asking. 
Thanks for the update.",Is there any documentation on using Chiron?,"We are using Istio 1.7, is this implemented? 
“Using k8s CA as a signing authority for workload proxies.”",Istio 1.7 release notes ( https://istio.io/latest/news/releases/1.7.x/announcing-1.7/ ) does not mention the support of using k8s CA as a signing authority for workload proxies. CC  /u/oliver   /u/shankgan  for the planing of using k8s CA as a signing authority for workload proxies.,https://istio.io/latest/blog/2019/dns-cert/ https://istio.io/v1.4/docs/tasks/security/dns-cert/
How to enable inserting of Authentication headers for outgoing requests using Envoy - Security - Discuss Istio,"We’re currently in the process of trying to replace a homegrown authentication proxy sidecar with envoy for our services in kubernetes. The reason why we needed to create such a sidecar in the first place is that we use custom JWT tokens along with another header to authenticate. This authentication proxy has 2 main functionalities; Authenticating incoming requests 
- I’ve been able to replicate this functionality using the ext_authz filter in Envoy Inject authentication headers into outgoing requests My question is for the 2nd use case,  The config I have right now:","Hello  /u/sameer_kapoor , did you have any updates on this topic? I am looking for something similar","I think you can use ext_authz filter to fetch the extra JWT token, you can do it either in your current ext_authz filter or add it as a separate one.",I ended up using a lua_filter to call the sidecar to generate a JWT token and then passed this on to the forward request ext-authz is defined as a cluster
Istio JWT verification against JWKS with internally signed certificate - Security - Discuss Istio,"I am trying to set istio to validate the jwts against our own OIDC provider, the provider uses a internally signed CA and I don’t know how to add the root certificate to pilot. Currently pilot is giving an error when fetching the public key: How do I get istio-pilot to trust certs from our CA? I have tried installing ca-certificates and including our CA public key in the Ubuntu certificates but it still won’t work.","Hello Rodrigo, I encountered a similar problem with Istio running in Openshift. From what I understand the discovery container in the pilot pod is validating the certificate of the OIDC and other incoming requests. For this validation the file /cacert.pem is used. As hack/workaround I replaced this file with the signer of my OIDC provider. I’m not sure whether this is the official way to do it, but it works for me. Which version of Istio are you using? Hope this helps, Olaf","/u/olaf-meyer   /u/rodrigo_valladares 
You can set the  jwksResolverExtraRootCA  flag in pilot to provide an extra root CA for the jwksUri, see the example here:  https://github.com/istio/istio/pull/17176","Hello, that are great news. Do you know in which Istio version the feature becomes available? Olaf",I think it’s added in 1.4,Hi olaf same issue I have encountered. I saw your post on  https://labs.consol.de/development/2020/05/07/debugging-istio.html I am using Kubernetes and Istio 1.3.3. My question is will the existing content of cacerts.pem get cleared and only the secret will be stored from whatever we have created when we do Thanks in advance,Hi  /u/yangminzhu  How can I do this in the istio version 1.6.8 which is installed through istioctl not helm chart! And I need to add this custom cert on the istiod. Can you point me in the right direction!,"Hello, I’m sorry, I missed the question. Is the topic still open? Kind regards, Olaf"
JWT authorization for external services - Security - Discuss Istio,"Is it possible to authenticate and authorize external services registered in ServiceEntry using JWT? 
I applied policy to namespace scope and created ServiceEntry in the same namespace. The rules are not applied to the external service in service entry.","it won’t apply, the authN/Z policy applies in the server side envoy sidecar (not client side), the external service doesn’t have envoy sidecar."
Configuring TLS Versions - Security - Discuss Istio,"Implementing Istio for mTLS is there any way to configure which TLS versions are supported? It appears that TLS 1.0 thru 1.3 are supported, but I need to be able to set the minimum version to TLS 1.2. Also, how do I test which versions are currently being used in my mesh? For example, if I’m running bookinfo demo with mTLS enabled?","I don’t believe we support configuring minimum TLS versions, although Envoy does support this, so it would be possible to support that config in the future.","Gateway object supports tls version modification, but sidecar does not support it. I try to use envoyfilter to modify sidecar outbound tls version, but failed, anyone can comment it?","i don’t think there’s a option for sidecar. reasonably to me to add at a mesh config global settings though. to inspect the versoin, i think the openssl client connect has some dump info to show the version string. i don’t think the minimal version make sense though. for mtls between sidecar, 95% cases both ends are envoy/istio workloads, offer min/max is too much details for the API. let me know what you think, you can file or (find an exsting feature request to the github issue about supporting this) if above looks good to you.","/u/incfly , thanks for comments, I use sidecar to connect external server, and use sidecar to do mTLS (external) directly without egress gateway, that is why I need to modify the tls version in sidecar.","Another use case for configuring min/max in the sidecar is TLS passthrough mode with SNI routing in the ingress. In this case, it is the sidecar’s TLS context that determines the supported TLS versions that are sent in the ServerHello. Secondly, it is also useful to scan servers and verify that only TLS 1.2 or higher is offered so that regardless of the client software, you can be sure you’ve met the requirement. We’ve modified  pkg/networking/core/v1alpha3/cluster.go  and  pkg/networking/core/v1alpha3/listener.go  to explicitly configure the min/max TLS version and ciphers. We could draft a PR if you could suggest the config object best suited for the option.","This is envoy issue which summaried all TLS configuration supporting activities  https://github.com/envoyproxy/envoy/issues/5401 The following show why envoy proxy does not support TLS 1.3 as client. 
 I can use envoyfilter to configure the TLS1.3 for sidecar now, but according to this issue, I can not use it.","I encounter a similar problem. I want to configure the TLS version with envoyfilter, but didn’t succeeded. I wrote the following envoyfilter, checked the config with  istioctl proxy-config  after creation of the pods and i can see my modifications, but not merged with the initial config. So it’s not taken into account. 
Here is what my envoy filter looks like: Can someone tell me what am i doing wrong, or if it is even possible to do it this way? Thank you",I don’t think it is supported.,"Try the following envoyfilter, and then check it by using istioctl And  then use command “istioctl pc cluster  pod-name. --fqdn  http://www.google.com  -ojson” to check it.","I just check in my lab, even the tls1.3 configuration can goto sidecar, the tcpdump show it still try to use tls 1.2 handshake, and server response Alert (Level: Fatal, Description: Protocol Version)",So do you have found the correct way to use the envoy config filter,"After more testing, I got some results now, it is a little bit complicated. :-（ 
 , and   can work with TLS1.3 with envoyfilter + TLS origination. http2.pro need to add a fixing (envoy filter patch in  ) before it can work for http2.pro can not realize the istio* alpn name. Case 1 also has this problem, but seems the google/facebook can handle it. any comment is welcome","My latest result is the TLS1.3 configuration can work also for client side, not problems found until now, if any of you has problems, we can discuss more detail."
Proxy failed to connect to istiod.istio-system.svc:15012 with user-specified certificate/secret - Security - Discuss Istio,"I’m trying to upgrade from Istio 1.5.4 to 1.7.4 and looking for help on how to use user-specified certificate for in-cluster mtls communication. 
The user-specified certificate can be mounted via istio-certs for every Istio component with Citadel disabled in Istio-1.5.4. 
- name: istio-certs 
secret: 
secretName: used-specified.istio-pilot-service-account 
optional: true In Istio-1.7.4, it allows user-specified certificates for ingressgateway/egressgateway with  , but not istiod(pilot). Both ingressgateway/egressgateway show the following error when user-specified certificate is used in proxy: 
2020-11-16T21:27:13.372694Z     error   xdsproxy        failed to connect to upstream istiod.istio-system.svc:15012: context deadline exceeded 
2020-11-16T14:27:13.373211Z     warning envoy config    StreamAggregatedResources gRPC config stream closed: 2, context deadline exceeded 
2020-11-16T21:27:14.592114Z     warn    Envoy proxy is NOT ready: config not received from Pilot (is Pilot running?): cds updates: 0 successful, 0 rejected; lds updates: 0 successful, 0 rejected The documentation is not clear to me how/when to use the pilotCertProvider, mountMtlsCerts, and dns certificate along with user-specified certificate. Any help will be appreciated… thanks, 
Patrick"
TLS origination from sidecar proxy instead of the Egress Gateway - Security - Discuss Istio,"Hi 
I am trying to setup mTLS for outgoing connections, but instead of originating the TLS traffic from the egress gateway, I’m trying to do it from the sidecar proxy itself. We want to originate the TLS connection from proxy and not the egress gateway. I took care of mounting the client certs in my sidecar proxy container and verified that the client certs are available in the expected path. My API resources look something like below when I try to curl to   http://external-host-example.com , I am hoping that Istio will add the client certs to the connection. 
I’m not sure if that’s happening, because I’m running into errors. curl  -H  ""Host: external-host-example.com""  --tlsv1.2 -v https://external-host-example.com Looking at the debug logs, I see this Any idea what am I doing wrong? How do I debug this further?"
Istio operator: pass ingress mTLS certs via files instead of secrets - Security - Discuss Istio,"I am trying to pass mTLS certs to istio ingress gateway via files and not via secrets. Vault init-container will store certs at So I m trying to remove ‘secret’ element via patch like this but it is not working. Doc says, “For delete, value should be unset.” istioctl manifest generate command still includes secret section. I also tried setting the value to “unset” but (as exptected) ended up using unset as literal value for secret name. Any pointers are appreciated.",Used this to delete it since vault sidecar will mount it.,In the end it was easier to change the certificate path to something else instead of trying to use default path.
Istio AuthorizationPolicy based on claims - Security - Discuss Istio,"Hi I’m trying to configure AuthorizationPolicy to allow specific Endpoint only for specific role. 
the thing is ,seems like im having issue with nested claims of my Auth0 token. when using Istio sample token i can do something like the following: it does works cause request.auth.claims includes the roles claim and the decrypted token looks like this: when debugging the Envoy Log for my Auth0 token i see that the roles in my case are not part of istio_authn request.auth.claims. i see them on request.auth.raw_claims which is not supported field for this policy. i see based on this  https://github.com/istio/istio/pull/28294  it is supported now to use nested claims, but i’m not quite sure why i do not see it as part of this field. i’ve also tried to enrich the sample token and when added it nested claim like this: and using the following policy: its not working. i’ve also tries to play with the  experimental.envoy.filters.*  flag with no luck. 
why not all claims are part of the request.auth.claims? 10x 
CL","The nested jwt claim is added in 1.8, see release notes here:  https://istio.io/latest/news/releases/1.8.x/announcing-1.8/change-notes/#security"
Use Istio for authorisation: how to redirect to login page and how to use JWT cookies - Security - Discuss Istio,"Hi, I’m trying to remove user authorization built-in to the applications and move then to istio. In the past i have been able to use  RequestAuthentication  and  AuthorizationPolicy  with JWT to secure public restful services. This time its a front-end We use keycloak OIDC and currently we use lua inside an openresty container to obtain the JWT cookie and based on that the user is either redirected to keycloak’s login page, is granted access or if the user does not have the proper role, we send back a 403 error page. I have the following questions: tx.,","I believe i have to add oauth2-proxy in the mix and perhaps use an EnvoyFilter? Hoping for a simpler solution. Any help is welcome, tx","As it is related to AuthorizationPolicy, cc  /u/yangminzhu .","
 
 
 
","Thanks for your reply and link! I was on a similar path, but this helped tremendously. I got to the point where i can login, but my application fails with RBAC: access denied. I also don’t see any headers in the envoy rbac debug that the envoy proxy can use to authenticate. I do see the  cookie', '_oauth2_proxy , but no  Authorization  header (or  X-Forwarded-Access-Token ). I did configure oauth2-proxy to pass those: But these don’t end up at the app’s envoy proxy. Any ideas?","With  --set-xauthrequest=true  i am getting the  x-auth-request-access-token  as a header, but i am not able to set the other headers For now i’ll use"
Istio Peer connection clarification - Security - Discuss Istio,"Hi i’m trying to understand when communication between microservices pass through the Envoy and when it isnt. i  assumed once sidecar injected all communication between service A to service B is basically: 
serviceA --> SideCarA --> SideCarB --> Service  B. i’ve started to doubt it due to the following scenario: 
i have two services, A and B which includes the following endpoints: now, from an helper pod (sleep) i’m doing the following: why i’m trying to understand this usecase? 
cause once i’m applying the following: i expected to be able to use curl with valid JWT token (using requestauth) but also to be able to allow services communicates with each other. 
i do able to do the curl thing, but once code includes http to other service i get the rbac. 
why it is different? and sorry if its pretty basic question thanks","Hi, For the observation of ‘curl’ with unexpected missing X-Forwarded-Client-Cert, one thing you could check is the configuration of PeerAuthentication see if the mTLS is enabled among these pods. 
And you could also try curl from the A to B see if the header is injected or not. 
You can also find the behavior of the header injection here:  https://istio.io/latest/docs/tasks/security/authentication/authn-policy/#auto-mutual-tls For the question about the AuthorizationPolicy, you could find details in 
 https://istio.io/latest/docs/reference/config/security/authorization-policy/ . 
And from your config, the policy is specifying the namespaces, the expectation would be fail if you curl from outside, not sure if that is the case.","10x 
i’m familiar with the documentation and indeed checked this part. 
the problem was so silly, the code from serviceA to serviceB included overwrite of headers, this caused the flow not to work properly. 
once i’ve removed it , everything got working again. 10x"
Istio Ingress Gateway with GKE Ingress and Google Managed Certificates - Security - Discuss Istio,"I am trying to setup HTTPS with Istio Ingress Gateway. It seems there are a number of approaches that you can take. In my demo project I have setup demo profile of Istio(v1.5.1) with istioctl cli tool on GKE. As istio-ingressgateway is a LoadBalancer, I used a GKE Ingress with it. The benefit of using GKE ingress in front  of Istio ingress-gateway is that I can now use Google Managed SSL certificates. It’s a very easy and straight forward setup. And it works fine. My questions are, Is this setup recommended? In Istio doc there is already a guide on how to use Kubernetes Ingress and Cert Manager with Istio ingress-gateway. Will I lose out any of the Istio Traffic routing features. Can I still use Gateway and VirtualService? Will the mTLS still work properly? Are there any security issues with this setup? I am new in these topics and would really appreciate your opinions and suggestions. 
Thanks.","So you will have GKE ingress setup and get benefits of Google managed certificates. I don’t think the features you mentioned below will be broken, the difference becomes you move the public facing tls from Istio gateway to k8s ingress. those features, you listed, is not affected.",/u/fai555   can you share how you are doing the installation to get HTTPS with Istio Ingressgateway?,"Sorry for the delayed reply. You can refer to a blog I wrote regarding all the ways I could setup SSL with Istio. 
 https://medium.com/intelligentmachines/istio-https-traffic-secure-your-service-mesh-using-ssl-certificate-ac20ec2b6cd6 There is another blog that describes how to setup Google Managed Certificate with Istio. I haven’t tries it out personally, but the idea seems pretty neat 
 https://www.padok.fr/en/blog/https-istio-kubernetes Hope this helps.","If you want to use a GKE Ingress then easiest option is to add a custom health check via a BackendConfig CRD for the istio ingress gateway. I recently found this guide buried in the GCP docs  https://cloud.google.com/solutions/exposing-service-mesh-apps-through-gke-ingress#anthos-service-mesh_2 If you try it out, don’t forget to add the firewall rules otherwise the health check won’t work and the GKE Ingress will always be unhealthy.","/u/fai555  the information on the blog posts are very helpful, thanks. 
 /u/jordanw   custom health check  works perfectly fine. thanks."
Istio Auth policy based on fields in request body - Security - Discuss Istio,"Hi All, I am using Istio’s AuthorizationPolicy API to implement access control for services running inside a kubernetes cluster. This works fine. I have ran into use cases where I need to restrict/allow access to services based on “fields in the request body” of the HTTP request. The API doesn’t supports defining such a policy. See below:- https://istio.io/latest/docs/reference/config/security/conditions/ Can someone help me how I can achieve defining an authorization policy based on fields in request body? Any help is much appreciated. Thanks, 
Senthil.",Hi i guess you can do it with EnvoyFilter. something like the following might work using lua Envoy Filter on the SIDECAR_INBOUND of your workloads.,"The current authorization policy doesn’t support checking request body, one workaround is to use Lua filter as  /u/chen  mentioned above. Feel free to open a feature request on  https://github.com/istio/istio/issues . Thanks!","Thanks  /u/chen ,  /u/yangminzhu . I’ve opened a feature request:- 
"
Security vulnerabilities in sidecar proxy - Security - Discuss Istio,"our security tool shows below vulnerabilities in  proxyv2:1.5.8  image, is there a place to find if these are fixed in newer images? i couldn’t find doc mentioning what goes in the image"
Different AuthorizationPolicy actions based on paths - Security - Discuss Istio,"Hello, 
After reviewing the  https://istio.io/latest/docs/reference/config/security/authorization-policy/  it appears that it will not be possible to implement the following authorization requirements. We have two broad URL patterns where we need to have different conditions that will either allow/deny the requests. 
 [:port]/EnterpriseConfig/odata/Enterprises/{integral-enterprise-id-value}?querystring-params 
 [:port]/EnterpriseConfig/odata/Enterprises/{integral-enterprise-id-value}/BusinessUnits/{integral-businessunit-id-value}?querystring-params The integral-enterprise-id-value is not fixed but could be any integer value like 123.  I think this poses a problem in defining different authorization policies that will get matched correctly. 
My main issue is how should the paths be specified in the policies. Whether  “paths” specified in one policy as 
 paths: [""/EnterpriseConfig/odata/Enterprises/*""] 
would always subsume the “paths” specified in the second policy as 
 paths: [""/EnterpriseConfig/odata/Enterprises/*/BusinessUnits/*""] 
resulting in only the first policy to get triggered? Basically can one have a portion of path a wildcard? thanks 
K",/u/yangminzhu  could you please take a look?,"No,  ""/EnterpriseConfig/odata/Enterprises/*/BusinessUnits/*""  will not work as expected because currently the authz doesn’t support regex matching. “*” can be used only either in the beginning (for suffix match) or in the end (for prefix matching). We’re working on a design to add regex support in 1.8."
Istio Exposed Ports and Security - Security - Discuss Istio,"The documentation contains a list of the ports used by Istio ( https://istio.io/latest/docs/ops/deployment/requirements/#ports-used-by-istio ). Can anyone direct me to any further information discussing what precisely these various ports are used for - and in particular any security analyses related to these (i.e. are any of the open ports likely to provide an surface for attack, particularly from an attacker with some toehold already within the cluster)?"
How to add a new CA cert to the Istio Trust Store - Security - Discuss Istio,"We have a situation where workloads in a mesh with mTLS enabled are no longer able to communicate with an AWS RDS that has SSL enabled because Amazon seems to have just rotated their CA cert for RDS (2 days ago).  I was able to find lots of documentation about Istio signing certs, but I couldn’t any clear guidance on how to make Istio trust a new certificate.  Is this possible?  What should we do in a situation like this?","/u/ad-tfs  could you provide more information? Is your workload in a Istio managed cluster trying to talk to AWS RDS? Does egress-sds solve your issue?  https://istio.io/latest/docs/tasks/traffic-management/egress/egress-gateway-tls-origination-sds/ , can you route egressing traffic to a egress gateway and deploy destinationrule with the new CA cert to do TLS handshake with AWS RDS?","I have attempted to get that working on 1.7. I cant get it to work - I can get MTLS in the mesh working outbound to the egreess gate and then on to RDS with out SSL, but when I try and add the SSL in the final hop (destination rule) it breaks the connection, the cert is correct as I have tested it. I detailed the problem here but no bytes yet.",one thing to note AWS RDS rotating a cert would only affect you if your using a ca cert in the first place to connect. SSL direct from sequalize or what ever source your using to an RDS instance that enforces SSL doesnt necessarily require you to pass a certificate in.
RBAC: access denied using JWT with multiple audiences - Security - Discuss Istio,"Hi, I have a JWT with two audiences: This token allows me access to a service with an authorization policy configured for the first audience in the list: But returns 403:  rbac: access denied  with the second audience in the list. Does istio 1.6.8 support multiple audiences in the JWT? (We recently upgraded from Istio 1.1, where this configuration was working.)","Hi Mark, Thanks for your post. Could you try look into rbac debug log following this  https://istio.io/latest/docs/ops/common-problems/security-issues/#ensure-proxies-enforce-policies-correctly . 
I will also try to reproduce the issue in my side. Thanks."
Configuring CORS - Security - Discuss Istio,"I have problem configuring CORS for the service exposed by ingress gateway. 
My goal is to get CORS headers when sending OPTION request. 
I’m migrating from Nginx-ingress and for nginx it was as easy as setting the annotation  nginx.ingress.kubernetes.io/enable-cors: ""true""  in the ingress. My configuration: 
Gateway: Virtualservice: When I try to run the curl I get: What I expect is something like this (this is output from Nginx-ingress) Can someone please point what I’m doing wrong?",If you use istio 1.6+ you might need to change  allowOrigin  to  allowOrigins with exact  as mentioned  https://github.com/istio/istio/issues/23757#issuecomment-634699992 .,"Thank you  /u/jt97  for this link. Making such change indeed changed the Istio-proxy config when I check it with  istioctl proxy-config . It’s a shame this change is not documented. 
Unfortunately, it didn’t solve my problem. 
I still don’t see any of the  access-control-*  headers. 
Instead, I still get 404 error if I send a request with OPTIONS method as shown in my original post.","Oof, that’s several frustrating hours of my life that I won’t be getting back  Would be great if the old examples were updated also. For example: 
 https://istio.io/v1.6/docs/reference/config/networking/virtual-service/#CorsPolicy","I ran into the same situation with Istio 1.6.10, have you been able to solve this issue?","I finally figured it out.  Two things you need to pay attention: You need to add the allowed origins in the allowOrigins field. You need to specify the “Origin” header in the curl command to indicate that it’s a cors request. Otherwise, the access-control-allow-* headers won’t show up. 
For instance: k exec http-server-6cc8fd5c68-cnp9h - curl -sv -H “Origin:  http://www.example.com ”  http-server.default.svc.cluster.local/test","Sorry I haven’t answered, I wasn’t able to make it working as expected. 
Thank you for sharing working solution!"
Istio ingress gateway support tls without SNI - Security - Discuss Istio,"I am setting up istio gateway as a NLB loadbalancer service and using NLB to terminate TLS. On the istio gateway side, I have a self-signed certificate. I notice that NLB doesn’t send SNI during TLS handshake to istio gateway and that causes HTTPs requests to fail. Is there a configuration option I can make on the istio gateway side to make this work?","This seems more like a networking API configuration,  /u/costin_manolache ,  /u/rshriram .",Have you tried setting  *  as hosts for the GW ? (I’m just thinking out loud here…),"/u/prune  Thanks, we figured it out. ingress gateway matches the most specific host first so “ ” as hosts works for non-SNI traffic. Thanks to  /u/rshriram  for the information.","Can you have multiple gateways defined in multiple namespaces with a wildcard “*” for the host? I have a l7 proxy sitting in front of out ingress gateway to handle a limitation in our NAT implementation. 
We NAT public to private ip all with destination address 443.  We have a L7 proxy direct to ingress gateway of associated K8s cluster based on host headers. Unfortunately the L7 Proxy doesn’t support SNI health checks so need a fallback as it does a client TLS connection for whitelisting. I setup a “healthcheck” gateway / vs / svc / pod to response for the health check of the cluster’s ingress gateway.  However when trying to setup another gateway in another namespace on port 443 with a different certificate it receives no traffic.  Only the health check gateway with the wildcard host on port 443 is receiving traffic. I’m using istio 1.5.1. Any help would be appreciated.",So what was the solution? I tried to use “*” but did not work Can someone add a sample ingress gateway yaml config that worked for them?
Istio 1.7 - JWT authentication policy problem - Security - Discuss Istio,"I want to configure a JWT Authentication policy that embeds the JWT verifying public key using “jwks” instead of “jwksUri”. 
I used the below - just updated the one that Istio’s Authentication task to change the jwksUrl to jwks. The actual public key is same as what is provided at ‘ https://raw.githubusercontent.com/istio/istio/release-1.7/security/tools/jwt/samples/jwks.json ’. I just put it in jwks format. The above jwks content conforms to JWKS format from what I can tell. However when I attempt to access the /headers using an invalid token as below, it still returns 200. curl --header ""Authorization: Bearer deadbeef"" ""$INGRESS_HOST:$INGRESS_PORT/headers"" -s -o /dev/null -w ""%{http_code}\n"" The INGRESS_HOST, INGRESS_PORT are set correctly. If I just change the authentication to refer the public key using jwksUrl then it works as expected. Meaning it will fail with 401 code when presented with an invalid token as above. Any idea of what might be wrong? Or is there a known problem.",I forgot to mention that I am testing this with minikube. My question: Are authentication policies with public keys in JWKS format supported? I tried this in Azure cluster as well but see same results. Any help will appreciate or I should just forget that and always specify keys using jwksUrl? K,have you try to remove the selector expose this requestauthentication not only to ingressgateway,also i think on the example the jwtRules use the jwksUri as ( https://raw.githubusercontent.com/istio/istio/release-1.7/security/tools/jwt/samples/jwks.json ) it is a json type  different from what you set,"
 
 
 
 thx",/u/yangminzhu   /u/incfly  could you take a look at this? Is this a potential bug?,I am facing the same issue. Using Istio v1.7.0,"/u/kyleb   /u/senthilrch   You should include the same jwks.json content in the  jwks  field (do not base64 it), this is supported in yaml by using the  |  syntax, see example below","/u/yangminzhu , thanks for the response. will check it out."
DestinationRule vs PeerAuthentication clarification - Security - Discuss Istio,"I am currently migrating a workload to a new cluster running Istio 1.7.1 The workload has certain endpoints that require mTLS to be disabled. This has been achieved using a DestinationRule in the past, but now when PeerAuthentication is available I am not sure which method I should use? Why are you able to control mtls through both resources? I spent my morning digging through the docs, but the difference between these resources is still somewhat unclear.",Well thw documentation mentions that PeerAuthentication is applicable at a namespace level with provisions to make exceptions for certain services at port levels. Destination rule on the other hand applies to that specific service and is tied to the virtual service. You cannot make port level we exceptions here. In your case if this is the specific service that needs mtls to be disabled the stick to Destination rules. If on the other hand you need a specific port where mtls to be disabled then peerauthentication would work for you as well. Hope that helps,"Thank you, that makes it clearer! We decided to stick with DestinationRules, and in regards to your answer it seems to be the correct way.","Both are relevant. 
The crucial point is that PeerAuthentication defines what the destination service requires from the client (e.g. must provide a client cert). 
The destination rule controls what the client side will provide. So if a PeerAuthentication requires strict mode, the DestinationRule   provide a certificate (using tls mode MUTUAL or ISTIO_MUTUAL). 
If the PeerAuthentication is permissive, the DestinationRule   provide a certificate but is not required to."
Use environment variable RequestAuthentication/AuthorizationPolicy - Security - Discuss Istio,Is there any way to use environment variables in this file descriptors like this?,You can already do that today. Did you run into any problem?
Securing Virtual Machine with Istio - Security - Discuss Istio,"Hi all! 
I’m studying how to integrate a VM inside my istio mesh. I don’t undestand if it will install an envoy proxy on the vm and how it protects the communication between pods and vm. If I have a service inside the vm on the port 8080 I need to protect the VM with a firewall rule also? Are the pods only able to communicate with the service? 
If I call the service from another VM I’m able to make requests against it?","/u/mcastro , I would like to chat to understand more.","/u/mcastro  Istio currently supports VM security by installing an Envoy proxy and Istio agent on VM, and configuring that all traffic is intercepted by the Envoy proxy. Both VM-to-VM traffic and pod-to-VM traffic are supported. And you can apply any Istio policies on VMs, just as how it works for k8s pods.","/u/liminwang  is there any documentation for configuring Istio policies on VMs? so far, I have not been able to find documentation on this other than Isito documentation for adding a vm to your service mesh. Thank you","There is no separate documentation for Istio policies for VMs. WorkloadEntry/WorkloadGroup is the equivalent to pod/deployment. All the existing policies work the same way for VMs as for k8s pods. For example, you can use label selector to select a group of VMs (WorkloadEntry) and apply policies to them.",check if the  http://solo.io  video  https://www.youtube.com/watch?v=W32duZtHh2w&ab_channel=solo.io  helps you
Istio and Keycloak - Security - Discuss Istio,"Can I do JWT Authentication using Keycloak ? So that if no JWT is provided, Istio should redirect me to the Keycloak login page, and after the login back to my endpoint ?","This is not supported in RequestAuthentication, you may want to check the OIDC integration here:  https://github.com/istio-ecosystem/authservice#introduction"
JWT claims made available? - Security - Discuss Istio,"When using JWT, is there a way for Istio to make the JWT claims available to services, e.g. in HTTP request headers?",You can use the  outputPayloadToHeader  field in RequestAuthenticaion to forward the payload to your application:  https://istio.io/latest/docs/reference/config/security/jwt/
Is DNS Interception available? - Security - Discuss Istio,"I’m looking at the “RFC - Istio DNS Interception” (Google Doc) which has been approved, and wondering if it’s functional in 1.6 or 1.7? I’ve tried 1.6.5, and the settings: Appear to be accepted. istiod starts to listen on port 15053, and there are rules within envoy for port 853, but I don’t see anything for UDP/TCP port 53 (either within envoy or via  iptables-save ). What are the requirements to get this work work, as there doesn’t seem to be any user-facing documentation in either 1.6 or 1.7 (if it’s there, and I’m missing it, a pointer would be great)?","If it is available, is there a way to demonstrate that it is working?",/u/costin_manolache1   might know this better.
Syntax suggestion: authorization policy behind a reverse proxy - Security - Discuss Istio,"I want my telemetry to be visible to whitelisted IPs only. My cluster lives behind a reverse proxy, so I can’t simply use  source.ip  or  from -> source -> ipBlocks  because they only “see” the backside of the proxy. This AuthorizationPolicy works, with my telemetry living on a separate subdomain: The only problem I have with it is that it feels a bit ugly. Headers and behavior for reverse proxies are reasonably standard, are they not? It feels to me like there should be a more direct way of expressing this rule. Maybe something like: Or if that isn’t workable, maybe the documentation could have an example of how to filter by client IP from behind a reverse proxy. I had to do more digging than I care to admit to figure this out.","we are adding a new field  remoteIpBlocks  to solve this problem in 1.8, see the design doc  https://docs.google.com/document/d/1gf0LKom9RpBjux6FYvdKCLu4v2paVZnbuPRSRyGJ4Dg/edit  for more details.","Oh, excellent. I must say that I like your option   best, using only  ipBlocks/notIpBlocks  and keeping the proxy part of the configuration to the  numTrustedProxies  field. That feels like a cleaner separation of concerns. But  remoteIpBlocks/notRemoteIpBlocks  works well if there’s some possible use case for distinguishing proxied vs non-proxied clients."
Istio (1.6.2) : RBAC Access Denied for Valid JWT Token - Security - Discuss Istio,"I’m new to Istio. I’m implementing Authorization with JWT. I get RBAC access denied error for a valid JWT token. I’ve added the JWT Payload and Authorization Policy for reference. 
I’m using kubernetes version v1.18.3 and Istio 1.6.2. I’m running cluster on minikube.",/u/yangminzhu  ^^ can you take a look?,Can you add your request authentication yaml?,"apiVersion: “ http://security.istio.io/v1beta1 ” 
kind: “RequestAuthentication” 
metadata: 
name: dex-ms-contact-jwt 
namespace: default 
spec: 
selector: 
matchLabels: 
app: dex-ms-contact 
jwtRules:",Hi  /u/sweta581990 You have to apply the RequestAuthentication & Authorizationpolicy on the Istio-ingressgateway pod in the istio-system in case if you are accessing from the outside the cluster. and generate the token use it when accessing the application  may be this will help you.,"try this: RequestAuthentication Authorizationpolicy look this: 
 https://istio.io/latest/docs/tasks/security/authentication/authn-policy/#end-user-authentication","/u/shubham ,  /u/mandarjog Hi, I have few queries: Let’s say I applied authentication and authorization policy at ingressgateway. 
Now I again apply authentication and authorization policy at namespace level.(Note: I have not deleted the ingressgateway authentication and authorization policy yet.) Istio will consider which policy(ingressgateway or namespace level)? 
Can I apply both the ingressgateway and namespace level at same time? If yes, which one take precedence or both will work at same time? If no, what should be the ideal way to apply policy at all the levels and expected behavior? Could you please explain me with some example Lets say we have ingressgateway (I) , Service A and Service B(in same namespace) Also, How virtual service and authentication and authorization policy are connected?","/u/shubham ,  /u/mandarjog   Could you please reply. Thanks!","The basic model is that request authentication and authorization policy are additive, which means multiple policies applied to the same workload will have effect at the same time. In your example, if you apply the policy on ingressgateway which is usually in the namespace istio-system, and apply some other policies in another namespace (e.g. foo), those policies will not take effect at the same time because they are not applied to the same workload. See  https://istio.io/latest/docs/concepts/security/#policy-target  for more details. The VirtualService applies to Envoy in the client side, it has nothing to do with the auth policy which take place in the server side Envoy. For your original question, I noticed that there is an extra  /  in your JWT token issuer, which means the requestPrincipal should be  https://dev-n63ipah2.us.auth0.com//sEbjHGBcZ16D0jk8wohIp7vPoT0MWTO0@clients . There is also another reply in your original post for this, please give this a try and let me know if it fixes the issue. Thanks.","Sorry for late response  /u/sweta581990 But  what  /u/yangminzhu   Said is right. Thanks  /u/yangminzhu 
i didn’t notice that “/”. 
taking your case(policies you apply on workload)  –   May be you should access the app application with header  
try it  when you curl.","/u/yangminzhu ,  /u/shubham   Let’s say I have 3 namespace: istio-system foo (2 services are running service A and service B) bar (3 services are running service C, service D and service E) I applied policies at ingressgateway, I will be able to access service A and service B(in foo namespace) only through bearer token right? 
Also service C, service D and service E which are in namespace bar only through bearer token right? Can I apply different policy for namespace foo and namespace bar at the same time? 
if yes, will both the policies work at same time (considering I have not applied policy at ingressgateway) Also, Let’s say I have 2 applications running. one is web application (Service A) and other expose just a simple rest api (Service B)  in same namespace. In Auth0 there are 2 application clients registered for each application to generate token. Can i use different policies for each application in same namespace?",/u/yangminzhu   /u/shubham  Could you please reply. thanks!,Hi  /u/sweta581990 It is on my understanding & i am still learning the things so may be i am wrong. so if you find anything wrong so pls tell me also its good for me.  /u/yangminzhu  will tell more accurate  about it…,/u/yangminzhu  Could you please help. Thanks!,/u/mandarjog  Could you please help thanks!,"Yes. and yes. (Note you need to make sure your traffic is going through the ingress gateway in the first place if you plan to apply the policy on ingress gateway) Yes, you can do this and they will take effect at the same time. Say you have policy x on ingress gateway, policy y on namespace foo and policy z on namespace bar. policy x and y will take effect for requests to namespace foo assuming it’s going through ingress gateway. policy x and z will take effect for requests to namespace bar assuming it’s going through ingress gateway. yes, this is the workload-level policy, say you have policy m on service A in namespace foo, and policy n on server B in the same namespace, with the policy x on ingress gateway and policy y on namespace foo: policy x, y and m will take effect for requests to service A in namespace foo assuming it’s going through ingress gateway. policy x, y and n will take effect for requests to service B in namespace foo assuming it’s going through ingress gateway.",Thanks   /u/yangminzhu  for the explantion. so what i have said above is right.!
What is the recommended way to generate OpenAPI spec? - Security - Discuss Istio,"If I have an API protected by jwt auth using  https://istio.io/latest/docs/tasks/security/authorization/authz-jwt/  then my API doc no longer has a convenient way to generate the Open API spec without repeating all the functionalities. All the api frameworks, e.g. FastAPI, Symforny etc supports auto generation of api docs based on the annotations. Anyone has overcome this issue when using istio authorization?"
[v1.6] How Istio translates the YAML AuthorizationPolicy in firewall or other rules to accept/deny a request? - Security - Discuss Istio,"I am a Cloud Computing student currently writing about the security mechanism in Istio and I am analyzing the code. Unfortunately, I cannot find any detailed developer guide in order to understand the GitHub code and how effectively Istio translates this YAML in AuthZ rules. Can anyone help, please? Thanks!",I’m not sure I understand your question but I guess you’re asking how does istio converts the AuthorizationPolicy to the Envoy RBAC filter config that actually does the enforcement in the data plane (allow or deny a request)? If so you can take a look at the code here:  https://github.com/istio/istio/tree/master/pilot/pkg/security/authz,Thank you! That was exactly what I was looking for.
Can I use cert-manager for mTLS? - Security - Discuss Istio,"Hi. I’m reading  https://istio.io/latest/docs/ops/integrations/certmanager/  regarding integrating with cert-manager and have a question… Does cert-manager integration only work for use in HTTPS like when exposing a web server to the outside world, or will it work also for mTLS? In particular, I’m setting up a multi-cluster configuration and would find it awfully convenient if there was an option available for having automatic CA provisioning. Possibly related to  https://discuss.istio.io/t/why-not-use-cert-manager-to-manage-ca-cert-for-istio-sidecar-injector/4402  but not quite the same, I believe.","We use cert-manager to handle updating expiring certs on our ingresses…  Those certs prove we are who we say we are, and cert-manager/lets-encrypt verifies this by temporarily modifying the ingress and running tests to prove who we are… Your use case is different, and it feels like you may be on the wrong track with this idea.  Keep me in the loop if you have success though.  Its always nice to hear new approaches","I too suspect that it’s not the right tool for the job. But I’ll have to investigate more before I’m certain. There’s some interesting FAQ on the letsencrypt page, especially  https://letsencrypt.org/docs/faq/#does-let-s-encrypt-issue-certificates-for-anything-other-than-ssl-tls-for-websites  and  https://letsencrypt.org/docs/faq/#can-i-use-an-existing-private-key-or-certificate-signing-request-csr ."
Is Citadel required in Istio 1.5+ - Security - Discuss Istio,"The release notes for 1.5.x ( https://istio.io/latest/news/releases/1.5.x/announcing-1.5/upgrade-notes/ ) suggest that  citadel ,  nodeagent  etc are now   required, as this is handled by  istiod . I’ve recently had certificate expiry issues, which I suspect could be due to still running  nodeagent  (a hangover from upgrading from an older version) - but the troubleshooting at  https://istio.io/latest/docs/ops/common-problems/security-issues/#keys-and-certificates-errors  states unequivocally that a healthy  citadel  is required. So, is  citadel  in fact required or not?", think the troubleshooting doc is just outdated need updates. Is that right?
Getting RBAC denied even the servicerolebinding checked to be allowed - Security - Discuss Istio,"Hi I’ve been struggleing with istio… So here I am seeking help from the expert. I’m trying to deploy my kubeflow application for   with  . 
Refering to the  https://www.kubeflow.org/docs/started/k8s/kfctl-istio-dex/  with the  https://raw.githubusercontent.com/kubeflow/manifests/v1.0-branch/kfdef/kfctl_istio_dex.v1.0.2.yaml Here is a table of some of the key information With the manifest file I successfully deployed the kubeflow on my cluster. Here’s what I’ve done. Here is a verification of step 3 and 4 
Check RBAC enabled and envoyfilter added for kubeflow-userid After I finished my deployment. I performed below functional testing: I’m getting “RBAC: access denied” error after I successfully created the notebook server on kubeflow and trying to connect the notebook server. 
I managed to updated the envoy log level and get the log below. From the source code it looks like the allowed function is returnning false so it’s giving the “RBAC: access denied” response. I took a search on the dumped envoy, it looks like the rule should be allowing any request with a header key as my mail address. Now I can confirm I’ve got that in my header from above log. With the understand that the envoy config that’s been used to validate RBAC authz is from this config. And it’s distributed to the sidecar by mixer, The log and code leads me to the  http://rbac.istio.io  config of servicerolebinding."
RBAC Config deserialization code - Security - Discuss Istio,"Can someone point me to how Envoy uses the RBAC config YAML in order to build the effective filters and policies in the proxy? I am trying to find it on GitHub, but I can’t! Thanks.",You can start from here.
Online Boutique Extensions - Security - Discuss Istio,"I have been working on extending the GCP  https://github.com/GoogleCloudPlatform/microservices-demo  microservices example, and I would like to add  https://istio.io/latest/docs/reference/config/security/authorization-policy/  resources to the system. Concretely, I want an  AuthorizationPolicy  to block all not-whitelisted traffic to  cartservice , and I want to whitelist traffic from  frontend  to  cartservice . Currently, I am able to block traffic with an  AuthorizationPolicy , but I cannot whitelist traffic by principal or namespace. For context, here is my system setup. (Anything not explicitly stated here is the default from the demo linked above) gcloud beta container clusters update <cluster-name> --update-addons=Istio=ENABLED \--istio-config=auth=MTLS_STRICT --zone=us-central1-a : To make this work, I added one line to the  spec  for the  frontend   Deployment , which was: serviceAccountName: frontend-serviceaccount Lastly, this is the AuthorizationPolicy I am trying to use to only permit traffic from the  frontend  to talk to the  cartservice : The  Principals  commented out above are all of the different ways I have tried to refer to the service account defined above, and neither them nor the namespace work properly - as soon as this is applied the  frontend  cannot talk to the  cartservice .","Hmm, this is the official doc mostly closed to what you are trying to do 
 https://istio.io/latest/docs/tasks/security/authorization/authz-http/#configure-access-control-for-workloads-using-http-traffic So you confirmed the namespace and service account is correct as default/frontend-serviceaccount? These namespace and principals require the mTLS to work. Does request succeed when you only enable mTLS, without rbac? I note your Istio version is quite old. 1.4 is out of support. I would upgrade to 1.6 (most recent version) and use the setup guide I mentioned above as a successful base line, see where’s the delta of the microservice demo."
ISTIO_MUTUAL for gateway - Security - Discuss Istio,"istio version: 1.5.2 kubernetes version: 1.17 we followed the document provied in the link  https://archive.istio.io/v1.5/pt-br/docs/tasks/security/citadel-config/plugin-ca-cert/  instead of providing example pem file we created our own pem certificate. 
 
 
 
 
 
 
 
 
 
 
 ingress gateway log having error [Envoy (Epoch 0)] [2020-06-10 06:53:51.096][19][debug][http] [external/envoy/source/common/http/conn_manager_impl.cc:1276] [C1][S5834571573276687585] request end stream 
[Envoy (Epoch 0)] [2020-06-10 06:53:51.096][19][debug][admin] [external/envoy/source/server/http/admin.cc:1343] [C1][S5834571573276687585] request complete: path: /stats?usedonly&filter=server.state 
[Envoy (Epoch 0)] [2020-06-10 06:53:51.097][19][debug][http] [external/envoy/source/common/http/conn_manager_impl.cc:1616] [C1][S5834571573276687585] encoding headers via codec (end_stream=false): 
‘:status’, ‘200’ 
‘content-type’, ‘text/plain; charset=UTF-8’ 
‘cache-control’, ‘no-cache, max-age=0’ 
‘x-content-type-options’, ‘nosniff’ 
‘date’, ‘Wed, 10 Jun 2020 06:53:51 GMT’ 
‘server’, ‘envoy’ [Envoy (Epoch 0)] [2020-06-10 06:53:51.829][30][debug][filter] [external/envoy/source/extensions/filters/listener/tls_inspector/tls_inspector.cc:78] tls inspector: new connection accepted 
[Envoy (Epoch 0)] [2020-06-10 06:53:51.957][30][debug][filter] [external/envoy/source/extensions/filters/listener/tls_inspector/tls_inspector.cc:148] tls:onServerName(), requestedServerName:  http://alertmanager.example.com 
[Envoy (Epoch 0)] [2020-06-10 06:53:51.957][30][debug][conn_handler] [external/envoy/source/server/connection_handler_impl.cc:353] [C26] new connection 
[Envoy (Epoch 0)] [2020-06-10 06:53:51.959][30][debug][connection] [external/envoy/source/extensions/transport_sockets/tls/ssl_socket.cc:191] [C26] handshake expecting read 
[Envoy (Epoch 0)] [2020-06-10 06:53:51.959][30][debug][connection] [external/envoy/source/extensions/transport_sockets/tls/ssl_socket.cc:191] [C26] handshake expecting read 
[Envoy (Epoch 0)] [2020-06-10 06:53:51.961][30][debug][connection] [external/envoy/source/extensions/transport_sockets/tls/ssl_socket.cc:198] [C26] handshake error: 1 
[Envoy (Epoch 0)] [2020-06-10 06:53:51.961][30][debug][connection]  
[Envoy (Epoch 0)] [2020-06-10 06:53:51.961][30][debug][connection] [external/envoy/source/common/network/connection_impl.cc:192] [C26] closing socket: 0",The problem we faced is you have to give the complete chain in while creating the secret. We use SIMPLE for the TLS settings but hopefully this would work for ISTIO_MUTUAL as well. assuming your cert name is  mycert.pfx here is the commands to get the complete chain here is the key command. open the pem and remove the BAG attributes. so your secret command would look like this your gateway yaml would look something like this Hope that works.,"/u/sabyasachi2k  Thanks for the response , please find the below link …it is mentioned not to provide any TLSOptions in the  gateway for the mode istio_mutual. 
 https://archive.istio.io/v1.5/docs/reference/config/networking/gateway/#Server-TLSOptions-TLSmode But in the above example we are passing credential name . please help me in the understanding of the same .","/u/aravind 
You are correct when giving the ISTIO_MUTUAL it is not needed to give the certs. Sds takes care of it. We have not used this option.  We used SIMPLE and used the credential name and configured the mesh to make mTLS enabled for intra mesh communication.",thank you  /u/sabyasachi2k  for the info. can you share any example document or procedure for the above mentioned step. it would be really helpful.,"/u/aravind 
I already gave that in my previous reply. Let me know if that helps"
Istioctl installation with profile : citadel - Security - Discuss Istio,"Hi, Using istio( v1.5.0) for the first time and noticed that the installations from helm changed to istioctl with profiles. The CRD numbers which were 53 are around 25 in the current installation process. So do the citadel or any security related CRDs need to be installed separately outside of the istioctl install process ? 
Any direction is appreciated.","take a look at  https://istio.io/docs/ops/deployment/architecture/  citadel, gallay and pilot are now merged in  istiod ,  mixer  is removed.",Thank you. Noticed that after going over the docs again. The pace of change on istio’s versions are sometimes scary 
NGinx streaming to Istio Gateway - How to expose externally - Security - Discuss Istio,"Hello everyone, good morning! I need some assistance on my case. In internal network, I am using CA and certificate, both self-signed and I configured them into a secret that is being set in the tls, credentialName of my gateway object. This certificate has in its SAN “*.mydomain.com”. Outside my cluster, I have an NGinx with a fix IP, that is registered into my internal DNS as  http://mydomain.com . With the same certificate, not using http2, using https, I would be able to have multiple gateways, in different namespaces, using the same secret, and having these gateways hosts of subdomain, for example, Gateway 1 as  http://app1.mydomain.com  and Gateway 2 as  http://app2.mydomain.com , but both linked to the same secret. The NGinx outside the cluster does an stream to the Istio Gateway (Service exposed as NodePort) as below: For internal network it is fine but now I need to expose that into the internet. I tried to use another NGinx in the DMZ network as a reverse proxy to the NGinx that does the stream but without success. I am always receiving SSL handshake error. Does anybody have similar topology or could help me to solve that in a different way? Thanks everyone for your time."
Ingress/egress/sidecar proxies not running when using SDS in istio 1.5.0 - Security - Discuss Istio,"I installed istio 1.5.0 using helm template with demo_values.yaml and following options. –set global.controlPlaneSecurityEnabled=true     --set global.mtls.enabled=true --set global.sds.enabled=true --set global.sds.udsPath=“unix:/var/run/sds/uds_path” Any service which uses envoy-proxy including istio-gateways and sidecar proxies is not able to start. it’s failing at fetching configuration using SDS. Below are the logs from a sidecar container. Does anyone has any idea how to deploy istio-1.5.0 mesh with SDS and mTLS enabled. Any configurable option that I missed above ? Note: istio-pilot, istio-proxy and telemetry pods are running fine even though they use sidecar proxy. Only difference i found in config is presence of ‘–templateFile=""/etc/istio/proxy/envoy_pilot.yaml.tmpl""’ in these sidecars which is not present in applications sidecars/ingress-egress-istio-gateways",Hmm… I think SDS is broken in helm. It was an Alpha feature in helm and we did not give high priority to fix it. Is there a reason you can’t use istioctl? Or you can choose to use the secret volume mount with helm.,"Yes, we can use istioctl. In fact, I was going to try that next but got a little confused with the options to enabled SDS in istioctl. I guess it uses the same options as helm. Will the following work ? 
 istioctl manifest apply --set values.global.sds.enabled=true 
Do I need to add  udsPath  as well ? can you help with all applicable options if I want to enable strict mTLS with SDS ? 
Secret volume mount we have already tried and it works well. We just want to explore SDS more since it brings few advantages over file mount ( https://istio.io/pt-br/docs/tasks/security/citadel-config/auth-sds/ ).",/u/rajat  Did you get this working? We are in the same boat.,"using helm ? NO. 
I tried the ‘istioctl’ way and it went well. Following options got us mTLS enabled globally. bin/istioctl manifest apply --set profile=demo --set values.global.controlPlaneSecurityEnabled=true --set values.gateways.istio-ingressgateway.sds.enabled=true --set values.global.sds.enabled=true --set values.global.sds.udsPath=“unix:/var/run/sds/uds_path” --set values.global.mtls.enabled=true","/u/rajat  I am not using helm, using Istioctl + kubectl. It seems to me that SDS is broken on this version… I cannot get it working on my custom gateway… I’ve enabled sds and the certs are not being picked-up If I put SDS as path I get this If I remove it and just use the credentialsName only I get this } its so frustrating. We have multiple certs so we need to use sds otherwise I need to change the mounted certs"
MTLS not working properly on 1.6 - Security - Discuss Istio,"Here is our setup. It’s an azure AKS cluster. 
sidecar injection enabled on the namespace level. 
Peer authentication created for the namespace with PERMISSIVE mode. 
A gateway, virtual service, and destination rule are created for allowing the primary to the service. Is there anything else needed for MTLS to work properly? I could see a lot of requests with connection_security_policy as none or unknown though all the pods have sidecars. in some workloads, if I do a normal curl to the service URL, it works and connection_secruity_policy is shown as mtls but when I do a curl with -H ‘Host:myhostname’ it still works but its not MTLS then. Need help with this. I see very few documentation for 1.6.x and there is lot of confusion on all. Can we have a better steps or requirements on how to handle MTLS on 1.6.x?"
"Best practices for mounting egress caCertificates (Trouble with: Envoy proxy is NOT ready: config not received from Pilot (is Pilot running?): cds updates: 0 successful, 6 rejected; lds updates: 5 successful, 0 rejected) - Security - Discuss Istio","Hello, 
i’m using Istio 1.5.3. I’m trying to set up secure communication with mesh-external resources for which i need to import own caCertificates to use in the DestinationRule: I understand that the file /etc/istio/egressgateway-ca-certs/CA-CERTS.pem needs to be mounted to the sidecar proxy from which the egress traffic originates. This can be done either with annotations in the deployment spec, or apparently by using a dedicated egress gateway and using the egressgateway-ca-certs secret. Now, here is the problem: The cluster is scaled down every night, and upon scaling up in the morning the Istio Sidecars  of almost all pods fail to start with the following error: Envoy proxy is NOT ready: config not received from Pilot (is Pilot running?): cds updates: 0 successful, 6 rejec   ted; lds updates: 5 successful, 0 rejected This seems to affect those pods that do NOT have that /etc/istio/egressgateway-ca-certs/CA-CERTS.pem file available in their sidecar. Those that do start up just fine, and if i remove the caCertificate line from the destination rule, then all others start up too. It kinda does make sense - those pods would not be able to perform what is required by that destination rule. However, they would never be required to do it, as the egress traffic won’t happen from them. Do i really have to mount the caCertificates that are used by the Egress of only one specific Pod to ALL Istio sidecars of all pods in the mesh (even in all namespaces!), even though it is just for egress from one specific pod? Is there some better solution? Thanks a lot in advance!","My two cents would be trying to see if you are able to use Sidecar limit the scope of this DestinationRule, thus it only applies to the workloads you care about. Other pods thus won’t get this effect in the CDS push. /u/howardjohn  might recommend better stuff.","Thanks! What i’ve done so far is to use exportTo to limit the destinationRule to the namespace that i want it to apply to at least, but i haven’t found a way to limit it to specific sidecars. The latter would solve the problem of course. Right now it seems that the default behaviour of a destinationrule is that it becomes available in all namespaces despite being installed into a specific single namespace, and it will prevent proper pod startup across the entire mesh in all namespaces for all pods that do not mount the referenced caCertificates file. Isn’t that even a security problem? 
Someone who can install destinationrules to one namespace might be able to negatively impact namespaces that he has no access to otherwise. One could write a “destinationrule-bomb” that prevents proper pod startup across the entire mesh.",Have you tried to use istio-egressgateway and mount the certificate only there? You could limit the DR only for egress namespace.,"Thanks! Yeah, that works…but it feels a bit like a workaround to be forced to put the egress gateway into an own namespace just to deal with that destinationRule behaviour there. Also, redirecting the traffic through an egress gateway doesn’t look as nice in kiali, as the service to the egress gateway then shows up in red if there are problems, but that one might be used by many different outgoing connections. (I’m not trying to be negative here, just pointing out disadvantages of that approach)","I’m glad that I could help. I agree that it’s not ideal, but this is open source project so that everybody can submit his/her ideas. "," I think the best solution would be that the envoy proxies do start up with missing caCertificates, but then refuse to serve that traffic if it happens. Just like they would do with a wrong caCertificate or server certificate. 
But that’d be a change in envoy, not istio."
Redirect to authentication server - Cookies are not forwarded - Security - Discuss Istio,"Hi, I’m running istio 1.6.1, and i created an envoy filter to the gateway to redirect traffic of non authenticated user to the IDP server (in my case keycloak). This first part is simple, and it works fine. 
My problem is that after authentication succeeded, the user must be redirect to its original url he gave, but the cookies set during the authentication flow are not forwarded to the “redirect_url”. 
AFAIK, the browser should do the job my itself. 
Can you please confirm my expectation. Did i miss something ? Thanks."
How make AuthorizationPolicy work? - Security - Discuss Istio,"Hi all, I’m trying to make AuthorizationPolicy without success. 
I have defined the following deployments for hostname and downstream services, where hostname service accesses downstream service via a HTTP call to / at port 80 with service account attached to hostname deployment: This all works (hostname service obviously can connect to downstream service). 
Now when I try to apply the following It blocks the traffic to downstream service with “RBAC: access denied” for all hosts and services (including traffic from hostname service). When I try to enable mTLS with: I get “empty reply from server”. When I try to force it to use https (with NodePort exposed to host on port 30000 to hostname:80) I get: After some experiments I’ve noticed that now I don’t get the “empty reply from server” when applying the mTLS 
PeerAuthentication rule but even with it I still get the RBAC access denied after applying AuthorizationPolicies My understanding is that enabling mTLS with the above PerrAuthentication will “do the trick” and there’s nothing else required. For reference I have the following defined: One more thing is that when I exec the following in one of hostname’s pods I don’t see the  X-Forwarded-Client-Cert  header mentioned in  https://istio.io/latest/docs/tasks/security/authentication/authn-policy/#auto-mutual-tls","So first I hope to reproduce the error , I am wondering if you are following the task to do all the steps you mentioned above? https://istio.io/latest/docs/tasks/security/authentication/authn-policy/?_ga=2.214993822.882299681.1592779213-997904654.1587679186#auto-mutual-tls .","/u/william_li  I guess so. I’m loosely reading docs and trying to come up with a similar setup (as described in the original post). 
Anything particular I should pay attention to from the task? One thing it would be good to clarify is: in which namespace the PeerAuthentification should reside granted that all the services I have are in default ns? I guess that should be in default ns as well but some docs mentioned  istio-system  hence my definition as above","Hi  /u/pmalek am i understanding right you apply both deny and allow Authorization policy? if i.e the case then deny policy have the higher priority then the allow policy.therefore deny policy is evaluated first. 
see here for more information  https://istio.io/latest/docs/concepts/security/#authorization-policies And the peerAuthentication you apply  here its means that you enable mtls in the mesh. 
(for communication in the mesh). if  you also enable mtls for particular namespace or workload. see here for more information  https://istio.io/latest/docs/concepts/security/#peer-authentication May this will help you.","Thanks for your post. So, it seems that most of my problems came from an incorrect yaml syntax. Also another important bit is (as denoted in the SO answer below): The answer here explains it:  https://stackoverflow.com/a/62534478/675100"
Error using tls MUTUAL in DestionationRule for external Service - Security - Discuss Istio,"Hey Guys! We have a service inside our Mesh that communicates with an external server using MUTUAL authentication. For that, we have created: A ServiceEntry for that service listening on Port 443 A DestinationRule with tls mode   with provided   and   referencing a mounted certificate into Sidecar (via annotation). We a new POD starts, istio-proxy never gets Ready. It prints the following message: And, right after that, a lot of: We are using the following istio 1.6.2. 
Can anyone help with this?","Hey guys. It turns out that, despite de documentation ( https://istio.io/latest/docs/reference/config/networking/destination-rule/ ),  caCertificates  is a mandatory attribute when tls mode is MUTUAL (which makes perfect sense). We were not providing it to skip server auth for test purposes and that is why the error happened."
Citadel generated certificates don't match the ones returned by the openssl command - Security - Discuss Istio,"Hi folks, Before asking my question, here is the setup: automatic side injection is enabled for the default namespace and mtls is enabled for all the applications in it. The applications running in this namespace have been created thanks to this  https://github.com/istio/istio/blob/master/samples/bookinfo/platform/kube/bookinfo.yaml  and I’ve created another deployment/serviceaccount/service named bookinfo-reviews-hps which is a copy of bookinfo-reviews to perform some tests. To check the validity of the certificate generated by Citadel, I executed the following command: The result is the following: The first certificate is for the SAN URI:spiffe://cluster.local/ns/default/sa/bookinfo-reviews-hps and is valid until the 20th of March 2020. In the  https://istio.io/pt-br/docs/concepts/security/#kubernetes-scenario , I could find the following explanations: 
 
 
 The certificate isn’t the same as the one returned by openssl and it’s valid for one hour (due to my modification of the parameter --workload-cert-ttl set to 1h) 
 
 
 
 
 
 My questions are: Thanks a lot for your help, Hugo","Hello, I still don’t understand when I check the certificates in Envoy with the command  kubectl exec -it <pod_name> -c istio-proxy -- curl http://localhost:15000/certs , I see a “cert_chain” which expires in 24 hours like the one returned by the openssl command but the serial number is different. Any ideas? Thanks, 
Hugo","Hello, I understood why the certificates returned by the openssl command and the one shown in the admin interface aren’t the same. I installed istio with a custom configuration and citadel was enabled so I think there were some kind of double generations of certificates since istiod generates certificates as well. I re installed istio with the default profile and everything is ok. For those who want to tune the certificate TTL, setting the  SECRET_TTL  parameter ( https://istio.io/docs/reference/commands/pilot-agent/ ) in the configmap  istio-sidecar-injector  (in the  config  section look for the  env  section under  template ) does the trick. Unfortunately, I didn’t find any templating to add it from the IstioOperator. By the way, I’m using the version 1.5. Thanks, Hugo","Hi  /u/hugo , I have enabled mTLS for mesh globally, sometimes for pod to pod communications fails with the below error. I have not enabled istio_cni. This gets fixed if I restart the istio-pilot deployment. Getting this issue very frequently. Is this something related to your issue. you could be able to help me? upstream_transport_failure_reason"":""TLS error: 268435703:SSL routines:OPENSSL_internal:WRONG_VERSION_NUMBER"
Authorization Policy - ISTIO - Security - Discuss Istio,"Hi, 
I have a requirement where the traffic for pods in a namespace must originate from that namespace or a specific url if hit from postman. I put in the following auth rule and it blocks traffic to all pods. mTLS is enabled. I tried the folllowing and it allows traffic from the host but not from within the namespaces 
apiVersion:  http://security.istio.io/v1beta1 Anh help please.","Can you explain what you would like to see vs what you actually see? If i understand correctly, the first policy would block all request if they are not coming from dev namespace, and with HOST header not equal to  dev.mydomain.com . The second one would block all access except dev.svc.cluster.local and  http://dev.mydomain.com . What requests are denied/allowed unexpectedly? Also what does it mean  traffic from HOST , request with what host header?","/u/incfly  The first one does not allow traffic from  http://dev.mydomain.com  or the namespace. 
the second one allows traffic from   http://dev.mydomain.com  but not dev.svc.cluster.local. I would have thought that the first one should have allowed traffic originating from the dev namespace and traffic with the having the domain name  http://dev.mydomain.com , but that is not the case.",wierdly this works as expected,Yes. It should work as that expectation. And I’m glad you also got the results! ,"/u/incfly  wonder why the 1st rule was not working? any idea? 
The one with the DENY when the namespace is not “dev” and the host is not “ http://dev.domain.com ”","I’ve the similar case, where if I put  DENY  action, that action is not honoured. envoy dump is as below Corresponding AuthorizationPolicy is below Can someone suggest, what may be wrong here and why  DENY  is still served as  ALLOW  ?"
Istio pod to pod mTLS - Security - Discuss Istio,"When I initiate a https connection from my pod to another pod, between the sidecar proxies the connection will be istio mTLS, but will it change my https connection to TCP or https remains same and the connection will be https with istio mTLS","I think all the ingress and egress traffic of pod will go through and controlled by the sidecar envoy proxy. To be more specific, A sidecar proxy is attached to the Control plane, which manages and configures each sidecar in relation to its designated service. All network traffic from an individual service is filtered through the sidecar proxy, which operates as its own infrastructure layer. Also you can check some faq here:  https://istio.io/latest/faq/security/","Thanks  /u/william_li , Could you advise on the below issue if possible. I have enabled mTLS for mesh globally, sometimes for pod to pod communications fails with the below error. I have not enabled istio_cni. This gets fixed if I restart the istio-pilot deployment. Getting this issue very frequently. upstream_transport_failure_reason"":""TLS error: 268435703:SSL routines:OPENSSL_internal:WRONG_VERSION_NUMBER","Hi Dinesh, mTLS is mutual TLS which encrypts the connection automatically you do not have to give https. If you are using HTTPS then it is as good as asking for the proper certificates. try with http and to check if mtls is enabled you can use try to take a tcpdump as see if you can snifff into it."
Peer Authentication for workload without sidecar - Security - Discuss Istio,"kubernetes version 1.17 
istio version 1.5.2 we are currently bringing up 1 workload without sidecar and remaining 3 workload with sidecar in a same namespace. 
And we have created  peerauthentication for all the 4 work-loads. 
Want to know whether setting peerauthentication to PERMISSIVE on the workload without sidecar will have any effect on traffic from and to this workload.","cc  /u/yangminzhu ,  /u/incfly  take a look. please whether setting peerauthentication to PERMISSIVE on the workload without sidecar will have any effect on traffic from and to this workload.",No. Policy either peer authentication or the authorization only enforce at the workloads with sidecar. otherwise Istio can’t control the enforcement point.,"hi  /u/incfly , is it applicable to service entry also ?? (For  workload without sidecar)."
"Gateways, mTLS, & certificate revocation - Security - Discuss Istio","When configuring a Secure Gateway (SDS) and associated  -credential  secret, is there any way to handle client certificate revocation in istio? It seems that Envoy supports the configuration of a CRL but I don’t see any way to achieve this in the Istio docs.  If a CRL isn’t supported is there any mechanism that Istio can be configured with that would check for revoked certs?","CRL is not supported in Istio yet:  during TLS, a sidecar in Istio will check whether the certificate is expired but will not check whether it is revoked.",Thank you for the confirmation.,does anyone know when external CRL will it be supported?,You can raise a feature request in the istio github  https://github.com/istio/istio . Also I will record and help you escalate your request to the corresponding team,There are already 2 issues for the same.
Plugging in a new (ephemeral) CA certificate - Security - Discuss Istio,"We want to plug in our own CA certificate as described at  https://istio.io/latest/docs/tasks/security/cert-management/plugin-ca-cert/ . However, we have an unusual requirement:  , we’ll use an init-container to: Is this ‘ephemeral CA cert’ approach supported? I’m worried about  . The new istiod will get a new key and CA certificate. Proxy-to-istiod and proxy-to-proxy communications will then use a mixture of certificates signed by the old and new intermediate CAs. This may break the chain of trust, depending on how/when Istio distributes the intermediate CA certificate. I read  https://istio.io/latest/docs/ops/configuration/security/root-transition/  which suggests everything   automatically work, via the magic of Envoy hot restarts, but I’m not sure. The reason I have this unusual requirement is that my company has tight controls on the use of internal CAs. However, I expect anyone plugging in a long-lived CA cert will have a similar problem when it eventually expires. Also note that I want to use an emptyDir to store my CA’s private key rather than a Secret because my company generally doesn’t treat Kubernetes Secrets as sufficiently secure for storing TLS keys.","Yes, this will work. Write them to /etc/cacerts on the istiod pod with filenames of: “ca-key.pem” 
“ca-cert.pem” 
“cert-chain.pem” Istiod tries to mount cacerts into this dir, which you could just change to be an empty volume. 
As for the chain of trust, as long as they derive from the same root, it should be okay.","Fantastic, thank you. But I’m still unclear how/whether the newly-restarted istiod will trust a long-running proxy (myproxy1) that connects to it. This would work if the proxy presents myproxy cert   the   ca-cert.pem that signed it. Istiod would complete the chain of trust using its mounted root-ca.pem. Another good alternative would be if the proxy gets dynamically issued a brand new cert (myproxy’), signed by the new ca-cert.pem’, in which case I don’t care whether istiod completes the chain of trust by receiving ca-cert.pem’ from the proxy or looking it up from its local storage. But the chain of trust   complete if the proxy presents its original myproxy cert, and doesn’t send the original ca-cert. I have similar concerns about proxy1-to-proxy2 TLS, in cases where their certs were issued by the ca-cert and ca-cert’ respectively. I plan to test all this out but wanted to get a rough idea of feasibility and pitfalls first!","it will work as long as the root ca is same and old ca-cert.pem is not expired, i tested this mixed ca-cert.pem combination with self signed ca and it worked. I wanted to test the scenario of what happens when the signing cert (ca-cert.pem) is rotated before its expiry. Our security team also has concerns on using k8 as storing the cert, so I am also looking init sidecar solution similar to that  /u/phil_harvey  mentioned above. /u/ceposta  so far I have seen that by default istio creates  istio-ca-secret  secret and uses it, if  cacerts  secret is also present then istio gives precedence to that. 
But if  /etc/certs  is created by custom init container then will istio not try to re-create the self signed certs? Also i think this problem will be solved once vault integration is available.","I write article about replacing CA certificate, I think it would be useful for you. 
 https://zufardhiyaulhaq.com/Replacing-Istio-CA-certificate/","No, it checks on the file system for the certs in /etc/cacerts … it shouldn’t matter whether it’s mounted in or if it’s created by an init-container before istiod starts","When the init-container requests a CA cert from company’s root CA, does the returned cert-chain contain root CA cert as well? If so, then the cert-chain will push to Envoy sidecar, and mTLS handshake should work if envoy A has cert-chain and B has cert-chain’ (different intermediate CA cert + same root CA cert). If not, then there will be a traffic downtime, until all proxy sidecars receive the same cert-chain’.",Yes that’s exactly what happens. Thanks for the reassurance.
Mutual TLS with External Services - Security - Discuss Istio,"Hey guys. We have an Istio Mesh with Istio 1.3.8, mTLS enabled in our cluster. Now we have to connect to an external service (API Gateway) which uses Mutual TLS. They have sent us the Keys we need to use for accessing their services and we’ve configured our Mesh as Following: For mounting the provided keys into Istio sidecar, we’ve changed istio-sidecar-injector ConfigMap to add our secret into istio-proxy container. The issue is: only a few POD will communicate with that external service, but when any POD that was not restart tries to pull configuration from pilot, I can see the following warning in pilot logs: ""message:“Error adding/updating cluster(s)  http://outbound%7C443%7Cmtls-cluster%7Capigateway.company.com : Invalid path: /etc/external-certs/clientCertificate.pem” Is there a way to tell Istio to push this cluster only to the POD that will actually communicate with this service, so others do not need to mount the volume? Is there a better approach to mount the external certificates (like userMount annotation or any Citadel approach)? Thanks!","You can go explore sidecar api which is to solve this problem, explicit stating the depdendency ouf outbound clusters. only selected scoped services are pushed to designated workloads."
Add Istio policies for the same service in all name spaces - Security - Discuss Istio,"Hi Istio Experts 
We are using Istio (in GKE) for service authZ and JWT Check. Currently we are at istio1.2 and will migrate to 1.4 whenever GKE version is ready for that. 
In our world, we have multiple namespaces(almost for each team or developer). All those namespaces will have the same service(say it is foo). 
How can we add a JWT Policy which can apply to all foo services? And note that I can not enable JWT globally because there are some service(bar) doesn’t require JWT. 
As far as I know, I can do a policy like this for n1 namespces, is there any generic way for that? 
apiVersion: “ http://authentication.istio.io/v1alpha1 ” 
kind: “Policy” 
metadata: 
name: “jwt-example” 
namespace: n1 
spec: 
targets: 
- name: foo 
peers: 
- mtls: 
mode: PERMISSIVE 
origins: 
- jwt: 
issuer: “ https://kernel.integ.envs.broadinstitute.org/ ” 
jwksUri: “ https://kernel.integ.envs.broadinstitute.org/.well-known/jwks.json ” 
principalBinding: USE_ORIGIN Also, the same question for authZ policy. e.g., we want to block foo to bar in all namespaces. Thanks","Ping, can anyone give me some help? 
Thanks!","Recommendations from k8s and istio is to group security related config, such as Istio authn/z config, k8s rbac, within namespace. If you have multiple namespaces, each have some same “foo” service requiring JWT authentication, you will have to configure  policy in each namespace…"
Authentication policy returning 401 on cors OPTIONS call - Security - Discuss Istio,"I am using the alpha1 Authentication policy on istio 4.6 and it is not letting pass the OPTIONS call for preflight. The policy is applied on the service, is this the way it should be? If it is how can make the policy ignore the OPTIONS cors call to let the request reach the service?",/u/yangminzhu  I remembered you did a CORS Preflight change a while ago. This is 1.4.7. Does customer need to tweak a bit to opt-in the CORS prelight support?,I have seen this pull request  https://github.com/istio/proxy/pull/2558  . But it doesn’t seems to be working.,Do you have the policy yaml and the HTTP request to reproduce the issue?
Istio - PCI in scope environment - Security - Discuss Istio,"Hi, I would like to know if anyone has implemented k8s with Istio within a PCI DSS environment. And if so, did you achieve this with a single k8s cluster or did you implement x2 k8s clusters; one for the DMZ and one for back-end data. My angle is that with istios capabilities, one should be able to implement secure a solution with a single k8s cluster without the need to implementing ‘traditional’ DMZ architecture due to the zero trust capabilities within istio. Happy to hear your views. Thanks"
Security Event Logs - Security - Discuss Istio,"I’m new to Istio, but I have read the logging documentation.  However, I’m still confused about how to collect certain types of “security event” logs. For example, I must centrally collect all authentication events, failed authentication events, access attempts to audit trails (logs), changes to permissions/authorization mechanisms, etc.  I can see how to collect actual traffic and such, but I don’t see a method for collecting these security based events.  If someone has figured this out, I’d appreciate some guidance on where these types of events live.","I think some of these metrics (e.g. mTLS enable/disable, 401/403 HTTP response code) is available in the telemetry:  https://istio.io/docs/tasks/telemetry/metrics/using-istio-dashboard/ Some of them exists in the pilot/envoy logs but is more of implementation detail and could change anytime. In general, we may need to update the code to output more metrics about the security policy.","Hi. I am searching for the same. Our mesh use service to service authentication with mtls and authorization policies and we need a way to collect the security events like authentication success/fail and authorization success/fail. Is there a special label/marker for it? 401/403 will give me only fail authentication/authorization but I also need to have a successful login event and successful authorization check. 
Appreciate your help.Thank u"
RBAC controls over Egress traffic - Security - Discuss Istio,"Hi, I’m trying to limit the ability to call an “internet” endpoint to a single service (account) in the mesh. I’ve got outboundPolicy set to REGISTRY_ONLY and have whitelisted certain DNS names with ServiceEntries. However this allows anyone to egress to them, and I’d like to restrict that to a single principal. I can’t for the life of me work out how to do this, or even if it’s possible, but I’m probably just googling the wrong thing. This blog strongly implies that this is possible, but the follow-up with the details isn’t available: https://istio.io/blog/2019/egress-traffic-control-in-istio-part-1/ This issue is the only source I can find that talks about this, and I would guess for v1alpha3 I’d just reference the SE as the “service” here? However, even with RBAC set to “ON”, all services are allowed to egress, so clearly RBAC isn’t denying this by default - is there another step I need to take to get deny-by-default, then use the method above to selectively open (service, egress) pairs back up? Thanks! 
matt","I will look closely to the link you provided later. To give a quick answer, which Istio version are you using? The RBAC policy on egress/ingress gateway is added in 1.2 and is not released yet, you can use it but we’re still testing it and will add more documentation once it’s ready for public use.",Thanks for your reply! I’m on 1.2.2. Do you mean the functionality is there it’s just not documented yet? Happy to look in the 1.3 prelim docs and try it out if it’s documented there?,"We have open-sourced an  https://github.com/banzaicloud/istio-external-demo  which demonstrates a possible solution for this use case. For more details, check out the related  https://banzaicloud.com/blog/istio-external-demo/ ."
Question about istio-ca-secret stored as k8 secret - Security - Discuss Istio,"1.5  has now better security compared to previous versions because the key and cert arent stored as k8 secrets. but istio-system has  ca-key.pem  in   istio-ca-secret , does it mean that this key can be used to sign any cert that can be trusted inside the mesh? if that is true then is it possible to keep this secret into memory instead of k8 secret?","Hi  /u/deepak_deore 
AFIK  By default, Istio’s CA generates a self-signed root certificate and key, and uses them to sign the workload certificates Which are stored in secrets. but not know much about keep why it is not in memory. but may be it make easy to do "" Plugging in existing CA Certificates"" or use external CA. not sure on this.","This is true, you could replace this pen with your own certificates generated with OpenSSL and then use them to create this secret. Istio CA will use them to sign the workloads certs. This way you could also rotate them when needed. More at  https://istio.io/docs/tasks/security/plugin-ca-cert/","yeah, i am aware that this secret is used for custom ca. 1.5 now doesn’t keep certs as k8 secret which is great security improvement but keeping the root cacert as k8 secret makes it insecure, so i my question was more towards that, may be in future istio will have a way to provide custom ca cert more securely than using k8 secret","The k8s secret that stores the cacert is in the istio-system namespace. Which is not accessible from other namespaces. If we don’t want to sign CSR for a namespace, we can add a support to configure namespaces in Istiod.  /u/oliver"
Keyfactor New CA Provider Integration - Security - Discuss Istio,"Dear security working group, I am an engineer with  https://keyfactor.com , a PKI software vendor. We’ve been developing an Istio CA provider that issues mTLS certificates through our certificate management platform. This allows organizations’ DevOps teams to easily issue Istio certs from any corporate-sanctioned PKI owned and managed by their InfoSec group. We are preparing to issue a pull request for the changes in  https://github.com/thedemodrive/istio/pull/3/commits/a4085418ab01655b1ed64457c40f8cdd084033b3  and wanted to provide advance notice here. Thanks, JD Kilgallin, 
 mailto:jd.kilgallin@keyfactor.com","Thanks for the notice,  /u/jdk .  /u/oliver"
Why css and png are not accessible? - Security - Discuss Istio,"Hi all I have created an Ingress, Deployment and Service as follows: When I call  https://hw.service.databaker.io/ , it blocks: CSS and PNG. What am I doing wrong? I am using Istio 1.52. Thanks","Could you follow this and configure your ingress gateway?  https://istio.io/docs/tasks/traffic-management/ingress/ingress-control/ . This 404 is probably due to some misconfiguration on the gateway and routing, not security."
Empty subject in x-forwarded-client-cert - Security - Discuss Istio,"I am trying to get my client certificate common name in headers of my service, but unfortunately I am getting empty string for subject. X-Forwarded-Client-Cert: By=spiffe://cluster.local/ns/default/sa/default;Hash=afb15b2fa11e07b572fb8cc549a07a71b169bdd818199ab1c2ad90f6f05fb2aa;Subject="""";URI=spiffe://cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account Could you let me know do I need to use any EnvoyFilter or it is default behaviour? I tried with Istio 1.3 version. Empty subject means envoy is able to forward the information, but it is not able to fetch client certificate details?",hi - I’m seeing the same behaviour. Ay suggestions from the community would be much appreciated.,"How did you configure your secure ingress gateway? That must be configured with CA certificates in order to get certificate common name Please check the solution that I provided 
 serverCertificate, privateKey, caCertificates are mandatory to provide","Hi - what I’m looking for is really even more basic, by default subject Isn’t isn’t passed by envoy As part of the xfcc header, how do I configure the envoy proxy to turn this on? I don’t have an empty subject I don’t have a subject property at all. Thanks in advance","The x-forwarded-client-cert was fixed in  https://github.com/istio/istio/issues/8263 . The subject should be forwarded by configuring  https://github.com/envoyproxy/envoy/blob/e71d1622d622ab19dd962538908f1baa6e0483b1/api/envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto#L182 . EnvoyFilter could support configuring this  https://istio.io/docs/reference/config/networking/envoy-filter/ , could you check if subject is set to true? It is false by default  /u/lambdai  do you know if there are any docs about how to configure that?"
TCP mTLS encryption - Security - Discuss Istio,"I’m in a tailspin. I have a python project that opens a socket and prints what comes through. 
I stood up a dockerfile for that project, built an image, loaded that image into minikube. I have installed istio for minikube along with ksniff. 
I created yaml deployments of my docker image to the default namespace. I enabled auto-injection of istio sidecars using labelling. I labelled the default namespace such that it will get proxies. 
I have set my cluster to use auto-mTLS and checked to see “ISTIO_MUTUAL” and “PERMISSIVE” when I do a ""istioctl authn tls-check "". I added annotations to my deployment yamls to allow rewriteAppHTTPProbers. I have deployed two pods in my cluster (same image) and verified that they have istio proxies attached. 
I can look at the logs of one which is running my python code as the entry point, and exec a netcat command in the other to send some data across and verify that it arrives. Everything is good up to this point. When I use ksniff to watch traffic related to my pod with the open socket, I see my tcp packet come across the wire, but it is not encrypted. I can see the plantext right in wireshark. This is bad. I’ve exhausted checking everything that I know about so im just left wondering what it is that I maybe don’t understand. Any ideas? Happy to provide more info if I’m told what’s relevant. Thanks in advance",Could you share your meshpolicy along with any namespace level policy and destination rules you have in place. Also the service yamls if possible.
How to redeploy configuration - Security - Discuss Istio,"Hi Team, I want to change the following properties, My question is, how can I change it? Via  istioctl or istio_ca or yaml file? Is there some way from install yaml  file to redeploy it? Because I  installed Istion on my OpenShift via Operatior that use yaml file. Thanks. Barry"
AuthroizationPolicy for MESH_EXTERNAL ServiceEntries - Security - Discuss Istio,"As I understand it, AuthorizationPolicy enforcement happens in the server side Envoy’s identified by a policy’s selector labels, but MESH_EXTERNAL ServiceEntries don’t have a server side Envoy because they are external to the mesh. How do we enforce AuthroizationPolicy on ServiceEntries for resources outside the mesh?","I am not an Istio developer, however the way I have been thinking about it,  AuthorizationPolicy  is mainly for entities that have identity assigned by the Mesh, i.e things internal to the mesh. If you are using an egress gateway to funnel   MESH_EXTERNAL traffic out of the mesh, you could apply  AuthorizationPolicy  against the routes between workload -> egress gateway, restricting access to the target  hosts:  as long as you deny all egress traffic directly from sidecars. If you are doing direct egress from workload sidecars and don’t want the extra egress-gateway hop, you could take an approach like we do, which is to use the  https://istio.io/docs/reference/config/networking/sidecar/  to control which workloads each  ServiceEntry  is visible to. This effectively requires defining your  ServiceEntry s in a different namespace to the workloads using them and defining a  default  SideCar egress rule to give workloads visibility of only services in the same namespace (or istio-system). This is the suggested default  Sidecar  definition in the docs.","Adding onto Chad’s solution, If I’m understanding your problem correctly, I would say you would also want to have the  global.outboundTrafficPolicy.mode  setting set to  REGISTRY_ONLY . This would make sure  external communication is handled by the policies you’ve created and nothing is bypassed. https://istio.io/docs/tasks/traffic-management/egress/egress-control/#controlled-access-to-external-services"
Istio mTLS question - Security - Discuss Istio,"Hello, 
I’ve Istio 1.4.0 running on Kubernetes 1.15.9. I’m trying to achieve below but the more I read Istio documentation the more I’m getting confused. Let me put it in a simple way. 
First thing is, I want to have mTLS for maximum services (if possible). 
I’ve one   elasticsearch-master   pod with service exposed on   9300  . I’ve one   elasticsearch-data   pod with service exposed on   9200   and   9300  . When I’ve Istio’s default Automatic mTLS enabled, both of these pods work nice and a helathy ES cluster starts up. I think that’s because ES master and data nodes communicate over port   9300  . Also, I don’t want to access any of these ES pods from outside of K8S cluster. 
Now, I want to start one   Kibana   pod with service exposed on   5601  . When I start   Kibana   pod with Istio’s default Automatic mTLS enabled, it fails to start. Because it can’t connect to   elasticsearch-data   service on   9200  . I’m getting all kinds of SSL errors (may be because of whole mTLS thing?). I don’t know if it’s even possible to have this connection with this whole Istio’s Automatic mTLS enabled. Also, I want to access this Kibana from outside of K8S cluster. Appreciate your help. 
Thanks.","Ajit, 
Have u tried disabling mTLS will deploying kibana pod? 
Have u tried to disable sidecar just for kibana pod and see? 
Can u plz share SSL logs?",It’s working fine but I’ve to put port 9300 out of Istio between master and data. Kibana is not having any issues anymore.,"/u/incfly  Hi Jianfei, can you help to take a look? Thanks."
JWT Issuer Validation - Security - Discuss Istio,In my development environments I have multiple gateways setup with the same JWKS but the issuer is different. I noticed that JWT were able to authenticate with all the environments even though issuer was different. Is this expected? I assumed that Istio would validate that the issuer in the token matched the issuer setup in the policy but that does not seem to be the case. It just uses the key.
External CA key/cert expiration - Security - Discuss Istio,"Hi there, I have questions around the expiration of the external CA key/cert that’s plugged into Citadel. 
 
 
 
 
 
 Thanks!"
Citadel Health Checking - Security - Discuss Istio,"I am following this Link   https://istio.io/docs/tasks/security/citadel-config/health-check/ 
But i am not getting the desired output   https://istio.io/docs/tasks/security/citadel-config/health-check/#verify-that-health-checking-works   as shown.  Any help?",Could you please share the errors you get?,i do’t get any error message. Instead of output shows in the task i get nothing. When i run this command and i don’t get logs: kubectl logs  kubectl get po -n istio-system | grep istio-citadel | awk '{print $1}'  -n istio-system | grep “CSR signing service”
Restrict access from one service to another - Security - Discuss Istio,"Good day! We are thinking about deploying istio servie mesh in our cluster. One of the tasks is convinient way of restriction access from one service to another. In plain Kubernetes we can to it with Network Policies. 
With what kind of object we can achieve it in istio? Thank you!","Hi  /u/reistlin , In Istio you have a few options. If you’re using Calico for Network Policy, you can use Calico’s integration with Istio to  https://docs.projectcalico.org/master/security/app-layer-policy/ . Or, you can use  https://istio.io/docs/concepts/security/#authorization , which involves creating ServiceRole and ServiceRoleBinding objects. Finally, you can use one of several  https://istio.io/docs/reference/config/policy-and-telemetry/adapters/  that allow you to enforce access control. Hope that helps, 
Spike","As  /u/spikecurtis  mentioned, one of the options is to use Istio authorization. You can try this task to see how it works  https://istio.io/docs/tasks/security/authz-http/ . Istio authorization is usually used with authentication. If you decide to use mTLS for your service to service communication (which you don’t need to change any code in your applications), you’ll also get encrypted communication out of the box.","Thank you! Say I need one service has abilities to GET from another service. I am creating simple ServiceRole which allows GET to my httpbin service: And I am trying to bind this role to another service: How could I achieve that? I see the closest one is source.principal property, but that means I will need to create a service account for all services? Thank you!","K8s already created a default service account for each namespace you created (and you may guess, the name is indead  default ). Unless you specify otherwise, the pod running under that namespace will use the default service account. You can create K8s accounts and annotate your deployment to use that service account. However, it is recommended to use separate namespaces if you want your policy is also protected via K8s RBAC.","To add to what Diem said, I think you should create a service account for each service. If you use the default service account for the namespace, every application in the same namespace will have the same identity. This is no difference than just restricting the access to namespace-level (source.namespace: <namespace), rather than service-level. So if you have  httpbin  in namespace default like above, and  sleep  in namespace default or any other namespace, you can create a service account for  sleep  and use  source.principal  under  properties  or  user , and use (most likely)  cluster.local/ns/<sleep deployment namespace>/sa/<sleep service account>  to allow only  sleep  to have GET access to  httpbin .","Another choice you can try  Sidecar  to restrict a Service from accessing other services, this can work without authz. It works on networking layer.",You mean Kubernetes Network Policies?,Istio  Sidecar   https://istio.io/docs/reference/config/networking/v1alpha3/sidecar/  which introduced in 1.1,"Thank you! I am trying to use sidecar, but it seems does not work. Where is mistake? After applying this config IAM service still has access to all services","Hi  /u/reistlin , I was able to make blocking work as expected. Seems that default outbound traffic ppolicy is ALLOW_ANY . Here are  https://github.com/istio/istio/issues/15329   and  https://istio.io/docs/tasks/traffic-management/egress/egress-control/#change-to-the-blocking-by-default-policy 
Not sure if it still relevant but I spent few hours investigation such behavior. Hopefully it will help someone… Regards, 
Stepan"
AuthorizationPolicy and Namespaces - Security - Discuss Istio,"Hi 
I am trying to use authorization policies to restrict http traffic to only be allowed from other services within the same namespace and from the istio-ingressgateway. Within the same namespace I would like to be able to access all endpoints in all services but from the istio-ingress I only want to allow calling endpoints with the prefix /external/*. To implement this I created a deny-all authorization policy. And then two others, one using a rule with namespace = ‘istio-system’ and a to operation path = “/external/*”. And another one with from namespace =  . All policies are created in  . I have tried to get this to work as in the examples provided by istio but without greater success. I get ‘RBAC: access denied’ for all calls. Both coming from another service in the same namespace and when routing through the istio-ingress. 
Could someone point me in the right direction? Cheers","Ok, I’ll answer this myself  
To have namespace and principal as source rules you have to have mTLS enabled in your mesh. 
This is not stated in the reference part of the documentation but can be found in the ‘Tasks’ section as a note in one of the examples. 
Cheers"
Default Access Denied issue - Security - Discuss Istio,"I have deployed the nexus 3 repository manager and I can access the pod its IP to get to the default webpage or use curl on port 8081. 
The namespace is enabled with Istio injection and sidecars are deployed. 
No roles or rolebindings have been created. 
As soon as I create say a clusterip service pointing to the app: nexus, I get an immediate “access denied” with curl on the pod its IP and on the clusterIP, so my application is no longer reachable. I have no idea why. If I don’t create any service definition the application runs without a hitch. Any tips on where to look are appreciated. 
Why does creating a service like this suddenly render my app no longer reachable? 
If I deploy my app and service in another namespace with istio injection not enabled it works and I don’t get any access denieds. What in istio is blocking my app by default when creating a service? apiVersion: v1 
kind: Service 
metadata: 
name: nexus-web 
labels: 
app: nexus 
spec: 
ports: 
- port: 80 
name: http-web 
protocol: TCP 
targetPort: 8081 
selector: 
app: nexus 
type: ClusterIP on ClusterIP 
curl 10.111.53.235:80 
Access denied on pod IP 
curl 10.10.1.205:8081 
Access denied"
Setting origin identity (e.g request.auth.user) from upstream proxy header value? - Security - Discuss Istio,"Hi, our istio ingressgateway is only reachable via an authenticating reverse proxy. That proxy adds headers for the authenticated user (but no JWT). Is it possible to configure istio to use this header for the origin identity? If I understand istio correctly, what I’m looking for is setting the request.auth.user field in a filter(?) to a header value from the incoming request. Basically the opposite of this:  https://discuss.istio.io/t/question-decode-jwt-and-put-sub-into-a-request-header/1213"
"L7 protection (XSS, SQL injection) policies - Security - Discuss Istio","Hello. I’ve been trying to find a good way to implement L7 protection policies like XSS and SQL injection with Istio but haven’t had any luck so far. Something along the lines of modsecurity for nginx. What’s a good way to do something like this in Istio? I’ve looked at Envoy filters but none of the existing ones seem to fit here, so that would mean creating a custom one, not to mention the backward compatibility issue described here:  https://istio.io/docs/reference/config/istio.networking.v1alpha3/#EnvoyFilter Traditional API gateways like Kong and Apigee provide policies and/or plugins to deal with these kind of scenarios: 
 https://docs.apigee.com/api-platform/reference/policies/regular-expression-protection#abouttheregularexpressionprotectionpolicy-exampleblacklistpatterns 
 https://github.com/ror6ax/kong_injection","Currently there is no direct way to do this, you probably have to implement the code for detecting and preventing the XSS or SQL injection. Looking at the link you provided, it seems you want to execute a regular expression against the payload (or header) of a request to detect and prevent the XSS/SQL injection, is that right? One way is to use the EnvoyFilter with the Lua filter, I think this should be able to match the payload with regular expression. The other way is to write your own mixer adapter to do this, but the latency may be a concern as it introduces another network round-trip between envoy and mixer server. This is a good use case, could you provide some more information, like the way you’re wishing to use it and any aspects you care about for the policy? like supported Protoctol, performance and flexibility?  Thanks!","The use case is to have a generic enough way to prevent well-known attacks (e.g. OWASP’s Top Ten) without causing too much overhead, something like ModSecurity and it’s Apache and Nginx “connectors” do. I guess ideally I’d like something like a Mixer Adapter that can be running in my mesh and then it would act like a quota or RBAC adapter by blocking requests that are deemed dangerous. Currently the easiest and most reliable way to get something like this to work in a production environment would be to use ModSecurity via ModSecurity-Nginx but for that to work I would have to switch from Istio’s default Ingress controller to ingress-nginx ( https://github.com/kubernetes/ingress-nginx ), which would then bring about a whole new set of unknowns (e.g. is there any Istio functionality that   the default Ingress controller from Istio?) One other option I guess would be using a custom EnvoyFilter like you mentioned, and in fact I found something done along those lines ( https://github.com/octarinesec/ModSecurity-envoy ) but it’s very experimental, so any work along these lines would require extensive tests and hardening before it’s production-ready.","/u/carlosaml 
Thank you for the feedback, I think this is a very good use case, will update with some more concrete plan after some more research. Thank you!","Hi, 
I am from Octarine Security (we created the ModSecurity integration to Envoy). 
We actually have a product that integrates to Istio and provides a L7 security for threats such as SQL injection and XSS. 
I’ll be happy to provide more info if you interested.",So this XSS/SQLinjection protection is not enabled right now in istio?,/u/shemer_schwarz  can you provide more info around how i can do modsecurity integration,can you provide more info around how i can do modsecurity integration
Node agent fetches k8s secrets - Security - Discuss Istio,"According to  https://istio.io/docs/concepts/security/#node-agent-in-kubernetes  Citadel stores certificate and key as k8s secrets, so does Node Agent actually fetches certificate and key from k8s secrets and share them with Istio-proxy sidecar via a Unix domain Socket?",My understanding is that the node agent contacts Citadel like you said and transports the keys/certs from citadel to the proxies. The node agent doesn’t have access to the secrets directly.,"For workload SDS, Node agent will use the jwt associated with the workload service account, then creates a CSR for Citadel to sign the workload certificate, and delivers the key + cert back to the workload sidecar."
Envoy sidecar fails to standup (K8S / AKS / mtls / Vault CA) - Security - Discuss Istio,"My env is Istio 1.2.7 on AKS (1.4.8). With mTLS enabled. We have configured Vault as the CA using a self signed cert. The envoy container does not start … the log from the envoy proxy is below … The application container exposes port 80. Interestingly this happens only when I associate a clusterip service with the deployment. The deployment (pods, replicaset) on its own stands up. Any pointers would be great help. 2019-11-13T14:53:32.369872Z	info	FLAG: --applicationPorts=""[80]"" 
2019-11-13T14:53:32.369901Z	info	FLAG: --binaryPath=""/usr/local/bin/envoy"" 
2019-11-13T14:53:32.369905Z	info	FLAG: --concurrency=“2” 
2019-11-13T14:53:32.369909Z	info	FLAG: --configPath=""/etc/istio/proxy"" 
2019-11-13T14:53:32.369913Z	info	FLAG: --connectTimeout=“10s” 
2019-11-13T14:53:32.369917Z	info	FLAG: --controlPlaneAuthPolicy=“NONE” 
2019-11-13T14:53:32.369921Z	info	FLAG: --controlPlaneBootstrap=“true” 
2019-11-13T14:53:32.369924Z	info	FLAG: --customConfigFile="""" 
2019-11-13T14:53:32.369927Z	info	FLAG: --datadogAgentAddress="""" 
2019-11-13T14:53:32.369930Z	info	FLAG: --disableInternalTelemetry=“false” 
2019-11-13T14:53:32.369933Z	info	FLAG: --discoveryAddress=“istio-pilot.istio-system:15010” 
2019-11-13T14:53:32.369936Z	info	FLAG: --dnsRefreshRate=“300s” 
2019-11-13T14:53:32.369940Z	info	FLAG: --domain=“sw-system.svc.cluster.local” 
2019-11-13T14:53:32.369943Z	info	FLAG: --drainDuration=“45s” 
2019-11-13T14:53:32.369946Z	info	FLAG: --envoyMetricsServiceAddress="""" 
2019-11-13T14:53:32.369949Z	info	FLAG: --help=“false” 
2019-11-13T14:53:32.369952Z	info	FLAG: --id="""" 
2019-11-13T14:53:32.369955Z	info	FLAG: --ip="""" 
2019-11-13T14:53:32.369958Z	info	FLAG: --lightstepAccessToken="""" 
2019-11-13T14:53:32.369961Z	info	FLAG: --lightstepAddress="""" 
2019-11-13T14:53:32.369964Z	info	FLAG: --lightstepCacertPath="""" 
2019-11-13T14:53:32.369967Z	info	FLAG: --lightstepSecure=“false” 
2019-11-13T14:53:32.369970Z	info	FLAG: --log_as_json=“false” 
2019-11-13T14:53:32.369972Z	info	FLAG: --log_caller="""" 
2019-11-13T14:53:32.369976Z	info	FLAG: --log_output_level=“default:info” 
2019-11-13T14:53:32.369979Z	info	FLAG: --log_rotate="""" 
2019-11-13T14:53:32.369982Z	info	FLAG: --log_rotate_max_age=“30” 
2019-11-13T14:53:32.369985Z	info	FLAG: --log_rotate_max_backups=“1000” 
2019-11-13T14:53:32.369989Z	info	FLAG: --log_rotate_max_size=“104857600” 
2019-11-13T14:53:32.369992Z	info	FLAG: --log_stacktrace_level=“default:none” 
2019-11-13T14:53:32.369998Z	info	FLAG: --log_target=""[stdout]"" 
2019-11-13T14:53:32.370001Z	info	FLAG: --mixerIdentity="""" 
2019-11-13T14:53:32.370004Z	info	FLAG: --parentShutdownDuration=“1m0s” 
2019-11-13T14:53:32.370007Z	info	FLAG: --pilotIdentity="""" 
2019-11-13T14:53:32.370023Z	info	FLAG: --proxyAdminPort=“15000” 
2019-11-13T14:53:32.370027Z	info	FLAG: --proxyComponentLogLevel=“misc:error” 
2019-11-13T14:53:32.370030Z	info	FLAG: --proxyLogLevel=“warning” 
2019-11-13T14:53:32.370033Z	info	FLAG: --serviceCluster=“canreg.sw-system” 
2019-11-13T14:53:32.370036Z	info	FLAG: --serviceregistry=“Kubernetes” 
2019-11-13T14:53:32.370039Z	info	FLAG: --statsdUdpAddress="""" 
2019-11-13T14:53:32.370042Z	info	FLAG: --statusPort=“15020” 
2019-11-13T14:53:32.370045Z	info	FLAG: --templateFile="""" 
2019-11-13T14:53:32.370048Z	info	FLAG: --trust-domain="""" 
2019-11-13T14:53:32.370051Z	info	FLAG: --zipkinAddress=“zipkin.istio-system:9411” 
2019-11-13T14:53:32.370067Z	info	Version  mailto:root@2058c745b46d-docker.io /istio-1.2.7-323094605c9c4afead13b46eb8da7d96673d9c6e-dirty-Modified 
2019-11-13T14:53:32.370194Z	info	Obtained private IP [10.0.0.107] 
2019-11-13T14:53:32.370246Z	info	Proxy role: &model.Proxy{ClusterID:"""", Type:“sidecar”, IPAddresses: string{“10.0.0.107”, “10.0.0.107”}, ID:“canreg-c79f85864-p4s8g.sw-system”, Locality:(*core.Locality)(nil), DNSDomain:“sw-system.svc.cluster.local”, TrustDomain:“cluster.local”, PilotIdentity:"""", MixerIdentity:"""", ConfigNamespace:"""", Metadata:map[string]string{}, SidecarScope:(*model.SidecarScope)(nil), ServiceInstances: *model.ServiceInstance(nil), WorkloadLabels:model.LabelsCollection(nil)} 
2019-11-13T14:53:32.370254Z	info	PilotSAN  string(nil) 
2019-11-13T14:53:32.370589Z	info	Effective config: binaryPath: /usr/local/bin/envoy 
concurrency: 2 
configPath: /etc/istio/proxy 
connectTimeout: 10s 
discoveryAddress: istio-pilot.istio-system:15010 
drainDuration: 45s 
parentShutdownDuration: 60s 
proxyAdminPort: 15000 
serviceCluster: canreg.sw-system 
statNameLength: 189 
tracing: 
zipkin: 
address: zipkin.istio-system:9411 2019-11-13T14:53:32.370599Z	info	Monitored certs:  string{""/etc/certs/cert-chain.pem"", “/etc/certs/key.pem”, “/etc/certs/root-cert.pem”} 
2019-11-13T14:53:32.370609Z	info	PilotSAN  string(nil) 
2019-11-13T14:53:32.370711Z	info	Opening status port 15020 2019-11-13T14:53:32.370796Z	info	Starting proxy agent 
2019-11-13T14:53:32.370881Z	warn	watching /etc/certs encountered an error no such file or directory 
2019-11-13T14:53:32.370889Z	info	Received new config, resetting budget 
2019-11-13T14:53:32.370893Z	info	Reconciling retry (budget 10) 
2019-11-13T14:53:32.370901Z	info	Epoch 0 starting 
2019-11-13T14:53:32.376163Z	info	Envoy command: [-c /etc/istio/proxy/envoy-rev0.json --restart-epoch 0 --drain-time-s 45 --parent-shutdown-time-s 60 --service-cluster canreg.sw-system --service-node sidecar~10.0.0.107~canreg-c79f85864-p4s8g.sw-system~sw-system.svc.cluster.local --max-obj-name-len 189 --local-address-ip-version v4 --allow-unknown-fields -l warning --component-log-level misc:error --concurrency 2] 
[2019-11-13 14:53:32.398][13][warning][config] [bazel-out/k8-opt/bin/external/envoy/source/common/config/_virtual_includes/grpc_stream_lib/common/config/grpc_stream.h:86] gRPC config stream closed: 14, no healthy upstream 
[2019-11-13 14:53:32.398][13][warning][config] [bazel-out/k8-opt/bin/external/envoy/source/common/config/_virtual_includes/grpc_stream_lib/common/config/grpc_stream.h:49] Unable to establish new stream 
[2019-11-13 14:53:33.526][13][critical][assert] [external/envoy/source/extensions/transport_sockets/tls/context_impl.cc:838] assert failure: cn_index >= 0. 
[2019-11-13 14:53:33.527][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:81] Caught Aborted, suspect faulting address 0x5390000000d 
[2019-11-13 14:53:33.527][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:69] Backtrace (use tools/stack_decode.py to get line numbers): 
[2019-11-13 14:53:33.527][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   __restore_rt [0x7fb56b847390] 
[2019-11-13 14:53:33.532][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::Extensions::TransportSockets::Tls::ServerContextImpl::ServerContextImpl() [0xc6b31d] 
[2019-11-13 14:53:33.537][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::Extensions::TransportSockets::Tls::ContextManagerImpl::createSslServerContext() [0xc71620] 
[2019-11-13 14:53:33.541][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::Extensions::TransportSockets::Tls::ServerSslSocketFactory::ServerSslSocketFactory() [0x8f57b6] 
[2019-11-13 14:53:33.546][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::Extensions::TransportSockets::Tls::DownstreamSslSocketFactory::createTransportSocketFactory() [0x8f1a8c] 
[2019-11-13 14:53:33.550][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::Server::ListenerImpl::ListenerImpl() [0xc4431b] 
[2019-11-13 14:53:33.555][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::Server::ListenerManagerImpl::addOrUpdateListener() [0xc48e1a] 
[2019-11-13 14:53:33.559][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::Server::LdsApiImpl::onConfigUpdate() [0xc5dffa] 
[2019-11-13 14:53:33.564][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::Config::GrpcMuxSubscriptionImpl::onConfigUpdate() [0xdd8f81] 
[2019-11-13 14:53:33.568][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::Config::GrpcMuxImpl::onDiscoveryResponse() [0xdd5f69] 
[2019-11-13 14:53:33.573][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::Grpc::TypedAsyncStreamCallbacks<>::onReceiveMessageUntyped() [0xdd6dfe] 
[2019-11-13 14:53:33.578][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::Grpc::AsyncStreamImpl::onData() [0xe013ed] 
[2019-11-13 14:53:33.582][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::Http::AsyncStreamImpl::encodeData() [0xe04ca4] 
[2019-11-13 14:53:33.586][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::Http::Http2::ConnectionImpl::onFrameReceived() [0xe74f09] 
[2019-11-13 14:53:33.591][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   nghttp2_session_on_data_received [0xe84aaf] 
[2019-11-13 14:53:33.596][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   nghttp2_session_mem_recv [0xe86787] 
[2019-11-13 14:53:33.600][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::Http::Http2::ConnectionImpl::dispatch() [0xe745e9] 
[2019-11-13 14:53:33.605][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::Http::CodecClient::onData() [0xdf85f6] 
[2019-11-13 14:53:33.610][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::Http::CodecClient::CodecReadFilter::onData() [0xdf901d] 
[2019-11-13 14:53:33.614][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::Network::FilterManagerImpl::onRead() [0xc82b69] 
[2019-11-13 14:53:33.619][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::Network::ConnectionImpl::onReadReady() [0xc7fc4c] 
[2019-11-13 14:53:33.624][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::Network::ConnectionImpl::onFileEvent() [0xc7f711] 
[2019-11-13 14:53:33.628][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::Event::FileEventImpl::assignEvents()::$_0::__invoke() [0xc7a180] 
[2019-11-13 14:53:33.633][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   event_process_active_single_queue [0x101313d] 
[2019-11-13 14:53:33.637][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   event_base_loop [0x10116e0] 
[2019-11-13 14:53:33.642][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::Event::DispatcherImpl::run() [0xc791af] 
[2019-11-13 14:53:33.646][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::Server::InstanceImpl::run() [0xc3a783] 
[2019-11-13 14:53:33.650][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   Envoy::MainCommonBase::run() [0x8dc17d] 
[2019-11-13 14:53:33.655][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:73]   main [0x8db3f8] 
[2019-11-13 14:53:33.655][13][critical][backtrace] [bazel-out/k8-opt/bin/external/envoy/source/server/_virtual_includes/backtrace_lib/server/backtrace.h:75]   [0x7fb56aa88830] 
2019-11-13T14:53:33.811958Z	warn	Epoch 0 terminated with an error: signal: aborted (core dumped) 
2019-11-13T14:53:33.811987Z	warn	Aborted all epochs 
2019-11-13T14:53:33.812025Z	info	Epoch 0: set retry delay to 200ms, budget to 9 
2019-11-13T14:53:33.873332Z	info	Envoy proxy is NOT ready: failed retrieving Envoy stats: Get  http://127.0.0.1:15000/stats?usedonly:  dial tcp 127.0.0.1:15000: connect: connection refused 
2019-11-13T14:53:34.012140Z	info	Reconciling retry (budget 9) 
2019-11-13T14:53:34.012333Z	info	Epoch 0 starting 
2019-11-13T14:53:34.013192Z	info	Envoy command: [-c /etc/istio/proxy/envoy-rev0.json --restart-epoch 0 --drain-time-s 45 --parent-shutdown-time-s 60 --service-cluster canreg.sw-system --service-node sidecar~10.0.0.107~canreg-c79f85864-p4s8g.sw-system~sw-system.svc.cluster.local --max-obj-name-len 189 --local-address-ip-version v4 --allow-unknown-fields -l warning --component-log-level misc:error --concurrency 2] 
[2019-11-13 14:53:34.035][32][warning][config] [bazel-out/k8-opt/bin/external/envoy/source/common/config/_virtual_includes/grpc_stream_lib/common/config/grpc_stream.h:86] gRPC config stream closed: 14, no healthy upstream 
[2019-11-13 14:53:34.035][32][warning][config] [bazel-out/k8-opt/bin/external/envoy/source/common/config/_virtual_includes/grpc_stream_lib/common/config/grpc_stream.h:49] Unable to establish new stream",/u/leitang is Vault supported in 1.2? I remembered in some release we disable the support due to some reason?,"Vault is supported in Istio 1.2, but not supported for Istio 1.3 due to the switch to new k8s service account format."
Is mixer not needed for RBAC in Istio 1.3? - Security - Discuss Istio,"Quoted from Istio 1.3  https://istio.io/blog/2019/announcing-1.3/#mixer-less-telemetry-experimental :  “We implemented most of the common security policies, such as RBAC, directly into Envoy”. Does this meant for service role and service role binding and  https://istio.io/docs/reference/config/authorization/istio.rbac.v1alpha1/ , mixer is not involved anymore?","Istio RBAC policies (ClusterRbacConfig, ServiceRole, and ServiceRoleBinding) are enforced in Envoy now.  /u/yangminzhu  may know more.","Yes, Mixer is not needed for RBAC and AuthorizationPolicy, IIRC, this was changed in 1.0."
Not able to create listener port with tls with a non-root user - Security - Discuss Istio,"When trying to add https listener with credentialName: xx-credential and mode: MUTUAL, we are getting following errors at proxy with a non-root user. [2019-11-12 14:30:24.050][18][debug][http] [external/envoy/source/common/http/async_client_impl.cc:109] async http request response trailers: 
‘grpc-status’, ‘2’ 
‘grpc-message’, ‘RDS: Failed to generate route http.8443 for node &{Kubernetes router [10.233.123.168] pep-ingressgateway-bd56f67d6-p99dv.pep  pep.svc.cluster.local pep  map[CONFIG_NAMESPACE:pep ISTIO_META_INSTANCE_IPS:10.233.123.168,10.233.123.168 ISTIO_PROXY_SHA:istio-proxy:a169a0c0cd86b51538c240e2d037fa8f7f5860ae ISTIO_PROXY_VERSION:1.1.3 ISTIO_VERSION:1.1.3 POD_NAME:pep-ingressgateway-bd56f67d6-p99dv ROUTER_MODE:sni-dnat USER_SDS:true istio:sidecar]  [0xc000d02a00 0xc000d02b00 0xc000d02c00 0xc000d02d00 0xc000d02e00 0xc000d02e80 0xc000d03000 0xc000d03100 0xc000d03200] [app=pep-ingressgateway,chart=gateways,heritage=Tiller,pod-template-hash=bd56f67d6,release=pep,pep=ingressgateway]}: buildGatewayRoutes: could not find server for routeName http.8443, have map[http.8080:[port:<number:8080 protocol:“HTTP” name:“http” > hosts:"" "" ] http.8445:[port:<number:8445 protocol:“HTTP” name:“http” > hosts:"" "" tls:<mode:MUTUAL credential_name:“xx-credential” > ]]’ [2019-11-12 14:30:24.050][18][warning][config] [bazel-out/k8-opt/bin/external/envoy/source/common/config/_virtual_includes/grpc_stream_lib/common/config/grpc_stream.h:86] gRPC config stream closed: 2, RDS: Failed to generate route http.8443 for node &{Kubernetes router [10.233.123.168] pep-ingressgateway-bd56f67d6-p99dv.pep  pep.svc.cluster.local pep  map[CONFIG_NAMESPACE:pep ISTIO_META_INSTANCE_IPS:10.233.123.168,10.233.123.168 ISTIO_PROXY_SHA:istio-proxy:a169a0c0cd86b51538c240e2d037fa8f7f5860ae ISTIO_PROXY_VERSION:1.1.3 ISTIO_VERSION:1.1.3 POD_NAME:pep-ingressgateway-bd56f67d6-p99dv ROUTER_MODE:sni-dnat USER_SDS:true istio:sidecar]  [0xc000d02a00 0xc000d02b00 0xc000d02c00 0xc000d02d00 0xc000d02e00 0xc000d02e80 0xc000d03000 0xc000d03100 0xc000d03200] [app=pep-ingressgateway,chart=gateways,heritage=Tiller,pod-template-hash=bd56f67d6,release=pep,pep=ingressgateway]}: buildGatewayRoutes: could not find server for routeName http.8443, have map[http.8080:[port:<number:8080 protocol:“HTTP” name:“http” > hosts:"" "" ] http.8445:[port:<number:8445 protocol:“HTTP” name:“http” > hosts:"" "" tls:<mode:MUTUAL credential_name:“xx-credential” > ]] We are using non standard port for https listener (8443) and running pilot-agent as non-root user. gateways dump: 
apiVersion: v1 
items:","Hi  /u/rajat_singh  if you are trying to setup ingress SDS for your gateway, please follow this user guide. 
 https://istio.io/docs/tasks/traffic-management/ingress/secure-ingress-sds/"
Issue with Istio 1.3.2 SDS not reloading tls cert and key - Security - Discuss Istio,"I can create a cert-manager 0.10 Certificate with DNS resolvers and I can see that the secret is ultimately created with the tls.key and tls.crt entries.  If I export the secret and base64 decode it, I can see that it was issued by Let’s Encrypt Staging/Prod.  However, cert-manager generates a temporary cert while the real cert is being fetched and SDS loads this cert.  I can execute a echo | openssl s_client -showcerts -servername  http://foo.example.com  -connect  http://foo.example.com:443  2>/dev/null | openssl x509 -inform pem -noout -text and see the cert returned from the istio-ingressgateway is cert-manager’s temporary cert, even though cert-manager has created/updated the secret which is in the same namespace as the istio-ingressgateway. A workaround is to kill the istio-ingressgateway and then the SDS agent in the pod will pick up the correct credentials. Any idea’s as to why this is or how I can debug what’s going on?","There was an issue with Ingress SDS and the fix is in 1.3.5. 
If the ingress-sds container has log like this  2019-09-26T12:41:12.701283Z	warn	secretFetcherLog	unexpected server key/cert change in secret application-connector-certs , then you hit the same issue. You can upgrade to 1.3.5 in that case. 
More context is here  https://github.com/istio/istio/issues/17409 ."
Is there a way for SDS service to listen on TCP sockets other than the UDS? - Security - Discuss Istio,"Hi, Currently in Istio, the SDS server and envoy talk only on Unix Domain SOckets. Is there a way that I can configure it to talk on TCP sockets. Please, let me know. Thanks","Currently UDS is the only option as it is safer than TCP socket. To support TCP socket, it requires work on installation, securing TCP connections and authentication at Node agent."
Istio Authorization using Keycloak - Security - Discuss Istio,"I’m trying to authorize my users using their roles. Here is my JWT from Keycloak My Authorization yaml files are as follows: I’m always getting 403 forbidden response. Please let me know what am I doing wrong here. Or please point me to a documentation Thanks in advance 
-Kannan",/u/yangminzhu  could you please take a look?,"/u/kannan_k_r 
Have you specified any JWT authentication policy on  record.default.svc.cluster.local ? You need the JWT policy in order to use the  request.auth.claims  property. Also you should use the full service name in ServiceRole? Replace  record  with  record.default.svc.cluster.local . Note, the ClusterRbacConfig, ServiceRole and ServiceRoleBinding are deprecated in favor of the new AuthorizationPolicy in 1.4:  https://istio.io/blog/2019/v1beta1-authorization-policy/"
Match authentication header - Security - Discuss Istio,"Hi, I want do quickly protect an endpoint and thought I could use a header matcher in the VirtualService to do this. I’ve more or less duplicated  https://istio.io/docs/reference/config/networking/v1alpha3/virtual-service/#HTTPMatchRequest  and done like this: The intention is that clients must set the  Authorization  header to the same value to be able to call the endpoint, but it doesn’t seem to work. The request goes through even without the header. Maybe I misunderstand the way header matching works? If there are other simple ways to achieve something similar (token, basic auth) I’d also like to hear about that.","I’m not sure why the VirtualService is not working but I suggest to use  AuthorizationPolicy  to do the access control as it’s more secure to do the access control on service side. AFAIK, the VirtualService only affects the client side routing which means any clients without Envoy or could bypass Envoy is still able to talk to the server without the header. See  https://istio.io/blog/2019/v1beta1-authorization-policy/#example  for more information. You can use the"
Authentication and Authorization with JWT get 403 - Security - Discuss Istio,"Hello, I have installed on my cluster Kubernetes, hosted on DigitalOcean and with a lot of microcervices already deployed, the latest Istio release. I have installed Istio with Helm with this options: helm template install/kubernetes/helm/istio --namespace=istio-system --set gateways.istio-ingressgateway.sds.enabled=true --set global.k8sIngress.enabled=true --set global.k8sIngress.enableHttps=true --set global.k8sIngress.gatewayName=ingressgateway --set certmanager.enabled=true --set certmanager.email=<my-email> kubectl apply -f - I modified the GW to use sds: 
 kubectl -n istio-system \     patch gateway istio-autogenerated-k8s-ingress --type=json \     -p='[{""op"": ""replace"", ""path"": ""/spec/servers/1/tls"", ""value"": {""credentialName"": ""ingress-cert"", ""mode"": ""SIMPLE"", ""privateKey"": ""sds"", ""serverCertificate"": ""sds""}}]' After that I have deployed a very simple APP(http-test) and I have configured the VirtualService. So If I do a ‘ ’ I get 200 OK Now, because in my infrastructure I already have a Keycloak configured, I would like to activate authentication and authorization on Istio. I have the default GW “istio-autogenerated-k8s-ingress” I configured the following policy: After that If make “curl  http://IP-GW/test ” 
I got 401 Unauthorized. So I retrieve a JWT 
 TOKEN=curl -X POST  -H ""Content-Type: application/x-www-form-urlencoded"" -d ""grant_type=password&username=test&password=test&client_id=client-test&client_secret=<secret>&scope=openid"" <keycloak>| jq  -r '.access_token' So If I do  ’ 
I get 200 OK So the Authentication works fine. After that I have activated the RBAC: So If I do ' I get 403 Forbidden(RBAC: access denied) this of course it’s expected So I have configured a ServiceRole and a ServiceRoleBinding: The JWT provided by Keycloak is like: So If I do ‘ ’ I get always “403 Forbidden(RBAC: access denied)” I don’t understand where is the issue! 
I tried to activate mTLS, but the result is always the same. Could you help me?","/u/yangminzhu  please take a look, thanks.","/u/unix3 
It’s probably because you don’t have authentication policy on  http-test.istio-system.svc.cluster.local  so that the JWT token is not authenticated on the  http-test  service. Could you add  http-test  to the target of the  gateway-jwt-policy  policy and try again? Note, the ClusterRbacConfig, ServiceRole and ServiceRoleBinding are deprecated in favor of the new AuthorizationPolicy in 1.4:  https://istio.io/blog/2019/v1beta1-authorization-policy/","/u/yangminzhu 
Thanks for your suggestion I have added the target  http-test  in  gateway-jwt-policy  and now it works."
Destination rule to set mTLS ignores port specification - Security - Discuss Istio,"Hi All, I have two services on test namespace, one on port 26500 and one on port 80 When I’m applying the following destination rule I would expect that only traffic to *.test.svc.cluster.local on port 80 will be encrypted. But it applied to nc-pod-svc service on port 26500 Is this the expected behavior?",Maybe you have DestinationRule defined in higher level with “*.cluster.local”?,"Found the problem, it was a misconfiguration, the destinationRule should look like:",So it’s just YAML level indent syntax issue. /u/idan_frimark  have you ever considered auto mTLS? This can remove all the need to figure out DestinationRule for mTLS purpose. https://istio.io/docs/tasks/security/authentication/auto-mtls/,"/u/incfly  Thanks, I want the ability to decide which in-cluster traffic will be encrypted and which not, so I’m not sure auto mTLS will be good for me currently.","You still have fully control over the mTLS enabled on which namespace/service. It’s only about removing extra step of configuring DestinationRule, which will be automatically configured.",/u/incfly  thanks! I will give it a try.
JWT Authentication always 401 - Security - Discuss Istio,"I use Authentication in istio1.1.3 and I apply an yaml like this: But I find only the first exact is working. 
After that I wanna delete the policy but after run  kubectl delete -f , it’s still working(return 401). 
I guess that there is another policy ruling this, But I can’t find it 
 policies.authentication.istio.io --all-namespaces  return nothing 
How can I know which policy respond the 401","What happens for other exact match in the rules? It may take sometime for the delete to propagate, did you still see 401 even after 5 minutes? You can try  meshpolicies.authentication.istio.io --all-namespaces  to check the mesh-wide policy.","other exact match will get 401 
 kubectl get meshpolicies.authentication.istio.io --all-namespaces  gets nothing. 
I use  kubectl delete -f xxx.yaml  to delete all related yaml. But the same thing happened a day later. 
Maybe It’s cache, but I don’t know how to flush it or restart which pod."
mTLS working just between some services with tls-check showing STATUS OK - Security - Discuss Istio,"I am trying to enable mTLS in my mesh that I have already working with istio’s sidecars. 
The problem I have is that I just get working connections up to one point, and then it fails to connect. This is how the services are set up right now with my failing implementation of mTLS (simplified): First thing to note is that I was using a NGINX pod as a load balancer to proxy_pass my requests to my API Gateway or my frontend page. I tried keeping that without the istio IngressGateway but I wasn’t able to make it work. Then I tried to use Istio IngressGateway and connect directly to the API Gateway with VirtualService but also fails for me. So I’m leaving it like this for the moment because it was the only way that my request got to the API Gateway successfully. Another thing to note is that Service A first connects to a Database outside the mesh and then makes a request to Service B which is inside the mesh and with mTLS enabled. NGINX, API Gateway, Service A and Service B are within the mesh with mTLS enabled and   shows that status is OK. NGINX and API Gateway are in a namespace called  , Database is in   and Service A and Service B are in another one called  . Istio IngressGateway is in namespace   right now. So the problem is that everything work if I set   mode to the gateway namespace and   to api, but once I set   to api, I see the request getting into Service A, but then it fails to send the request to Service B with a 500. This is the output when it fails that I can see in the istio-proxy container in the Service A pod: No messages in ServiceB though. Currently, I do not have a global MeshPolicy, and I am setting Policy and DestinationRule per namespace Then I have some DestinationRule to disable mTLS for Database (I have some other services in the same namespace that I want to enable with mTLS) and for Kubernetes API Then I have my IngressGateway like so: And lastly, my VirtualServices: One thing that I don’t understand is why do I have to create a VirtualService for my API Gateway and why do I have to use “mesh” in the gateways block. If I remove this block, I don’t get my request in API Gateway, but if I do, it works and my requests even get to the next service (Service A), but not the next one to that. Thanks for the help. I am really stuck with this."
Istio Open ID Connect Token Acquisition Policy Proposal for End User Authentication - Security - Discuss Istio,Proposal:  https://docs.google.com/document/d/1zRa97isgx6wPv7VBfDWqg3oDEipjqPav5dKKO-GMVCs/edit?usp=sharing This document proposes the addition of the “OidcPolicy” to the Istio authentication group to expose functionality introduced by the  https://docs.google.com/document/d/1mGpUsRgmA9wPB73trfTiB9YUuwYh-31iulYg9USxe0Y/edit#heading=h.7zgnj8bwqfld . Please add your comments/questions/suggestions to the document or in this thread.,"We presented this today at the Istio Security Working Group. Would love to get community feedback,  community participation is welcome!","/u/peter_chen   /u/tian_wang  I’m pretty interested in seeing this pushed through, is there an ETA on it? Seems like the original proposal is over a year old and still WIP. I’m evaluating istio and seeing if lines up with our roadmap for end user authentication. 
 /u/nick_smith  Noticed you owned the parent proposal, as well if you have any thoughts.","Yes, the work is still work-in-progress. There’s no official ETA but we might have a new version of Proof-of-Concept soon. Could you share more about your use case for end user authentication?","/u/peter_chen   Thanks for getting back to me. I have a similar use case that is outlined in the parent document, though my webapps are not Single Page Applications (SPAs). I’m adopting istio and was disappointed that it didn’t have support for token acquisition and session management. Fundamentally, I have a few webapps I need to host and would like transparent authentication for them.",Any updates on this? The existing solutions are a bit painful.,"Yes, that sounds like the use case we are trying to solve. This is still a work in progress but we hope to have an alpha we can publish soon. If you are interested in more detailed updates, you can follow up via Istio Slack instance’s  /c/12-security  and   channels.",Please see above. This feature is in active development.,Great! I found the  https://github.com/istio-ecosystem/authservice/tree/wip-code . Will test it as soon as possible.
SDS config for the SSL certs - Security - Discuss Istio,"Hi, I was trying out the SDS demo on the page 
 https://preliminary.istio.io/docs/tasks/security/auth-sds/ I was trying to understand where are the certs issued by the ISTIO are loaded into the envoy? Is there a way that I can verify the envoy is using the certs provided by Istio? I mean where can I see the mTLS listener config in envoy and how does the ISTIO configure it? I am looking for the SSL_context config too, I mean where does envoy look for the certs to be used for mTLS. Please, if anyone can point me to the config that would be great. Thanks"
Istio external certificate - Security - Discuss Istio,"Hi , We are using zuul api gateway instead of istio ingress gateway and we need to make zuul https secured. This is internally required to provide facebook login on our website.We followed the external certificate document  
and thus deleted the istio-default cert from default name space and installed a new cacert using the root, intermediate, key and ca-cert file.The cacert file gets successfully created in default namespace 
Once cacert is created we restarted the istio services e.g pilot and citadel. The issue is istio-citadel goes into crashbackloop and error shows as “certificate signed by unknown authority”. The certificate has been validated by ssl team and the same is correct. Please share if there could be any solution to the same. Regards 
Pooja"
[mTLS] Default RootCA for Client Certificates - Security - Discuss Istio,"Is there a way to configure a default (or are there already?) root CA certs for mTLS?  The mTLS configuration takes the server key and cert and a cacert for validating clients.  The cacert seems to be required, but what if the client certs only use already trusted CAs?  Can we skip the intermediate cacerts and use default trusted CAs? Is there a way to configure a global list of trusted CAs? Similar to  https://discuss.istio.io/t/certificate-validation-with-sds-enabled-on-ingress-gateway-and-mode-set-to-mutual/2196",/u/jimmychen  who has reviewed  https://github.com/istio/istio/pull/13363,"That might help, but I’m thinking more of this:  https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/auth/cert.proto Where is the certificateValidationContext configured? Does the one in the mTLS section (related to 13363) augment or override the trusted_ca in the context? Is the trusted_ca in the context only used inside the mesh or is it also for ingress?","Hi  /u/phlak106  when you config a Gateway CRD and specify  tls.mode to MUTUAL (example is  https://istio.io/docs/tasks/traffic-management/ingress/secure-ingress-sds/#configure-a-mutual-tls-ingress-gateway ), Pilot will generate a certificateValidationContext config for ingress gateway which is Envoy. 
That certificateValidationContext contains SDS config, so that Envoy will fetch ca cert from Gateway agent via SDS. Assume you create a k8s secret named bookinfo-credential, which has key, server cert and cacert. Gateway agent will query API server for k8s secrets, set up a map, with key bookinfo-credential mapping to server key/cert, and key bookinfo-credential-cacert mapping to cacert. Envoy will send SDS requests, one for server key/cert, and one for cacert. And the SDS request has a resource name is bookinfo-credential or bookinfo-credential-cacert.  Gateway agent looks up the map and sends back the resources. Envoy uses the fetched key/cert and cacert to config a mTLS listener. If you are using cert-manager, which only creates k8s secret with server key/cert. Then you have to manually create a generic k8s secret to wrap server key/cert and cacert ( https://istio.io/docs/tasks/traffic-management/ingress/secure-ingress-sds/#configure-a-mutual-tls-ingress-gateway ). Once   https://github.com/istio/istio/pull/13363  is in, you can still use cert-manager to create k8s secret with key/cert, and manually create a separate k8s secret to store the cacert. I am not sure if Envoy already supports cacert list. If that is ready, we can modify the gateway agent to support it as well.","Wait, hold up, I am confused now. 
IIRC the  Gateway  has nothing to do with Citadel. The  Gateway 's proxy or Envoy container connects to the  ingress-sds  container, which implements an ``SDS server, over the secure Unix Domain Socket (UDS). Ingress-sds runs a  SecretFetcher  control loop which is essentially a  ListWatcher  for k8s  Secrets  configured in  Gateway.Server.TLSOption.CredentialName . 
Am I missing something  /u/jimmychen  ? /u/phlak106  An alternate option to,   https://github.com/istio/istio/pull/13363 , would be configure the  Secret 's  cacert  with a ca-certificate bundle (maybe with the contents of /etc/ssl/certs/ ca-certificates.crt). Not the best but a bundle might be the best way at the moment. In my situation I created a helper controller that bridges this gap between cert-manager and istio-gateway. Essentially an adapter to convert cert-manager generated secrets to istio gateway recognized secret (type: generic) with an option to provide ca-certificates via a ConfigMap.","/u/nitishm  Thanks for the update! Gateway has nothing to do with Citadel. I was trying to type Citadel agent, which is Gateway agent in the ingress SDS deployment. A controller that converts the secret is a good idea!","The basic design is shown below, 
 If it is something that could benefit the istio community I would be willing to contribute this controller (after discussions with my team) ?!",I will pick up  https://github.com/istio/istio/pull/13363  this week. Let’s see if that solves the issue. If there are customers that still look for alternative solution. Your approach would be very helpful.  /u/oliver,"I see that Pilot ( https://github.com/istio/istio/blob/3dd9aa4dce25d3931670bdf467346ac7eb6867fb/pilot/pkg/networking/core/v1alpha3/gateway.go ) 
does create a CombinedValidationContext to configure Envoy with: I’d like to propose exposing more of the default validation context through the api and plumbing it through here. I have submitted a small PR:  https://github.com/istio/api/pull/969/files",This becomes mutually exclusive to SDS though right ? The DefaultValidationContext is not chosen if SDS is enabled. Am I understanding that correctly ?,"My understanding of the Envoy documentation is that they will be merged: So the Gateway seems to be configuring Envoy the way I would expect, but just doesn’t expose the rest of the options to be able to be set in the default validation context. This would seem to allow setting a default CA cert in the default context and if SDS doesn’t overwrite it (through the merge) then it would be used as expected.",Any update  /u/jimmychen ?,"Now with the new incomig Istio release-1.3, the client root CA could be stored in a separate k8s secret. So that the rotation of client root CA is independent of the rotation of server key/cert. User guide is updated as well. 
 https://preliminary.istio.io/docs/tasks/traffic-management/ingress/secure-ingress-sds/#configure-a-mutual-tls-ingress-gateway"
Using Gateway + VirtualService + http01 + SDS - Security - Discuss Istio,"In the document there is an example about Securing Kubernetes Ingress with Cert-Manager which is not using Gateway + VirtualService. I have tried to make it work with acme http01 but the certificate can not be issued as in log challenge I have 404 error. Is there any example that I can follow with the specifications I mentioned? I want to use Istio Gateway with   SDS   option for   TLS   and secure that by using cert-manager with http-01. According to the documentation I found some example like  https://istio.io/docs/examples/advanced-gateways/ingress-certmgr/  or  https://istio.io/blog/2019/custom-ingress-gateway/ . However these examples are using Kuberenetes Ingress resource itself (Not istio gateway) or like the second example is using   dns-01  . I need an instruction which including Istio Gateway with   SDS   option for   TLS   and secure that by using cert-manager with http-01. Istio gateway give me ability to use   VirtualService  . I have done like editing  istio-autogenerated-k8s-ingress . I deleted  TLS  and  HTTPS   part of this filem so the cert-manager can issue certificate. And I created another Gateway with  TLS  and  HTTPS  options and everything is working well. 
However is not clear to me why I can not only make my gateway to issue certificate by cert-manager and also use VirtualService refer to that Gateway!",/u/jimmychen  any insights about this?,"It is a bit tricky to use  http-01  due to 2 things: 
 
 
 
","/u/diemtvu  Could you, please, add a bit more details how to update virtualservice to make the ingress-gateway able to route to challenge server? 
We have the similar issues with http-01 challenge for cert-manager running in EKS v 1.12 with Istio 1.1.9","Let me correct myself first. my ingress rule was matching all paths, so the ingress rule that cert manager adds (for the path  well-known/acme-challenge/<some-hash> ) is not reachable. If you follow the example in  https://istio.io/docs/tasks/traffic-management/ingress/ingress-certmgr/ , you may not have to do (1). If you want to have ingress rules to match all paths like I did (I was using ingress-gateway, btw), you can add a match rule for  .well-known  path to route to the challenge service that cert manager created. However, as you see, you’ll need to find the service name at that time, so this solution doesn’t works for key rotation. I don’t know other better solution, except try to keep the ingress match rule more conservative. Number (2) is the problem when mTLS is enabled (globally) for your mesh.  Istio installation may add a default destination rule that turn on mTLS for all service. However, as mentioned above, the acme solver doesn’t have sidecar so that rule will also make the service unreachable (503). You may add a destination rule to disable mTLS for that service specifically (or even the whole istio-system namespace, and enable for those that needed, e.g telemetry and policy)","Thank you  /u/diemtvu . 
We have mTLS active. Manually created destination rule for specific service solved the issue. Certificate is happily created. Indeed, as you mentioned, the major obstacle is still left open - how to make automatic updates of the certificate work. In this case we cannot manually intervene with handcrafted destination rule for generated service name (cm-acme-http-solver-xxxx). Not sure is the second option is a way to go, I mean disable mTLS for the whole Istio-system namespace but a few services (telemetry and policy). In this case upgrades of the Istio versions could became a pain. Still thinking is it a way to go.",To summarize current attempts to make http01challenge working with mTLS enabled  https://github.com/istio/istio/issues/15148,One of the possible workaround for case with mTLS enabled globally ( number 2  described by  /u/diemtvu ). Certmanager Ingress is running on 8089. We can try to disable mTLS for this port inside  istio-system . It looks no other services are running in this port,Did you test this I approach. I did with no success; getting a 404 on the certificate generation. I’ll start debugging to find the guilty.,It works for me in Istio 1.1.6 and 1.2.5 with mTLS globally enabled.
External IDP not working for End-user authentication: No dynamic_metadata found - Security - Discuss Istio,New to Istio here. I’m running a bare metal k8s cluster with Istio 1.2.5. I’m trying to use my own IDP for end user authentication but seems not working. Checking the envoy log it always says “No dynamic_metadata found for filter jwt-auth”.,"How are the requests after the IDP sending along the token, in a header or in a url parameter?"
Ext_authz filter for HTTP protocol doesn't send request body field to Authz service - Security - Discuss Istio,"I’m tring to validate request body with ext_authz http filter, but I can’t recieve http-body field on my authz service. When I do the same thing on standalone EnvoyProxy, everythin works fine and I get body field of my request. What I’m doing wrong in Istio? 
curl -v -X POST -d “msg=Hello world!” --user username:password -H debug:true  http://vertx-simple-web-server.ott-demo.svc.cluster.local:8002/post","The issue was in old Istio-Proxy version. 
Problem solved."
Secure Kiali and Jaeger in Istio - Security - Discuss Istio,"I’d like to secure traffic to   and  . Currently I install both tools via the   and create a gateway and virtualservice to expose both services to the internet via HTTPS. Doing that, traffic between the browser and the internet-inressgateway is secure. But the traffic  between the internet-ingressgateway and the services Kiali and Jaeger isn’t. I could secure this traffic by installing Kiali and Jaeger to a different namespace where sidecar-injection and mTLS is enabled. But I wonder if there is something easier in istio that I have missed. 
Is there an easier or more istio-native way to secure the traffic? Cheers 
Christian","Note that in latest release of Kiali you can select if you want to expose Kiali service from http/https natively. 
So you would be able to combine this with how to expose this service externally. This is the details of the configuration: 
 For more info,  https://www.kiali.io/documentation/getting-started/  should be also updated about it."
Service Account custom attributes - Security - Discuss Istio,"Is there any way to add custom attributes (claims) to a Service Account?  Specifically I am looking for a way that when Namespace1.ServiceA makes a request to Namespce2.ServiceB, SerivceB can identify who (which service) is making that call and act accordingly.  Previously we were using a JwtToken with each request to build a identity but I am hoping that we can replace that flow with something from Istio.  I can read the namespace and service account from the  x-forwarded-client-cert  header and then reading the  URI  subelement and parsing that URI.  While this works, it feels like that is not the intended use of that header and I am worried about relying on something like that.  Basically I am hoping that Istio can inject a set of custom attributes based on the config of the service account or some other means. Thanks.","what custom attributes do you have in mind to associate with service account? We are hesitating adding additional attributes to certificate which may make key/cert provisioning over complicated and affect our security guarantee, and we’d like each attribute put in certificate are strongly verified. Our general recommendation is to use JWT to carry additional attributes, and bind them to service account that can avoid replay attack. /u/liminwang 
 /u/tao_li","I’m speaking specifically of service to service communication.  In my scenario there will be pods running in one namespace that will be from non-trusted or at least less-trusted sources.  Those services will be making calls to trusted (my) services in another namespace.  One of the things that I am wanting to use Istio for is to all me to assign an identity (ServiceAccount) to a pod that is external to the container that is running inside it.  This is working beautifully and I am able to determine the service-account and namespace by parsing the http headers in my trusted service.   You mentioned binding a jwt token to a service account, is there a way I can do this transparently to the container making the request?  I am not sure I explained this well, let me know if there are more questions.","If I understand correctly, you want your service to be able to determine the identity of the caller by parsing an HTTP header in the request, ideally set by Istio, without the client having to do anything special to manage its own identity.  Is just the name and namespace of the client enough for your purposes, or are there other attributes you would need to know about the client?",Yes.  I am currently able to determine the namespace and service account assigned to that service by parsing the URI in the  x-forwarded-client-cert  http header.  I was hoping Istio could attach some additional attributes i.e. claims that are effectively attached to the service account.  If this isn’t possible I can look them up via the namespace/service account combination.
Expired root certificate - Security - Discuss Istio,"Hi, we are currently running Istio v1.0.4 on our kubernetes cluster and recently had issue whenever we tried to deploy new charts via helm: I assume(!) it was because the certificate generated by citadel expired since the istio-ca-secret was older than > 1y: In order to solve the problem I removed istio and redeployed the chart (yeah - I was desperate   ). But the error still occured. I finally ended up with removing the istio-ca-secret (which obviously doesn’t get removed when removing the chart) causing Citadel to recreate the istio-ca-secret. Now my questions are: Are my assumptions correct? If yes, shouldn’t be there something like an automatic certificate renewal process offered by istio? Thanks in advance. Best regards 
Sebastian","Interesting. The default self signed root is valid for 90 days I believe? Root rotation is not a high priority for now, but something we need to support to reduce the friction as you mentioned here. As workaround, you can customized a installation with longer root TTL, which I believe, real prod root is definitely greater than 90 days. /u/oliver   fyi","Hi Seb, Sorry for the late reply. Have you run the Istio Citadel for more than 1 year? We had plan to enable the automatic root cert renewal process, but it’s not implemented yet due to our limited bandwidth. Currently, removing the istio-ca-cert and redeploying Citadel solves the problem (with done time to the workloads). Actually, we consider using the self-signed certs to be less common in production environments, where users usually maintain root certs offline and plug in the intermediate cert into Citadel. In that case, the users just inject a new intermediate cert in order to do rotation. Does this make sense?","Hi Oliver, sorry for my late response. Yes, this totally makes sense. Actually I just wanted to have some kind of confirmation that you are at least aware of this. Like you have mentioned it, removing the istio-ca-cert solved the issue. And yes, Citadel was running for more than one year  Best regards, 
Sebastian","Hi Seb, Just FYI, we have made the announcement to renew the root certificate without downtime. And the new root certificate is for 1 year: 
 https://istio.io/blog/2019/root-transition/","Hi Oliver 
So as i understood when i generate a new root certificate ( before it will be expired) and restart the Citadel it should be with 100% high availability and without any downtime. 
Can you please how the sidecar get the updated root-certificate? how this happened without restarting it? cause i saw that the sidcar container in a pod stay up Best regards, 
Hany",The Envoy sidecar will do a hot restart  https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/operations/hot_restart . You can read more here  https://istio.io/docs/ops/security/root-transition/#root-transition-procedure
"Jwt Authentication for a specific service results in ""upstream connect error or disconnect/reset before headers"" - Security - Discuss Istio","I have a sample helloweb service deployed in default namespace  that I can access through ingress-gateway If I set a jwtPolicy for the whole ingress-gateway I can see the JWT validation happens fine and with a valid Jwt token I can get access to this service. apiVersion: “ http://authentication.istio.io/v1alpha1 ” 
kind: “Policy” 
metadata: 
name: “ingressgateway” 
namespace: istio-system 
spec: 
targets: If however I try to set a Policy for just this service I get  “upstream connect error or disconnect/reset before headers” apiVersion: “ http://authentication.istio.io/v1alpha1 ” 
kind: “Policy” 
metadata: 
name: “helloweb-policy” 
spec: 
targets: Looking at the container logs of istio-proxy for helloweb-backend does not show any details.","What’s your TLS setting for helloweb-backend? Did you enable mTLS in the auth policy by default? If that’s the case, you need to modify your “helloweb-policy” to include the mTLS setting as well (or you can modify the destination rule to exclude the helloweb-backend from mTLS) cc  /u/diemtvu","I am working with  /u/chaturvedia . mTLS is enabled. However, when we add mTLS setting to the helloweb-policy (as shown below), all requests go through, even without a JWT token. apiVersion: “ http://authentication.istio.io/v1alpha1 ” 
kind: “Policy” 
metadata: 
name: “helloweb-policy” 
spec: 
targets:",Update on this issue. Service port needs name to be specified as per Istio guidelines. Once the service port name is added jwt auth works fine,I’ve been stuck on a similar issue for quite some time… Could you please share your final file? It would help a lot. Thanks!,"I think  /u/chaturvedia  solved this by naming the service port according to Istio guidelines, could you double check if this applies to you? And you can also check your authentication policy to make sure it has both mTLS and JWT spec.","Here’s my auth policy -> apiVersion:  http://authentication.istio.io/v1alpha1 
kind: Policy 
metadata: 
name: auth-policy 
spec: 
targets: Without the mtls bit, I get the same error with reason being connection reset. With it, I get connection termination. I don’t understand where service port comes into play.","Correction - Without the mtls bit, I get connection faliure, not connection reset…","Can you send us both the destination rules and policy in your system? Does it work if you keep the policy but remove the origins (jwt) part, or remove the policy completely? My theory is the destination rule may have incorrect TLS settings."
Cannot use JWT policy with an ExternalName VirtualService target - Security - Discuss Istio,"Kubernetes:  1.13.5 
Istio:  1.1.7 I have configured the following   service for  http://httpbin.org  in Kubernetes. I have also configured the following  as well as this   configuration With the above setup I have managed to access the external service (httpbin) through the Istio Gateway and my goal is to evaluate some Istio features. For example, a preflight CORS request which is working fine: Then I configure the following   in order to enable Jwt authentication However, when I try to access httpbin (via  httpbinext.foo.svc.cluster.local ) without a token through the ingress controller I am getting  200  while I was expecting  401 . I repeated the very same test for an internal httpbin service inside k8s ( httpbin.foo.svc.cluster.local ) and it works as expected Any help would be appreciated.","We don’t support authentication for services outside the mesh.  Authentication is implemented server-side in the service “sidecar” proxy, not the ingress gateway at present.","To be correct, we do support ingress in the same way as sidecar, but   for virtual service. In other words, you can set up JWT validation using target name is the ingress service name (e.g  istio-ingressgateway ). All traffic to ingress (for the intended port) will require JWT. But you cannot distinguish traffic for different virtual service.",I have verified that configuring the jwt policy for the  istio-system/istio-ingressgateway  works globally (with the limitation mentioned above). Thank you both for your input.
Istio RBAC require mTLS? - Security - Discuss Istio,"Hey guys, 
Simple question here but I do not find clear answer: does Istio RBAC needs mTLS to be enable? 
Because it’s not clearly mentioned (it is being said that you need to have a cluster with strict TLS though). 
Thanks.",“strict” TLS is referring to the mTLS mode:  https://istio.io/docs/reference/config/istio.authentication.v1alpha1/#MutualTls,Yes RBAC requires mTLS and/or jwt when you need to restrict access to authenticated identities (even namespaces).,"To add a bit on this, RBAC could work independently without mTLS/JWT if you don’t use any identities from mTLS/JWT. This is not very common but could still be useful in some cases, for example, you can deny requests based on its source ip or some custom header values.",Understood! Thanks 
Support SDS ingress sidecar for Egress Gateway deployment - Security - Discuss Istio,"/u/tao_li   /u/wenchenglu   /u/skydoctor  WRT to  https://github.com/istio/istio/issues/14039 . Forking this off from the original  https://discuss.istio.io/t/how-to-connect-namespaces-over-ingress-egress-gateways-only/2298  for Egress Gateway enhancements, so that we can continue discussing SDS support for Egress Gateway here. 
From the issue I can see  /u/tao_li  you assigned the task to yourself. Is this something you are definitely planning to add support for in the future istio release ? Would love to keep the ball rolling for this one!! https://discuss.istio.io/t/how-to-connect-namespaces-over-ingress-egress-gateways-only/2298/6",Unfortunately we have something more urgent coming up which means we don’t have bandwidth for now. Is this something you guys can help and we can provide guidance? Thanks.,/u/tao_li  We are definitely interested in helping out. I will discuss the logistics with my team and get back on this shortly.,/u/tao_li  I would like to start contributing to this task. Whenever you have time can you chalk out a few things I will need to do to get started ? Meanwhile I am sifting through the documentation and the codebase myself to see how this can be enabled.
Role or group based authorization for backend services - Security - Discuss Istio,"Good day to you. We configured ISTIO with policies to Is there a way to get a role or group based authorization, where some logged in user can access services in the backend and some logged in user are not allowed to? Thank you for any hints and best regards, 
Jan",Let me know if this helps  https://istio.io/docs/tasks/security/rbac-groups/  or if you have more questions.,"If you can mint a claim that represents the group information in your JWT token, you could then use Istio RBAC to enforce access control based on the claim.","Good day to you. Thank you both for your hints and I will research in this way. Best regards, 
Jan"
gRPC Validation loophole? [solved] - Security - Discuss Istio,When using the gRPC validation features within the Gateway it appears that incorrectly formatted JWT headers are ignored these are then allowed to flow into the services.  In the following case we have a poorly formatted value getting past the gateway. Is this a problem. Client View Application service view JWT values that are empty or missing are rejected at the gateway. Correctly formatted Bearer values appear to be tested and if invalid the requests never terminate on the service.,"Can you clarify the configuration you use? Do you mean using  https://github.com/istio/api/blob/868f99fbab121c68c0877878c71926b7bde8b6ea/networking/v1alpha3/gateway.proto  API to enable this enforcement? Afaik, we don’t have such validation option in gateway API. May be I misunderstand something? Thanks.",Here is the general YAML setup for using the gateway to validate the JWT.  I believe that the gateway is doing something as it rejects empty tokens.  There are also unit tests for validation however I dont know if these are for internal usage of JWT.  c.f.  https://istio.io/docs/ops/security/end-user-auth/,"Firstly, I noticed that your policy is applied on target name  ingress-gateway . I assumed you use the standard Istio installation, then this is probably not what you want. The name should be the name of the ingressgateway service, i.e  istio-ingressgateway . In other words, your policy may not be applied on any service yet. To confirm, you may try to check ingress config dump, and looking for JWT configuration in there (expected none with the current setting) While we on this, you may want to drop the peers (mtls), given traffic to ingress most likely from outside the mesh and doesn’t have mTLS support. If you need TLS, check out the TLS setting in the Gateway API.","Hi I modified my yaml with these changes with no effect,  I dont see any mention in the config_dump of any of the items in the Policy.  It  appears the policy is getting applied within kubernetes but not going any further. Yaml policy","Target shouldn’t have namespace (it uses the same namespace of the CR). Actually, webhook validate should reject this configuration. Can you run   kubectl get policy experiment-auth-policy -n istio-system -o yaml  and verify that it is the same as what you enter. It is a bug if the system accept the configuration above (but not the same as this one).","Hi,  Yes it was the same",Fixing the namespace issue appears to now authenticate the connections and block on failures.  I will repost information to my original message about not being able to authenticate now this is understood.  Thanks
Mutual TLS origination by Egress Gateway - Security - Discuss Istio,I’m trying to setup an external service with mtls using the  https://doc.istio.cn/en/docs/examples/advanced-gateways/egress-gateway-mtls-origination/ . Istio is version 1.1.2 deployed with helm. I’ve redeployed the egress-gateway with the client certificates and added the following (mtls is globally enabled): I think I followed the example but its not working and I’ve no idea whats wrong or where to debug. Any hints where to start debugging or whats wrong in my config?,"I suspect that your ServiceEntry does not have Istio sidecar. ISTIO_MUTUAL  means mutual tls terminated between Envoy sidecar, requiring both ends having Envoy and are part of Istio mesh. It’s not intended to use for mtls outside of the mesh(egress in your case)","So the DestinationRule should look like this? This is not working neither, I get a 503 and ‘upstream connect error or disconnect/reset before headers’."
Why do gateways require ClusterRoles? - Security - Discuss Istio,"In the gateways Helm chart, there is a  ClusterRole  and  ClusterRoleBinding  for the gateway service-account. In looking at the  proxy-agent  code under  pilot , I couldn’t see where it makes any calls to the Kubernetes API server. For grins, I ran  helm template  using the sample values file for deploying a custom gateway and then removed all the  ClusterRole  and  ClusterRoleBinding  resources. The deployment worked just fine and the gateway came up without any errors. It connected to the mesh and external traffic is flowing nicely. So why do we need  ClusterRole  and  ClusterRoleBinding  resources for the gateways child chart? Here’s my scenario. I want to deploy an ingress-gateway in each namespace for a specific app with it’s own  Service   NodePort / LoadBalancer  definition that’s separate from the main ingress-gateway in  istio-system . I’ll label my custom ingress-gateway with my own label and use that label in my  Gateway  selector definitions specific for that app. With this config, I can control traffic into my app through its own gateway. The problem I ran into is that the tiller I created in that namespace is granted  admin  access scoped to just that namespace, plus I create a special  Role  so it can also deploy Istio resources (e.g.,  VirtualService ,  Gateway ,  DestinationRule ) in the namespace. So that means tiller can’t deploy cluster-wide resources. I do this to restrict the blast radius so devs working in one namespace can’t mess with tiller in another dev’s namespace or mess with the cluster.",/u/liminwang   /u/yangminzhu  Could you please take a look?,"I think the gateway shouldn’t need it, I have a PR to delete these:  https://github.com/istio/istio/pull/13292"
Enable STRICT MTLS for external clients - Security - Discuss Istio,"I have a flat network and each pod has a routable IP. I have enabled MTLS - DestinationRule has tls MUTUAL (should not matter in this case) Policy - is said to STRICT TLS. I am using my own CA and want a client outside the mesh to access an MTLS enabled service inside the mesh. Istio-proxy logs on the service pod show has_user: false when client is external. 
Shows has_user: true when client is internal. Is it even possible to do what I am trying to do? In the migration  https://istio.io/docs/tasks/security/mtls-migration/  its mentioned existing clients using plain text.",I don’t think there will be a problem if you configure everything correctly. Could you be more explicit what’s the error you see? Are you using the same CA for issuing certs inside and outside the cluster? The external client connects to the Pilot to get the secure naming info?,"Thanks for checking back Oliver. The issue got resolved, the client cert I used did not have URI: entry in its SAN, hence it was getting rejected.","/u/oliver  - I got it working for an external client. But I have two clients, internal (in mesh) and external. To enforce in mesh client MTLS, I need DestinationRule. When I have DestinationRule with MUTUAL policy, then it blocks external client (which passes client certs) If I remove DestinationRule or use mode: DISABLE then it works. Have you tested this scenario?"
Failed to configure a TLS ingress gateway using SDS - Security - Discuss Istio,"When I configure a TLS ingress gateway using SDS wither Istio1.1.2 as docs : 
 Ingressgateway pod report warning: 
Warning  FailedMount  16s (x6 over 31s)  kubelet, 192.168.0.19  MountVolume.SetUp failed for volume “sdsudspath” : hostPat 
h type check failed: /var/run/sds/uds_path is not a socket file","Hi  /u/star_zhang , could you please provide more information about your environment? Are you running on GKE or other platform? What is the Kubernetes version you are using? Could you please use command $kubectl describe pod  -n istio-system and paste the output here? 
Thanks.","Did you use SDS before 1.1.2? 
Might be related to  https://github.com/istio/istio/pull/12688  due to the uds path was created without  type: Socket  in 1.1 and not cleaned properly in 1.1.2.  /u/quanjie_lin","There is no the issue with 1.1.0. 
I report an issue :  https://github.com/istio/istio/issues/13364"
mTLS between Grafana and Prometheus Istio 1.0.5 - Security - Discuss Istio,I’m looking to get some clarity regarding communication between Grafana and Prometheus. By default it appears Grafana is configured to pull from Prometheus over HTTP even when control plane mtls is enabled. Is this an accurate statement? We have a requirement that the connection between Grafana and Prometheus is encrypted. Is it possible to enable this? I’m also curious why these Pods are not deployed with a sidecar. Thanks!,/u/oliver   /u/quanjie_lin  for securing control plane with mTLS.,"Grafana and Prometheus are deployed in the istio-system namespace by default. The istio-namespace has sidecar-autoinjection disabled for obvious reasons (the autoinjector would never be ready as it would be waiting for the istio-proxy, which can’t be injected because the autoinjector is not ready yet…). You could solve this issue by deploying grafana and prometheus in a custom namespace which does have sidecar-injection enabled.","Thanks spekr. It makes sense that sidecar injection is disabled but I noticed that some of the pods in the istio-system namespace do have a sidecar, eg: Pilot.In this case the sidecar is part of the deployment.yaml and not injected. In general I expected that enabling control plane MTLS would encrypt all traffic between Istio components including the tools, Kiali, Grafana, Prometheus, etc. Are there other exceptions where traffic is not encrypted? For example, mixer seems to expose http endpoints for scraping metrics. Thanks again"
ServiceRoleBinding subject specification - Security - Discuss Istio,"Hi, What can be used as the value of the  user  field in the  subject  specification for a  ServiceRoleBinding  ? 
Is it only service account names? Thank you, 
Laszlo","The  user  field is checked against the  source.principal  attribute which is the URI in the SAN field of the peer certificate stripped the “spiffe://” prefix. 
Note this requires the authentication policy to be set to enable the mTLS in your cluster. You can also take a look at this example:  https://istio.io/docs/tasks/security/authz-http/#step-2-allowing-access-to-the-details-and-reviews-services",Thank you for the answer. Does that mean that the following two settings are equivalent? and,"Yes, and note they cannot be used at the same time."
The ratings-v2 service fails to work for MongoDB - Security - Discuss Istio,"I am following example for TCP authorization for MongoDB  https://istio.io/docs/tasks/security/authz-tcp/ I carefully followed each step but even after defining Destination Rules, VS, Service Role and Service Role binding, the  productpage  still shows  Rating service is currently unavailable . The output from  istioctl authn tls-check  for  ratings-v2  is as follows - which shows OK. But when I try to see  ratings-v2  relationship with  mongodb . What is the reason that   mongodb  service is at conflict with  ratings-v2  and how could I correct this? This looks like a possible case as why  Ratings  does not show on the  roductpage . Help is appreciated.","/u/yangminzhu 
could you help take a look?","I just tried the task and didn’t encounter any problems. Could you clarify after which step you find unexpected result? From your  istioctl authn tls-check  output, The word  HTTP  means you didn’t enable mTLS for the MongoDB service, this shouldn’t happen for this task as it requires to enable mTLS in the beginning of the task. Could you double check whether you have enabled mTLS in the cluster as required in the  https://istio.io/docs/tasks/security/authz-tcp/?_ga=2.256781707.1248291361.1556907476-244168650.1519165063#before-you-begin , Thanks.",Hi Yangmin - Thanks for your reply. Actually -  istioctl authn tls-check  was the clue why it did not work.  I noticed that the example did not have  mongodb  destination rule defined - or if it was there - I might have missed it. After I defined the destination rule for  MongoDB  - it then worked fine.,"Glad it works. The task shouldn’t need the dedicated destination rule for MongoDB as is uses the default destination rule when mTLS is enabled in the cluster, you might need this destination rule when it’s not the default setting."
Sidecar to Service communication - Security - Discuss Istio,"As per  https://istio.io/docs/concepts/security/#mutual-tls-authentication    mentions that “After authorization, the server side Envoy forwards the traffic to the server service through local TCP connections.” In that case though traffic b/w sidecars is mTLS, is the traffic/communication b/w sidecar and service in the same pod is mTLS?",From what I remember it is not Mtls.,Communication between sidecars will be mTLS if you have configured it globally or configured it for the relevant services. Traffic between sidecar and the application running in the same pod currently is unencrypted if enable mTLS. Only scenario when traffic between sidecar & application in the same pod is encrypted when you use TLS passthrough routing mode.,Thanks @  https://discuss.istio.io/u/nrjpoddar . Can you help me with link which explains this…i am not able to find one.,"It’s not explicitly mentioned in the docs as far as I can tell, this  https://istio.io/docs/concepts/security/#high-level-architecture  describes the Istio security architecture and TLS Route configuration is described  https://istio.io/docs/reference/config/istio.networking.v1alpha3/#TLSRoute  if you interested in exploring.","/u/ashishthakur  - I currently do not know of an encrypted service-sidecar communication within Istio. However, I do agree that it is an interesting topic and I am thinking about potential solutions as well. can you help me with defining your need and concern in more details? would be happy to set up some time and discuss if that makes sense.","/u/shaul_rozen   /u/ashishthakur   /u/nrjpoddar 
Securing application to sidecar communication has come up in the past, about a year ago. 
Community feedback on  https://docs.google.com/document/d/1TTl8OszfnUEkBmz5AtcUCyYRTT7O6axiHZabHdH2950/edit?usp=sharing  has been that the complexity outweighs the proposal’s benefits. 
Would be happy to discuss any feedback and alternatives."
Istio Security Survey - Security - Discuss Istio,https://docs.google.com/forms/d/e/1FAIpQLSdoyYZeOcfVRzbyC5YYas8PfSHmQ1-67mwm790dIzRTsk8yFw/viewform?usp=sf_link
Certificate Validation with SDS enabled on Ingress Gateway and mode set to MUTUAL - Security - Discuss Istio,"I have been having some difficulty understanding the mechanism by which certificates are validated by either party in a mutual TLS handshake. I have SDS enabled on my ingress gateway(s) and the certificates are read by the Ingress SDS container ( secretFetcher ) from a  Secret  of type  kubernetes.io/generic  with  cacert ,  cert  and  tls  keys/value pairs present. My question however is, how exactly does envoy trust a certificate down to the RootCA based on the cacert (or maybe I am completely off and I am mixing concepts up ) ? 
A RootCA is usually a trusted entity and I understand how browsers and mobile devices can establish a chain of trust using a Trusted CA/ICA store. 
However with Envoy, how does it know to trust a RootCA like verisign/docusign/letsencrypt ? Are these preloaded into the container at build time (or maybe as a part of the base image) ? So if we have the following scenario, 
 How would Ingress Gateway validate a certificate presented by Service A (which was signed by ICA_A and RootCA_A) provided that the ICA -> RootCA used by the Ingress Gateway itself are ICA_B and RootCA_B ? PS: This might be a very basic question for someone with a better understanding of certificate validation than me. I am only trying to get a better understanding of the concepts. I would really appreciate if some one could explain the mechanics of how this works for Envoy specifically.","Also based on reading  https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/ssl#enabling-certificate-verification , does envoy implicitly trust the stored CAs even in SDS mode ? The link shows a static configuration where the validation context is configured with the path I wonder if this is the case with SDS as well ?!","I peeked at the dynamic envoy config and see no traces of trusted-ca’s in the validation context when SDS is enabled, Makes me wonder this is handled in the cases where the certificate is signed by a trusted-ca but the cacert is not passed in through the SDS api ? ",validation_context_sds_secret_config  is Envoy asking for CA certs over the SDS API.,So how can it be configured to use the trusted-ca location in addition to the sds config ? Is there a fallback default validation context that could be set ?,"You need to manually configure the rootCA to k8s secret so ingress can pick it up. Please refer here for more info:  https://istio.io/docs/tasks/traffic-management/secure-ingress/sds/ , which shows config TLS ingress for single host, multiple hosts and mTLS ingress. 
 It’s not preloaded but dynamically configured via k8s secret by mesh operator.",/u/tao_li  So in the case of Secrets that only have the tls.crt and tls.key is it not possible to set the validation context to a default root certificate through some static envoy configurations ? So taking the example of the SDS based tls context configuration block from the istio-proxy can we somehow program the to hold a reference to /etc/ssl/certs/ca-certificates.crt ? Maybe something that could be configured (in the future) via the  Gateway  CRD ?,Can this PR meet your need?  https://github.com/istio/istio/pull/13363,Yea I ve been keeping a watch on that PR. It would definitely help. Didn’t see much activity for 2 weeks on the PR so I thought it wasn’t being pursued any longer.,Just pinged that PR. Hopefully we can hear from him soon.
Enable Mutual TLS for Control Plane - Security - Discuss Istio,"Hi there, Can I enforce Mutal TLS between control plane components and sidecar, but allow plain TCP traffic for services? I found some clues in the configuration of pilot and sidecar, but no clear documentation about how to achieve this. Thanks, 
Huabing","Hi Zhao, 
It should be achievable by enable mTLS only on istio-system namespace by adding a namespace Policy and DestinationRule as following: I am curious to know which use case need such configuration.","Hi Rafik8, Thanks for the information, is it possible to be done in Consul deployment? Huabing",I don’t have much knowledge on Consul so I can not confirm that.
Security Working Group Meetings - Security - Discuss Istio,"Our Security Working Group meets every other Wednesday at 11:00am Pacific Time https://docs.google.com/document/d/12Xz8fCuql2tPL-cpdLXGGE44kYT4o9NB6mljSiS_01U/edit Join from PC, Mac, Linux, iOS or Android:  https://istio.zoom.us/j/117159906"
Ingressgateway not grabbing end user authentication certs? - Security - Discuss Istio,"I’ve been trying to get keycloak configured to allow for ingress calls to be authenticated with JWT tokens. However, after configuring both keycloak and Istio I get continual 401’s with no errors in any logs anywhere. The closest I can get to an error is the ingressgateway pod logging the 401 was returned. I noticed I originaly didn’t include the  .keycloak  in the configuration and Istio would complain that it could not find the certificates. However, since fixing this issue, it still doesn’t seem that Istio is using the certificates. Am I missing something? Any pointers on where/how to debug this is greatly appreciated. Versions: I’ve gone through the troubleshooting  https://istio.io/docs/tasks/traffic-management/secure-ingress/#troubleshooting . But it doesn’t really tell you how to continue debugging if the certs don’t exist. My steps are as follows:","It looks like you’re using the jwt authentication on ingress gateway, so why do you need the keycloak or certificate in this case? Could you try to follow the guide  https://istio.io/help/ops/security/end-user-auth/  and attach the debug log from the istio gateway?"
Certificates authentication - Security - Discuss Istio,"Hey! I have the following case. 
I created ServiceAccounts for client “a” in namespace bar, for client “b” in namespace foo. 
apiVersion: v1 
kind: ServiceAccount 
metadata: 
name: service-a apiVersion: v1 
kind: ServiceAccount 
metadata: 
name: service-b Deployed two clients and http-server. Created a ServiceRole to access the http-server. 
apiVersion:  http://rbac.istio.io/v1alpha1 
kind: ServiceRole 
metadata: 
name: viewer 
namespace: security 
spec: 
rules: 
- services: [“http-server”] 
methods: [POST] Created ServiseRoleBinding 
apiVersion:  http://rbac.istio.io/v1alpha1 
kind: ServiceRoleBinding 
metadata: 
name: bind-viewer 
namespace: security 
spec: 
subjects: thus, client "" a “can make post requests to the server, client” b "" cannot make requests. But if you compromise the ServiceAccount data of client “a”: copy the key and the certificate chain and paste it into ServiceAccount for client"" b"", client"" b "" will be able to make requests to the http server from another namespace. Prompt, please, how not to allow access to the http server if the certificate is compromised","Hi Ksyu, 
are you enabling mTLS? this is should be handled by secure naming using Spiffe SVID :  https://istio.io/docs/concepts/security/#secure-naming","Yes, I enabled mTLS using the following code 
apiVersion:  http://authentication.istio.io/v1alpha1 
kind: MeshPolicy 
metadata: 
name: default 
spec: 
peers:","If the private key of the certificate is leaked, it basically means everyone who has it could send a request on behalf of the identity of the certificate. We cannot prevent such cases as it’s something beyond our control (the client has the responsibility to keep its private key really private). Could you clarify more about what’s the use case for a compromised certificate? Thanks.","After client "" b "" has replaced in its ServiceAccount the values of cert-chain and key.pem on those that the client “a”, he gained access to the http-server with the same privileges as the client"" a "" (for example, was able to make post-requests). Q: is there any way to further protect access to the http-server? For example, make a bundle: a client with “such a ServiceAccount and, for example, from a certain namespace”. For other users access is closed. Because it turns out that if the certificate is compromised, there is no additional protection. Such code variants in ServiceRoleBinding also don’t work (client "" b "" still has access to the server) 
subject: 
- properties: 
source.principal: “cluster.local/ns/bar/sa/service-a” 
source.namespace: “bar”"
Runtime Authorization Rules - Security - Discuss Istio,"Right now authorization rules are static, in other words, I define the rules, deploy, and then a client (user or service account) are then determined as to whether they fall in the role. It would be great if a rule can be set up that has an expiration time. Let’s say I have a user that I want to temporarily assign them admin role. I could create a rule that says this specific user has admin rights if the date and time falls within a date and time range. In addition, being able to define a role can be determined by data that is passed in at runtime.","Would it be better to decouple this from the Authorization API as I feel it’s not part of the authorization work. For example, you could start a cron job to remove the authorization rule after some time. What do you mean about “define a role can be determined by data that is passed in at runtime.”? Could you clarify a little about this use case? Thanks."
Enable mTLS for ingress gateway but disable mTLS within the mesh - Security - Discuss Istio,"Hello! 
I have Istio 1.0.5 on EKS. 
I have enabled mTLS for ingress gateway and globally within the mesh. But i would like to disable the mTLS globally(service to service) and just keep the mTLS enabled for traffic coming into the mesh from outside via the ingress gateway. This configuration doesnt seem to work for me. May be i am not doing something right .  true  false This is how my gateway yaml looks like apiVersion:  http://networking.istio.io/v1alpha3 
kind: Gateway 
metadata: 
name: apigateway 
spec: 
selector: 
istio: ingressgateway # use istio default ingress gateway 
servers:",Would you mind to clarify a little more about what isn’t working in your case? Like is the gateway not working? or is the traffic inside the mesh having issues? Thanks.
Istio Authorization stability - Security - Discuss Istio,"Hi, 
I am evaluating istio to use it for my next project. Everything works nicely and i am really happy about it. But there is one thing i would like to ask for more clarification. As  https://istio.io/about/feature-stages/  authorization is an alpha feature. And the doc mentions that alpha feature means it can be removed and has no deprecation policy. That makes me a bit uncomfortable to use it in production. So i would like to ask how stable is authorization feature, or the reason why it is still an alpha feature (lack of testing, document, api not stable or performance reason)? 
Thanks.","The alpha is mainly about the API interface in my opinion, which means the API could change without backward compatible in next version (We will also do our best to avoid this.) Recently we’re proposing the Authorization v2 API to the community, see it here:  https://docs.google.com/document/d/1diwa9oYVwmLtarXb-kfWPq-Ul3O2Ic3b8Y21Z3R8DzQ/edit I would love to hear your comments, especially the concerns and suggestions if you’re planning to use it in production. Thank you.","The alpha/beta/stable features have different definitions which can be found here: The short version: 
 The long version: 
 Cheers 
-steve"
Authentication Policy issues - Security - Discuss Istio,"Looking for some advice/help.  I’m struggling with mTls enabled with my service mesh and communicating with the kubernetes api.  I have istio 1.0.5 installed.  Global mTls is enabled (perhaps this is the problem?).  Instructions say to not have it enabled… Followed the first steps of example (Stopped at “Cleanup part 1”): 
 https://istio.io/docs/tasks/security/authentication/authn-policy/ The last step seems to have no effect.  I always get the 000, command terminated with exit code 35. I assume, something fundamental like this, I’m just doing something wrong. Ideas?  Trouble shooting ideas? Also, when I change: to It gives me a 401(my token must be bad), but i’d really like [https]://kubernetes.default/api and honestly [https]://10.0.0.1:443/api to work as well… Appologize for mangling the URLs above, Since i’m a first poster it only allows 2 links.",Disregard.  I installed istio incorrectly.  Just generating the template via helm and applying it with kubectl doesnt work properly.  Needed to have helm install it so it could do the post-install hooks etc.
Citadel Pluggability design review - Security - Discuss Istio,"Hi folks, Please review the Citadel pluggability design doc and give your feedback: 
 https://docs.google.com/document/d/1hKmbFr-oryslTzsVoiCfyc859RKQpeLFgCdDHF3NesI/edit# 
We will have a design review session in the security working group meeting on Feb.6. Thanks,",Where can I get the hangout link for the working group meeting ? I don’t see it in the meeting notes -  https://docs.google.com/document/d/1-Z7nSDV8f9psp5chO6H9PAUAinIVapOhQRaUIxbf0dk/edit#heading=h.ppfvkxi2bzdh,"/u/pnambiar  the policy working group has ceased meeting and is now folded into the main Security Working Group. The agenda document is here, and includes the link for the video conference:  https://docs.google.com/document/d/12Xz8fCuql2tPL-cpdLXGGE44kYT4o9NB6mljSiS_01U/edit#heading=h.rr9i0dmfgy9x"
[Probably solved in 1.1] Which steps are required to set up trusted service communication? - Security - Discuss Istio,"Hello all, I try to setup simple case: a service in namespace ns1 try to reach a database in namespace ns2. No other services should access the database. I have following configuration: For the database: User  xxx  isn’t an existing user and therefore I expect that service can’t access the database. As I understand it should be  - user: ""cluster.local/ns/ns1/sa/myservice"" . But if try it with telnet from the service instance, I get response: instead of an error. What I’m missing? How debug it? How I can ensure that only wanted services can access the database? Can I control it exclusively from database namespace ns2?","It might be that you don’t have things configured properly for istio_proxy to intercept the traffic to the database. You’ll want to verify that the istio_proxy is successfully injected into the database pod, and that the database pod has the  containerPort  defined for the MariaDB port (Istio will only intercept on ports that are defined in the podspec).",Thank you for your response! Port is exposed: StatefulSet container: Proxy is injected:,May be an important note. Bitnami containers runs with non-root user. For this reason I add to proxy init:,"You might want to check the logs of the proxy_init container, to see if it is successfully setting up the IPtables rules. If that looks correct, check the istio_proxy logs after you make your test connection to see if the istio_proxy is logging that it is processing the connection. If all that looks correct, then we know that the proxy is intercepting the connection, and the question will be why mTLS isn’t being used.","There are no errors in init container and I can see iptables rules for 3306 port. If I connect with telnet from service container, I get: Further: Service Just to be sure: I log in into service container to run telnet.",/u/liminwang  do you have any idea what might be going on?,"If you can point me to a small, dedicated example to just “create a service, which isn’t accessible from other services” and then “add access to particular service from other namespace”, may be I can gather some more info. And I’m not sure I don’t mess some configurations with bookinfo example.",Or can it be messed with definitions in other namespaces? For example I have allow all rule for rook:,"Did you enable authorization using ClusterRbacConfig? See  https://preliminary.istio.io/docs/concepts/security/#enabling-authorization Istio authorization is deny by default. If you enable authorization for your service, no other service can access your service unless you define specific policies (ServiceRole/ServiceRoleBinding) to allow it.",Thank you very much for your response! I use istio 1.0.5 and therefore I have only  https://istio.io/docs/concepts/security/#enabling-authorization :,"Anton, I think your database service is running TCP protocol, correct? We supported HTTP/gRPC protocol for Istio authorization in Istio 1.0 release. TCP support was added later. From Istio 1.05 doc, it looks that we haven’t added TCP support for Istio authorization at that point. If you are running a TCP service, you need to upgrade to Istio 1.1 for Istio authorization TCP support (see   https://preliminary.istio.io/docs/tasks/security/authz-tcp/ ).","Yes, it does. I will test it for HTTP-Communication between other services soon. Is there any ETA for more or less stable istio 1.1 release/build? How painful would be the update process from 1.0.5 to 1.1 later?","Is there any documentation about that subject for user is related to the name of  serviceAccountName ? I’ve spend a lot of time to debug why  *  and  cluster.local/ns/ns2/sa/default  works, but not  cluster.local/ns/ns2/sa/myservice .","Anton, you need to associate a service account name with when you deploy a service. We have some examples in user guides (e.g.,  https://preliminary.istio.io/docs/tasks/security/authz-http/#before-you-begin ). And here is the example configuration, which creates the service account “bookinfo-productpage”, and deploys it with productpage service. Istio 1.1 release should come out very soon, although I cannot tell the exact date. In the meanwhile, you can try out the release snapshot in the meanwhile ( https://github.com/istio/istio/releases ). You can follow the upgrade steps at  https://preliminary.istio.io/docs/setup/kubernetes/upgrading-istio#upgrade-steps .","Hey  /u/liminwang , thank you for your input! Yes yes, my problem was, that it was not very clear in documentation, that I need  a  ServiceAccount  for authorization and its name is used for service authorization. Therefore I asked about that. I think the docs can be improved.","All the services use the “default” service account if not specified. But if you want to assign specific service account to a service, you have to create the service account and then deploy.  /u/anton  I agree with you that the doc can be improved to clarify this point."
Certs termination on ALB. Is connection form ALB to gateway encripted? - Security - Discuss Istio,"Hello, Is connection between ALB and Gateway encrypted if TLS termination is done on ALB? I am deploying Istio into AWS EKS (Istio 1.0.5, Kubernetes 1.11) and trying to follow advises in  https://github.com/istio/istio/issues/6566 Confused by advise “PS: If you are doing SSL Termination with Amazon ELB, the protocol for port 443 should be  , not HTTPS.” It works and responds fine if I am using HTTP protocol in Gateway, following the advise: But it looks like message between ALB and Gateway is a plain http in this case. It looks confusing. 
Is it a correct approach? Certificate has been attached under my AWS load balancer Annotations is added into istio-ingressgateway Thanks 
Alex","If you terminate TLS on the ALB, then the ALB decrypts the incoming traffic and forwards plaintext to Istio gateway.  If you want the traffic to stay encrypted all the way to the gateway, you should be able to turn off TLS termination. What are you trying to accomplish?","One of use cases. For example, I have an ‘insecure’ application that was had no cert validation inside the pod. 
In previous implementations (before Istio) we used TLS termination on AWS ELB. And insecure communication after ELB. Now Istio provides much more secure option to use mTLS and in this case communication between gateway and pods are secured by sidecar. 
And it looks that only piece of connection left not encrypted now is between ELB and istio gateway. 
Am I correct? 
What could be a reasonable approach? 
Is it necessary to move the TLS termination to Gateway objects?",That makes sense. One option would be to  https://istio.io/docs/tasks/traffic-management/secure-ingress/ . The Istio gateway can then re-encrypt traffic to the service backends using mTLS.  Your ELB no longer terminates TLS and instead just acts as a load balancer / service VIP for the ingress.,"Thank you. 
We will try to relocate TLS termination into Gateway level. Could you give an advice what LoadBalancer is more suitable for WebSocket applications in this architecture - CLB, NLB, ALB ?",/u/alexd  my ELB knowledge doesn’t go deep enough to make a recommendation for WebSocket applications. Maybe someone else in this community has advice?,Thank you  /u/spikecurtis  for your help!,"/u/spikecurtis 
Sorry to hijack a thread but i have a related question.   Is it possible to terminate TLS at the ELB and also terminate traffic at the ingress gateway?   I want to do this so I can reuse our AWS wildcard certs available on the elb and provision a self signed cert on the ingress gateway pods.   I tried this and the only way I can get this to work is if I set the gateway hosts to a “*”.   Once i specify a fully qualified domain name that would match both certs the connection never get’s through the gateway to the service pod.   I just want to know if what I am trying is impossible and so i should give up.   You seemed knowledgeable on this topic and thought i would ask. 
Thanks.  G",/u/guido_pepper  what does it mean to “terminate TLS at the ELB and also terminate traffic at the ingress gateway”?  Are you looking to terminate TLS in both places?  You can only terminate the user’s TLS session once.,/u/spikecurtis  thanks for taking time for this.   Let me try to rephrase what I’m trying to accomplish. When an external client on the internet connects to one of our services like  http://coolsvc.cooldomain.net .  We want the SSL cert provided back to the client to be our AWS wildcard cert that is configured in the elb asociated with the kubernetes service istio-ingressgateway in the istio-system namespace.    The ELB in turn will create a connection with the istio-ingressgateway pod which is configured for SSL using a wildcard cert from our local CA. So the clients on the internet get an SSL certificate from a well known CA but we also have encryption between the ELB and the istio-ingressgateway pod. Using SSL at the ELB and in a pod works fine outside of istio.   Trying to get this to work with the istio ingressgateway has been challenging. From an client perspective the connection to the ELB works fine.   But between the ELB and istio-ingressgateway pod something is happening.  I’ve captured packets and can see the requests come into the instance but then a timeout occurs and curl exits with an HTTP 408. I changed the gateway object for some testing and changed the hosts to “*” and then traffic started working.     To me it feels like the traffic is getting into the ingress gateway and just not getting associated with the gateway.   Does any of this make you think of something I have misconfigured or do you know the best way to enable some debug logging in the ingress-gateway pod to see what’s happening? I have a pretty detailed post here  https://discuss.istio.io/t/how-to-terminate-ssl-at-elb-and-at-istio-ingressgateway/728  that goes into details of the configurations of the various components.
[Resolved] CronJob and mutual tls - Security - Discuss Istio,"I want to run a backup through CronJob like described  https://github.com/mattermost/mattermost-kubernetes/blob/2b98615ccc3315abefb4e8a230480ac9073e1b55/mysql-backup/mysql-dump-ScheduledJob.yaml . Unfortunately, no connection can be established from CronJob’s pod. Sidecar is successfully injected and there no errors in  istio-init  and  istio-proxy Adding a  DestinationRule  doesn’t help (or I did it wrong). Is there any information how to connect to mutual tls secured service from a cronjob?",There is an open issue on CronJobs [  https://github.com/istio/istio/issues/11659  ] but I don’t think it is related to the problem you are having with connections not being established. Kubernetes starts your job and the sidecar in parallel.  It may take a few seconds before networking is ready.  When I have encountered that in regular pods I modified my pod descriptor.  Perhaps you can modify your job in a similar way. K8s deployment descriptor command injection that waits for sidecar then runs original startup,"Thank you for your response! Yes, I’ve seen this issue and faced it too, but it’s not related to the current issue. I’ve tested with: connection itself is open, but the behavior is the same like described in  https://github.com/istio/istio/issues/10062  (broken mtls). I had this issue with my services before, but fixed with explicit  ISTIO_MUTUAL , like described in the issue. But have no clue how to do it with CronJob.","The proposals on   should work identically with a Job and a Pod. When I get into this situation I use the  command:  override as above with a pure  sleep 999999999  and  kubectl exec  in to run interactive versions of the commands hoping for more insight into the problem. Your example shows a svc.cluster.local in ns1.  By default Istio when a namespace is created Istio does mTLS but doesn’t inject the sidecar.  Make sure the namespace is labeled. When I get really stuck I do a “4 point check”. Try to run   or the client using localhost from the app container or sidecar to verify the app is up and listening on 127.0.0.1 Try to run   or the client from the sidecar to the IP address of the pod.  Using   arguments   if mTLS enabled. Try to run   or the client from the proxy of the client pod, using   arguments   if mTLS enabled. Try to run curl or the client from the client app interactively, exactly as the app itself would.","Thank you very much. Indeed, this was timing issue. There is no need for  DestinationRule  for CronJob/Pod. Now fighting with 11659 "
Proposal to protect ISTIO CA key using SoftHSM - Security - Discuss Istio,"Hi, I would like to propose an enhancement to protect CA key using SoftHSM. I am new to community and not sure how to go about this, any pointers to get started will be highly appreciated.","Hi  /u/mrangana , For enhancements the process is generally: Write a design doc explaining the use case, requirements, and design. Add the doc to the   and use the  . Post here when your doc is ready and ask for feedback A little while later, present the doc at a security working group meeting Once agreed, you can start submitting PRs that will implement the enhancement","Thanks for the quick response. When I try to create a document under the Istio Community > Working groups > Security,   get the message “You don’t have permission to edit” message. How do I get access to this folder?","I forgot that folder is a little locked down.  Write your draft under your own Google Drive account, and when its ready one of the admins will copy it into the security working group folder to share more widely.","Oh, hey, I was reminded that to get access to the drive, you need to join  https://groups.google.com/forum/#!forum/istio-team-drive-access  if you haven’t already."
Istio 1.0.6 - set mtls mode to strict from Helm - Security - Discuss Istio,"Hello, my team recently upgraded our test environment from Istio 1.0.2, to 1.0.6. This ugprade includes the change from 1.0.3 that defaults the mtls mode to permissive in the default mesh policy. We perform our installation with Helm, pulling the chart down from the Istio Github repo on a clean install. As part of our installation, we require the mtls mode to be set to strict, but I have been unable to find an install option for this. I’ve been working on using kubectl patch to update the default meshpolicy, but it does not seem to be applied. I am using the following patch on the default mesh policy This is appended to the end of the policy when I do output formatted as yaml, but the actual policy does not appear to have the change made, as I still see the following: I would expect to see STRICT within the mtls json block at the end.","“peers”:[{“mtls”:{}}  is the proper STRICT mode, you can verify it by sending http traffic to it (it should be rejected)"
"""unknown"" status on connection security policy with prometheus - Security - Discuss Istio","Hello, i’m using istio 1.0.5, with mTLS enabled. There are no conflicts , i verified this using the ‘istioctl authn tls-check’. Policy and DestinationRule are applied and the app is working, Having a look at prometheus logs i found that   using the command 
 What is the meaning of this “unknown” status please ? 
and what can i do to resolve this issue ? normally i should have mtls instead of unknown. Cheers.","Client-side, the information on the security of the connection is not available.  If you look solely at server-side telemetry ( reporter=""destination"" ), you should see  mtls  reflected. /u/kuat  has been working on improving the situation. See:  https://docs.google.com/document/d/1IdUL7qObUTGR2dNZuIE21AJyBOAiv_MIHbFoHfohGE8/edit#heading=h.3ee9gtngy5zf . We are discussing that in today’s P&T WG.","I don’t think it’s a matter of server or client side metrics, because i have other server-to-server communications, in other namespaces, with mTLS enabled and have the value connection_security_policy=“mutual_tls”."
Error in pull request - During setting up istio's ssl termination - Security - Discuss Istio,$ curl -v -HHost:abc.containers.appdomain.cloud --resolve abc.containers.appdomain.cloud:$SECURE_INGRESS_PORT:$INGRESS_HOST --cacert abc.containers.appdomain.cloud/2_intermediate/certs/ca-chain.cert.pem  https://abc.containers.appdomain.cloud :$SECURE_INGRESS_PORT/xyz/v1/banks,Could you give more info about your setup? It’s hard to give advise based on your first message.
Issues with certificate from secret istio-ca-secret (Ingressgateway) - Security - Discuss Istio,"I am trying out istio1.1 using a few installation options documented at  https://preliminary.istio.io/docs/reference/config/installation-options/  : –set prometheus.gateway.enabled=true --set grafana.gateway.enabled=true --set grafana.enabled=true --set global.tracing.enabled=true This creates virtualservices, gateways and destinationrules for prometheus and grafana  on installation.  It looks like this uses self signed certificates. I extracted the certificate from the secret :   and imported it into the keytool on my machine, and then tried accessing the grafana dashboard like this using curl with the url  : I get this error : curl: (51) SSL: unable to obtain common name from peer certificate The certificate does not have a Common Name in the Subject. I could access the url from Firefox, but had to set :   to true. Anyone using this successfully?",Sorry for the late reply. Does this issue still exist?
Upgrade Policy for Istio - Security - Discuss Istio,"HI Team, I have several questions for the upgrade scenario for Istio, Seems I can not find clear answer in our docs yet: 
 
 
 
 
 
 Thanks a lot if some one can share some lights there! Iris Ding","I think you can upgrade from 1.0.0 to 1.1, but add   to double check  
 I’m not sure. Please see  
 I’m not quite familiar with the Envoy span, though. Try to ask in the network or more general mailing lists?"
Does citadel issues certs to perimeter proxies - Security - Discuss Istio,As per  https://istio.io/docs/concepts/security/  the diagram shows that citadel issues certs to sidecar proxies but in case we check and debug seems as if certs of perimeter proxies also issued by citadel. Are my findings correct?,"Yes, that is correct.  The certs Citadel issues to perimeter proxies are used when these proxies make mutually authenticated TLS (mTLS) connections to sidecars in the mesh. There is a different mechanism for setting the certs the perimeter proxies use for serving external traffic:  https://istio.io/docs/reference/config/istio.networking.v1alpha3/#Gateway",Thanks  /u/spikecurtis  for clarification.
"""Dynamic"" access rule constraints in a ServiceRole - Security - Discuss Istio","Is there any way to have dynamic constraints defined within a ServiceRole? The scenario that I have is actually simple: I want to restrict users so that they can only view their own data in some endpoints (for instance, userA should be able to access /orders/userA but NOT /orders/userB and vice versa) Setting aside the whole debate of whether or not this concern should be handled by Istio (as opposed to the actual service logic), is there any way to implement something like this with the latest Istio version and if not, are there any plans to support “dynamic” constraints perhaps? This could be achievable by allowing the constraint to check a path parameter against a JWT claim, for instance, which is currently not a possibility.","Adding our experts on authz. 
 /u/liminwang   /u/yangminzhu","If you can put the path inside the JWT claim, can you try to use  request.auth.claims[path]  to match against it? See  https://istio.io/docs/reference/config/authorization/constraints-and-properties/#supported-properties","Currently you can set specific rules like “userA can access /orders/userA” using Istio authorization. But if you are talking about a parameterized rule that matches a JWT claim against a path parameter, this is not available currently."
Review request - Istio CA key protection using SoftHSM - Security - Discuss Istio,"Hi All, Please review the ""Istio CA key protection using SoftHSM "" design doc and provide your feedback. https://docs.google.com/document/d/1FpYDKukzdGjz6bwtyvqHEEp7oDChYarNK-UYOdO4TsA/edit Thanks, 
-Manjunath","/u/mrangana , do you want to discuss your document at tomorrow’s Security WG meeting? If so, please add to the agenda:  https://docs.google.com/document/d/12Xz8fCuql2tPL-cpdLXGGE44kYT4o9NB6mljSiS_01U/edit#heading=h.o8pz6aqnzzgk"
"Other options than citadel for envoy sidecar certificate management for kubernetes case, such as cert-manager? - Security - Discuss Istio","Hello, I am not referring the case of Istio Gateway for Ingress Traffic, but for the envoy side car certificate. From this link  https://istio.io/docs/concepts/security/#kubernetes-scenario , it seems that cert-manager should be able to handle all the listed items. My question is 1) Whether it is possible to replace citadel with cert-manager? 2) Is it a good practice to do? The reasons why we are looking other such as certmanager are: We already have hashicorp vault PKI provider in our K8S, while cert-manager integrates with it well. We’d like to store CA/key into vault for security reason Cert-manager can support many CA issuers, we might have to customize the sidecars in different ns (or environment) use different CAs. 
… thanks","Sorry for the late reply. It’s possible to replace Citadel with cert-manager. I don’t think it’s a good practice though, compared with the SDS approach we start to support. Because of the 3 reasons listed here:  
 Your   reason sounds interesting, currently our Citadel agent doesn’t support distinguishing workload namespaces and talk to different CAs for cert requests. But we could support it.","Thanks Oliver, With regarding your comment, is there any roadmap to support multiple CAs?","There’s no road map for that yet. We may justify the priority based on user feedback, likely after 1.2. We welcome anyone from community to contribute to Istio. Taking this approach may make it happen sooner."
What version is required for TLS pass-through? - Security - Discuss Istio,"Hi, I’ve been trying to figure out if there is a way to see which Istio version that is required for certain features (if there’s a good way, please point me to it!) I have a cluster on GKE, running Managed Istio and I want to use the feature described here Ingress Gateway without TLS Termination 
 https://istio.io/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/ Basically let the Gateway pass through the HTTPS traffic and let my ingress terminate it. Currently Managed Istio on GKE is running Istio 1.0.6  https://cloud.google.com/istio/docs/istio-on-gke/release-notes  and want to know if the feature will be available to me or not  Thanks! /A","Yes, support for TLS without termination has been around since 0.8 IIRC. Certainly 1.0+ have it. There is not a convenient way to see when each feature was introduced short of the  https://istio.io/about/notes/  or looking at older versions of  https://archive.istio.io/ ."
An issue with creating an ClusterRbacConfig object - Security - Discuss Istio,"I created a k8s cluster, and then installed istio 1.0.3 with this command: gcloud beta container clusters update cluster1  
–update-addons=Istio=ENABLED --istio-config=auth=MTLS_PERMISSIVE My questions: Do I have to use   for authorization? With both   and  , I got this error when I created an ClusterRbacConfig object. Error from server: error when creating “clusterRabcconfig.yaml”: admission webhook “ http://pilot.validation.istio.io ” denied the request: unrecognized type ClusterRbacConfig Any idea on what’s going on? Thanks","I believe  ClusterRbacConfig  was introduced in Istio 1.1, but you are running 1.0.3","Thanks for your reply. I see ClusterRbacConfig with 1.0.3 though. kubectl get crd  http://clusterrbacconfigs.rbac.istio.io 
NAME                               CREATED AT 
 http://clusterrbacconfigs.rbac.istio.io    2019-04-01T21:46:30Z Is there a way to install istio addon with version 1.1, since I updated my GKE cluster with –update-addons=Istio=ENABLED, which got me 1.0.3?","ClusterRbacConfig was introduced in Istio 1.1.  /u/ostromart  Could you help take a look at the installation steps here? To answer the questions above, No. Authorization can be enabled independent of authentication mode. Probably some version problem here. But it is not related to auth mode.","/u/akyyy  are you saying ClusterRbacConfig is automatically created as part of the cluster creation? That would be unexpected because it’s not in the install manifest. 
We expect to have 1.1 out in a few weeks. Right now it’s being tested for production readiness and it will take a while to fully roll out.",Thank you for your reply! I’ll try Istio 1.1
Custom client certificates for service to service calls - Security - Discuss Istio,"
We’re currently using vanilla Envoy with mostly static config files in our org. Most services across the company do authorization based on client certificate CNs, and this works fine via Envoy since it supports forwarding the cert details to the service as a header. Now we’re looking to move to Istio 1.1, and I’m trying to replicate roughly the same behavior. There are two scenarios for this (mtls is globally enabled): Following  https://istio.io/docs/tasks/traffic-management/secure-ingress/mount/ , I was able to have ingress require mtls and forward client cert details to the backend service, as expected. For service to service calls, I can use Destination Rules to have each service submit a custom client certificate to upstream. I was able to successfully mount a volume to the istio-proxy sidecar with the right certificates. 
After applying destination rules with paths to client certs, calls from App1 to App2 were getting an upstream reset error. There were no logs for either proxies (App1’s or App2’s), but I exec’d into App1’s proxy and attempted to make an https call with the custom cert to App2, and I noticed the call was failing because App2’s validation context for its ingress listener uses the default, self-signed  root-cert.pem  file generated by Citadel, which explains why it wasn’t accepting the custom certs: 
What is the best way to approach this? I understand Istio supports  https://istio.io/docs/tasks/security/plugin-ca-cert/ , however, in our case we have a dedicated CA team that manages certificates at the company level, and my team doesn’t have access to their private key to plug into Istio - we only have the root cert. So my question is: is there a way to have Citadel continue to generate self-signed server certs BUT override the root-cert.pem   for this CA validation context? I tried playing around with the  sidecar-injector-configmap  helm template to have it load sidecar certs from a different secret (one that I’d be able to create myself) instead of one created by Citadel. I ended up replacing  root-cert.pem  portion of an existing  istio.app1  secret with our CA’s root cert, applied it under a new secret called  certs.app1  and verified that the sidecar mounted it correctly. However, after inspecting the contents of  etc/certs/root-cert.pem  on the sidecar, I noticed it was   using the default self-signed root cert, even though the mounted secret had a different pem file. I’m not sure how this is possible, but I’m thinking something realizes that the root cert isn’t correct and attempts to overwrite it with what Citadel gives it. I saw these in the sidecar logs, though not sure if it’s relevant: What are the implications of having the option to explicitly specify the path for CA validation context built natively in Istio? Any help would be appreciated!","For service-to-service calls, we use citadel, whose root can come from external or self-signed. Can we use citadel issued key/cert for service-to-service calls ?","This is currently not supported. But there are three possible solutions (require implementations): Invent a way on Pilot to override the validation cert for specific Envoy xDS sections. Adding an extra root of trust to every Envoy, for authenticating your own system’s certs. Introducing “trust bundles” (each root is scoped to a specific “trust domain”) to Envoy and Istio. This is a work under discussion with the SPIFFE team. Both 1) and 3) are more complex solutions. And IMO, 1) is less preferable compared with 3), for introducing security related complexity to Pilot. 2) is a workaround that doesn’t comply with the “trust bundle” model. We are designing 3) now and it would be great if we can get some help from the community as well.","Thanks Oliver. With option 3, all external certificates will need to be regenerated to have their SAN fields populated with their SPIFFE IDs, right?","That’s a good point. The “trust bundle” here is a SPIFFE standard. I don’t think we thought about how to extend it to non-SPIFFE certs. Just thinking aloud: maybe using the domain name in the cert to scope the trust bundles? For example, if you have a trust bundle for domain name “ http://example.com ”, then all the certs with DNS name as its subdomains, like “ http://prod.example.com ” are suitable for the trust bundle.","I’m just learning about SPIFFE; going over their documentation, it doesn’t look like there’s anything inherently different in an SVID x509 document than a normal cert other than the fact that there needs to be an SPIFEE-compliant ID in the SAN field: This would require submitting a one time CSR to the CA for every client certificate, which doesn’t sound too bad.","Yes, you can make your CA SPIFFE-compliant   Then you can adopt the trust bundle when it’s available in the future.",Is there a github issue for tracking the work for adding trust bundles?,In the interim another approach could be to setup an intermediate proxy that trusts Istio (your CA) and your Service (company CA).  I found that it is feasible to use mesh expansion as a method to chain together services.  Mutual TLS from Istio to the intermediate proxy (envoy?) and mutual TLS from the proxy to your external Service.  I’ve only tested this out in a lab environment.  If you setup your own CA you could create longer-lived certs for your intermediate proxy.
JWT Policy using local jwks - Security - Discuss Istio,"I see that Envoy api supports a file based jwks using something like: local_jwks: 
filename: /etc/envoy/jwks/jwks1.txt Looking through the Istio JWT examples and source code, I am not clear as to whether this is supported yet via the Istio authentication implementation. Everything seems to simply reference the usage of jwksUri: “ https://myjwksendpoint.com ” Can someone please clarify if Istio does support either using a local file or inline string for the jwks? Thanks!",/u/yangminzhu   /u/liminwang,"This is currently not supported in the JWT API, we have plans to support using inline string, probably in Istio 1.3. There is no plan to support local file for now."
Enhancing Istio service mesh security with a CNI plugin - Security - Discuss Istio,"The latest version of the open sourced  https://github.com/banzaicloud/istio-operator  supports the  https://github.com/istio/cni , which renders usage of privileged Istio init containers obsolete.","We have CNI support already 
 https://istio.io/docs/setup/additional-setup/cni/"
Citadel CA root key - Security - Discuss Istio,"Hi, When using Istio on Kubernetes, keys and certificates for each service account are stored as Kubernetes secrets. However, how is the Citadel CA root key stored? Or is there no such root key, and service account certificates are not signed by any root? Thank you, 
Peter","Citadel CA’s key is self-signed and stored in k8s secret so far. In the long term, we plan to move it to HSM for better protection.","Thank you for your quick reply, Tao. I don’t understand how Istio can move keys to an HSM. A HSM is a special hardware (or nowadays sometimes virtualized) device, and in many cases it will not be available. So, if anything, I suppose Istio is planning to add   for HSM, but   planning to move keys to an HSM. Is my understanding correct? Also, is it documented somewhere that the Citadel CA key is stored as a k8s secret? If not, would you mind pointing me to the relevant piece of code? Thank you so much.",The detail of HSM is yet to be figured out. This is the ca’s key  https://github.com/istio/istio/blob/8d82dbe6377f2ab8ea24a12b9ef0c0a1f7cd2f13/security/pkg/pki/ca/ca.go#L46
How to define a an lua module on lua Envoy Filter - Security - Discuss Istio,I want to make a redis call inside the lua script in the Envoy Filter by using a lua redis client ( https://github.com/noma4i/lua-api-client ) to translate a custom token to JWT token. Since the code of Envoy Filter have to be inlined into the configuration how can I load a external lua module?,"It’s the standard Envoy Lua filter that is invoked. https://www.envoyproxy.io/docs/envoy/latest/configuration/http_filters/lua_filter If you’re having difficulty using it, the Envoy community might be more helpful than us.","As far as I can tell (I haven’t done this), you’ll need to compile a custom version of envoy. See the note on lua rocks here: Then, you’ll need to get Istio to use your version of envoy."
JWT claims validation - Security - Discuss Istio,"Hi all, 
is there any vision to support JWT claims contents validation in istio? Kind regards","What kind of content validation you want to make ? Right now, you can check the user (via its jwt) have a specific claim to associtate him to a specific ServiceRole and ServiceRoleBinding. You have some inbformation about this in the RBAC documentation in the istio  https://istio.io/docs/tasks/security/role-based-access-control/#step-1-allowing-access-to-the-productpage-service","Yeah, currently we support simple string match on JWT claims. In 1.1, we will also support matching on claim of list string:  https://preliminary.istio.io/docs/tasks/security/rbac-groups/#configure-the-authorization-of-list-typed-claims .","Thank you, is this was provided with Istio 1.1 or was reported to 1.2. Kind Regards",It’s available in 1.1:  https://istio.io/docs/tasks/security/rbac-groups/,Thank you for your reply
RBAC returns either 403 or 302 for each route randomly - Security - Discuss Istio,"I am setting up Istio to do RBAC with keycloak as our auth server. I have set, as far as I can tell, the required policy, clusterRbacConfig, ServiceRoleBindings and ServiceRoles however any request to the backend always returns either a 403 or 302 with no response data, the same route and token flips between the two on refresh. I have included both config files for istio (I use one file to configure the services deployments and ingress, and another to do security) as well as a decoded JWT being sent. I have expunged all data specific to our application and replaced it with placeholder data (so you can see where settings / names match). requests are made to http://:443/backend/<PATH 1> as an example. I am using istio V1.1.1  on the cluster and istiocli for windows V1.1.7. Any help or advice would be greatly appreciated, security-config yaml: 
apiVersion: “ http://authentication.istio.io/v1alpha1 ” 
kind: “Policy” 
metadata: 
name: “require-mtls-jwt” 
spec: 
targets: apiVersion: “ http://rbac.istio.io/v1alpha1 ” 
kind: ServiceRoleBinding 
metadata: 
name: bind-permission-1 
namespace: istio-development 
spec: 
subjects: apiVersion: “ http://rbac.istio.io/v1alpha1 ” 
kind: ServiceRoleBinding 
metadata: 
name: bind-permission-2 
namespace: istio-development 
spec: 
subjects: apiVersion: “ http://rbac.istio.io/v1alpha1 ” 
kind: ServiceRoleBinding 
metadata: 
name: bind-permission-3 
namespace: istio-development 
spec: 
subjects: apiVersion: “ http://rbac.istio.io/v1alpha1 ” 
kind: ServiceRoleBinding 
metadata: 
name: all-users-services-binding 
namespace: istio-development 
spec: 
subjects: apiVersion: “ http://rbac.istio.io/v1alpha1 ” 
kind: ServiceRole 
metadata: 
name: permission-1 
namespace: istio-development 
spec: 
rules: apiVersion: “ http://rbac.istio.io/v1alpha1 ” 
kind: ServiceRole 
metadata: 
name: permission-2 
namespace: istio-development 
spec: 
rules: apiVersion: “ http://rbac.istio.io/v1alpha1 ” 
kind: ServiceRole 
metadata: 
name: permission-3 
namespace: istio-development 
spec: 
rules: apiVersion: “ http://rbac.istio.io/v1alpha1 ” 
kind: ServiceRole 
metadata: 
name: open-resource 
namespace: istio-development 
spec: 
rules: core config yaml: ################################################################################################## apiVersion: v1 
kind: Service 
metadata: 
name: backend 
labels: 
app: backend 
service: backend 
spec: 
ports: apiVersion: v1 
kind: Service 
metadata: 
name: frontend 
labels: 
app: frontend 
service: frontend 
spec: 
ports: apiVersion:  http://networking.istio.io/v1alpha3 
kind: Gateway 
metadata: 
name: frontend-gateway 
spec: 
selector: 
istio: ingressgateway # use Istio default gateway implementation 
servers: apiVersion:  http://networking.istio.io/v1alpha3 
kind: VirtualService 
metadata: 
name: frontend 
spec: 
hosts: apiVersion:  http://networking.istio.io/v1alpha3 
kind: VirtualService 
metadata: 
name: backend 
spec: 
hosts: JWT: 
{ 
“alg”: “RS256”, 
“typ”: “JWT”, 
“kid”: “” 
} 
{ 
“jti”: “bd72df7a-d2b9-41e3-8f5f-b940129033bb”, 
“exp”: 1559055836, 
“nbf”: 0, 
“iat”: 1559054936, 
“iss”: “”, 
“aud”: “account”, 
“sub”: “fbfe5148-99ee-4355-9559-92bf0571408e”, 
“typ”: “Bearer”, 
“azp”: “backend”, 
“nonce”: “fea1abd1-dad4-43fa-9fda-a9fc8a5f3099”, 
“auth_time”: 1559054166, 
“session_state”: “1f87022f-2b4d-48be-b90a-cc8dc6dc05da”, 
“acr”: “0”, 
“allowed-origins”: [ 
“ ” 
], 
“realm_access”: { 
“roles”: [ 
“<PERMISSION 1>”, 
“<PERMISSION 2>”, 
“<PERMISSION 3>” 
] 
}, 
“resource_access”: { 
“account”: { 
“roles”: [ 
“manage-account”, 
“manage-account-links”, 
“view-profile” 
] 
} 
}, 
“scope”: “openid profile email”, 
“email_verified”: true, 
“roles”: [ 
“<PERMISSION 1>”, 
“<PERMISSION 2>”, 
“<PERMISSION 3>” 
], 
“name”: “”, 
“preferred_username”: “”, 
“given_name”: “”, 
“family_name”: “”, 
“email”: “” 
}","Looking at your ClusterRbacConfig, would you mind to use the full service name? (e.g. backend.istio-development.svc.cluster.local)","Not at all, I have made that change though there is no change in the responses from istio. 
Thank you for the advice.","Small update, I have removed the ‘mtls: {}’ as it was causing consistant 503s, I am back to sometimes 403 sometimes 302s."
Rate limiting using redis handler - Security - Discuss Istio,I checked the mixer code but configured redis client doesn’t accept redis password. Shouldn’t password be provided in CRDs along with redis server url?,"/u/geeknoid  Martin can answer the question regarding Redis quota config. A general comment, from security perspective, a password should never be stored in configuration.","Actually,  /u/gargnupur  has the context on the redis adapter.","Redis adapter currently doesn’t have a way to accept redis password. 
It could be a feature that we can add to it. Please open a github issue for that."
SOLVED: mTLS example not working as expected - Security - Discuss Istio,"Hi Everyone, I am trying to follow a tutorial from Istio docs here to enable mtls globally 
 https://istio.io/docs/tasks/security/authn-policy/#globally-enabling-istio-mutual-tls After enabling global mtls as mentioned in the doc, I fired up the command for from in ""foo"" ""bar""; do for to in ""foo"" ""bar""; do kubectl exec $(kubectl get pod -l app=sleep -n ${from} -o jsonpath={.items..metadata.name}) -c sleep -n ${from} -- curl ""http://httpbin.${to}:8000/ip"" -s -o /dev/null -w ""sleep.${from} to httpbin.${to}: %{http_code}\n""; done; done As per the docs, I should get 503, but I am getting 000 instead. 
 sleep.foo to httpbin.foo: 000 command terminated with exit code 56 What could I be missing?","A quick question, which Istio version are you using?",I am using 1.1.0 and I have installed istio using helm chart
DestinationRule mTLS is not applied correctly when client & service are in the same namespace - Security - Discuss Istio,"Hi, I’ve applied Istio 1.1.7 with MeshPolicy in PERMISSIVE mode. I’m trying to configure a DestinationRule for serviceA in namespaceA to only applied on clients on namespaceA. I have another client on namespaceB that connects to serviceA, I’ve expected that this traffic will be clear, but unfortunately it’s encrypted. Am I doing something wrong? Is it by design? BTW - When applied the same rule on namespaceB, ONLY traffic from clientB to serviceA was encrypted.",A  DestinationRule  is exported to all namespaces unless you set  the  exportTo  field to  . https://istio.io/docs/reference/config/networking/v1alpha3/destination-rule/#DestinationRule,"Thanks  /u/frankbu  for your answer, it worked. 
But not I failed to understand why when I applied to same rule (w/o exportTo field) on namespaceB, the rule was not exported to all namespaces, ONLY traffic from clientB to serviceA was encrypted.","/u/idan_frimark  separate from exportTo, the destination rule lookup path is basically: client namespace service namespace istio-system Hmm, I guess this isn’t documented anywhere except in the code: 
","OK, now I understand. Thank you!"
How to connect Namespaces over ingress/egress gateways only? - Security - Discuss Istio,"Hello! I have two isolated namespaces by NetworkPolicy and ingress/egress gateways in each, I need a solution to route traffic between them over egress/ingress gateways only. And also I need mTLS with certificates provided by external CA between gateways. Is there any one who can help?",We are trying to do something similar. Can you elaborate on the problems/limitations that you are facing ? Maybe we could share some insights ?!,"/u/wenchenglu   /u/tao_li   Have you guys considered this use case. We (affirmed networks) need to support this model as well. 
Essentially, provide namespace network isolation (using network policies) and permit ingress only through ingress gateway and egress only via the egress gateway. Both Gateways will have mTLS enabled. 
We would love to discuss this further with you guys if you are up for it ?? FYI:  /u/skydoctor","PS: The external client/external server could themselves be Istio Egress/Ingress Gateways, respectively. (i.e. namespace to namespace communication)","Nitishm, from security perspective, i don’t see any problems, but we need to support your case, but need to check with networking team to see whether this is feasible.",From the security perspective we need to support SDS on the egress gateway. With that in place both ingress and egress gateway certificate management would be handled uniformly.,"I assume by “SDS on egress gateway”, you mean using SDS to get external key/cert for egress gateway, right? It’s already working for Ingress, does it work for egress?",Yup SDS to get external key/cert for egress gateway. It’s supported on the ingress gateway which can be enabled through helm values specific to the ingress gateway. I would imagine the same mechanism could be enabled on the egress gateway to inject the ingress-sds agent. But unfortunately it does not exist today in 1.1,/u/tao_li : I had created this a few days back:  https://github.com/istio/istio/issues/14039,so egress to external server is also mTLS?,"Yes, external server would support mTLS and egress gateway to external server should have mTLS in this use-case.", I love that. Let us know if you have time to contribute to this effort and we can work together to make this happen. We may also discuss later how to delegate the client workload identity to the external server through egress if you happen to have that use case.,"How can we address services in this scenario? If we have only ingress endpoint, we can’t reach services behind ingress gateway, the only solution that I see, is to create virtualservice for ingress host with different uri matches. But it’s not convenient in some scenarios.","/u/1113  Yes you will need  VirtualServices  to route to your Services within the namespace. Because of the  NetworkPolicies  you will be forced to go this route (unless of course you create rules to  ALLOW  ingress traffic for those specific services. But I am guessing that is not the intended model.). /u/wenchenglu ,  /u/tao_li  One of the challenges we are facing currently, that I forgot to mention, is to configure the workload  Sidecar s to forcefully route all namespace-external traffic through the Egress Gateway. Is this possible using some Istio resources ? The idea is to have  DENY ALL  ACLs for all egress traffic other than the necessary metrics, egress GW, istio controlplane ports.","/u/liminwang 
I don’t think we can provide a strong egress control through sidecar envoy currently (there have been some discussions to improve that work through CNI), see  https://istio.io/docs/tasks/traffic-management/egress/?_ga=2.121788043.1297637210.1558573004-166046602.1550116756#security-note . As noted in this doc, you might consider k8s network policy and see if that can provide what you need.","Thanks  /u/wenchenglu . To prevent  a rouge agent from bypassing the sidecar proxy and accessing external services directly, we will definitely look into k8s network policies as you suggest.  But currently we are struggling with configuring all legitimate egress traffic from the sidecar to go through the egress gateway. This is easy for pre-configured specific external servers (following  https://istio.io/docs/examples/advanced-gateways/egress-gateway/ ), but in our use-case, the set of external servers is not known apriori.  And for supporting that, we apparently need a complicated setup with an additional Nginx SNI proxy which is far from ideal ( https://istio.io/docs/examples/advanced-gateways/wildcard-egress-hosts/ ). We are looking for enhancements that would make it easier to say:","/u/liminwang  could you help look into this and see if we can contribute to improving the egress traffic control by working with Istio network folks 
fyi  /u/duderino","I think, all can be done using this two official instructions: And NetworkPolicy of cause to isolate namespaces. I’m already tested these instructions separately, everything works perfectly, but I can’t test all chain right now because of some problems in our cluster.",Any updates on this ?,"/u/nitishm , are you asking about updates on improving the egress traffic control or something else? 
fyi  /u/liminwang"
Missing Common Name on mTLS certificates issued by Citadel - Security - Discuss Istio,"Hello, -Regards","I can answer question 1: The  https://github.com/spiffe/spiffe/blob/d422d4826a5a7b84919d83783d11f80099ad2501/standards/X509-SVID.md  mandates the use of a URI SAN as the place to store the SPIFFE ID.  SPIFFE-compatible implementations will look for it there, and not in the Common Name. Note that the use of the Common Name for DNS names is deprecated and discouraged by RFC 6125, and there is no established practice for using Common Names for URIs that I’m aware of."
Istio security stopped working - Security - Discuss Istio,"I had set up istio to use keycloak jwts to secure my backend and had on open frontend. 
I had cors set up to allow calls from local frontends for dev purposes. 
It was all working as intended and then all of a sudden all calls to the backend from local frontends were met with ‘401 unauthorized Origin authentication failed’ and calls to the frontend on istio were met with ‘RBAC: access denied’. I have since tried uninstalling istio and deleting everything, fresh installing and it is still the same state of affairs. Any advice on how to debug this or examples of what could have caused this would be greatly appreciated.","Could it be the case that your jwt expired? RBAC most likely won’t work if authentication fails, depends on how you set the RBAC rules. Can you take a look at  https://istio.io/help/ops/security/end-user-auth/  or see the log of istio-proxy for the backend service?"
Configure gateway with Simple and Mutual TLS for same host - Security - Discuss Istio,"Dears, : How to have SIMPLE & MUTUAL TLS for specific endpoints in a virtual service for same host. I have configured Istio Gateway and VirtualService as described in the Istio which is working fine. 
Now we have a requirement that one of the endpoint in a service needs only MTLS validation. But when I changed tls mode to MUTUAL in gateway it is applied for all the endpoints for the host. I created two virtualservice and two gateway configurations for the above need which didn’t worked. 
Please help whether this is possible or not.",/u/diemtvu  is this possible?,"I don’t think it’s possible. Anyway, this is about gateway, so networking team may have more insight. +  /u/costin_manolache1   /u/andraxylia"
Run node_agent on premise to get workload CSR - Security - Discuss Istio,"Dear community, I’ve been working on node_agent with env setup as onprem to get signed certs for Envoy workload. With the assumption of Istio security mTLS design online documentation, the Citadel (not running in k8s) is supposed to grant a workload CSR request from node_agent. What I experienced is that with latest istio security release, the node_agent is sending a server CA CSR to Citadel not a workload CSR. May I know if it works by design and why is that? The signed certs from Citadel is something like",that should be worklaod CSR.  /u/leitang  could you help look into that?,"Hi Michael, 
Can you share your steps to reproduce the certificate issue? Meanwhile, the guide in  https://istio.io/docs/tasks/security/auth-sds/#service-to-service-mutual-tls-using-key-certificate-provisioned-through-sds  will enable service-to-service mTLS and generate certificates through SDS for workloads. With this guide, you may dump the certificate generated to see if it is as expected."
[istio-opa] Mount different policies for different pods's sidecars - Security - Discuss Istio,"I followed [1] to add OPA sidecar to pods. However according to this, the policy which is configured in opa-policy config map will be distributed / mounted to all OPA sidecars. Is there any other way to distribute these policies ? I may need to mount pod specific policies. What is the policy distribution mechanism with istio’s OPA sidecar ? [1]  https://github.com/open-policy-agent/opa-istio-plugin",/u/liminwang  please help take a look,Add   to answer the question.
Istio RBAC - v1.1.5 - K8S - Security - Discuss Istio,"Hello, 
I am using Istio v1.1.5 on GKE. 
I deployed manually Istio using the helm chart and I am trying to setup the RBAC ( https://istio.io/docs/reference/config/authorization/istio.rbac.v1alpha1/ ). 
I have created the ClusterRbacConfig However I can still access all my services. I already tried to follow many suggestions: I am not yet working on  ServiceRole / ServiceRoleBinding , what I would like as the moment is to get the  Access Denied  error if I call any of my services. Thanks for your help.","AFAIK, you don’t need to turn on authentication if you just want to see access denied error. Could you try this first and see what went wrong?  https://istio.io/help/ops/security/debugging-authorization/","So basically, I tried all of that but nothing worked on my cluster. 
Therefore, I tried on a fresh cluster and it works well. 
So I guess it’s a config problem on my end. I am gonna dig a bit more. 
Thanks! ",Glad it works now 
Secure Traffic in namespace istio-system - Security - Discuss Istio,"I have a requirement that every network traffic has to be encrypted. 
Istio works great for that and now I have almost every application network traffic encrypted. When I check with  istioctl authn tls-check  I can see that it look mainly like that for all the applications: but for istio itself http is still available (see below). is it possible to encrypt the istio-networktraffic too?","yes, traffic for istio control plane in istio-system namespade can aslo be encrypted. /u/tao_li  do we have a user guide for that?",This the helm installation values.yaml File looks promising:  controlPlaneSecurityEnabled  but I couldn’t find much documentation. I’ll give it a go.,That’s correct. The  controlPlaneSecurityEnabled=true  in helm is the correct way to enable control plane mTLS. We should probably make that explicit on  http://istio.io . Let us know if you still have questions.
How to debug pilot secure naming map? - Security - Discuss Istio,"Hi there, is there a way to browse the Pilot map for the secure naming[1]? 
I would like to see how this check is working. 
btw, is this secure naming check performed in layer 4 as the TLS handshake? [1]  https://istio.io/docs/concepts/security/#secure-naming",/u/jimmychen  any idea?,"I believe we don’t store the secure naming in any place in pilot, it’s calculated and used in runtime during every config push, so I’m afraid you cannot easily browse it in Pilot. It’s set here:  https://github.com/istio/istio/blob/ac7ca2b1baacffd24bae315c3de5ab8c10590014/pilot/pkg/networking/core/v1alpha3/cluster.go#L905 It’s performed in the client side Envoy during the TLS handshake step.",I think you can check the secure naming map by inspecting the Envoy’s core dump at 15000 port. You can view it through a port-forwarding.
DestinationRule with subsets for selecting TLS mode? - Security - Discuss Istio,Normally DestinationRule sets trafficPolicy for a certain hostname or a hostname wildcard.  In my environment there is a desire to mix pods with and without sidecars in single namespace.  In this case hostname wildcard does not work and defining DestinationRule per each host would be tedious. I was experimenting to see if it is possible to write a DestinationRule that would choose different trafficPolicy according to label in destination service.  Syntactically following record was accepted but it does not work. I assume subsets are not intended to be used like this? Is there any other approach to dynamically select TLS mode according to destination service (besides hostname)?,you may want to post this question to network area too. Some experts there might have good ideas.,"/u/diemtvu 
Adding Diem, our expert on authentication policies."
Secure kube-apiserver with ssl certificate using cert-manager - Security - Discuss Istio,"Hello, I see that istio created ‘kubernetes’ service in default namespace which leads to kube-apiserver(port 6443). Does anyone figured out how to secure this service with SSL certificate using cert-manager? I would be grateful for any help.",Istio doesn’t create that service. Kubernetes itself always creates a  kubernetes  service in each namespace that can reach the API Server.,"yeah, You’re right, sorry. but still, in this case it’s not relevant what created this service ","Maybe I’m not understanding your question, but I think using Istio and cert-manager in that way would be a layering violation.  Istio itself depends on the Kubernetes API Server to be up and secured with TLS, meaning you can’t depend on Istio to provide that TLS security."
End User Certificate Authentication - Security - Discuss Istio,"Hi, My company uses SSL certificate authentication via a whitelist of certificates allowed to connect to user services in Apache, however, we now want to have this same functionality in our Ingress Gateway, I was wondering if there’s a way to do this with any of the following: EnvoyFilter Mixer Policy mTLS configuration I’ve been using Istio for our internal mesh so far and don’t have much experience with Gateways. Can anyone help me solve this doubt?","Let me make sure I understand what you’re asking for. These SSL certificates, are they for the servers or clients? If clients, then no, we don’t support that with certificates not generated by Citadel, at least not yet.","Yes, this is how we modeled it: Request from client comes in to Ingress Gateway Ingress Gateway checks certificate fingerprint against a whitelist 
2.1) If fingerprint exists in whitelist (populated by a secret), request enters the cluster 
2.2) If fingerprint doesn’t exist, request is rejected My investigation has led me to either an EnvoyFilter (native to Istio/Envoy) or using Gloo with a function level route that will check this, however, I’d like to keep Istio’s Ingress Gateway if possible.","It looks like the Envoy client_ssl_auth filter has exactly the same support for this:  https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/ssl#authentication-filter , but I think it doesn’t support to get the fingerprint from a secret. Istio doesn’t support this directly (you can use it with EnvoyFilter as you mentioned). I’m also curious what’s the use case here? Would you mind to provide some more context about why do you want to use fingerprint here? Would it make sense to support this in the authorization level?","Yes, that’s exactly what we’re going for! Our use case is fairly specific (or at least I think so), our clients are banking institutions which are notoriously slow to adopt new technologies, which makes adopting JWT or even OAuth very difficult, the particular service that is going to implement this is going to be called from a Cobol application that won’t support any form of authentication. We also decided against Basic auth or API keys because our clients rarely secure them or use them correctly (that’s without taking into account all security issues). We don’t have a specific requirement for it to be a fingerprint auth, what we need is client authentication via SSL certificates (this would include mTLS + checking client identity via SSL certificate), which, to my understanding isn’t fully done by enabling mTLS. I think it if Istio could auth against an IP/Cert hash/Cert fingerprint list would be great, but I can’t ascertain how popular would that auth method be.",You should be able to use the xfcc header that envoy (istio ingress gateway) already populates and a route directive adapter to accomplish this. https://github.com/istio/istio/wiki/Route-directive-adapter-development-guide
JWT Authorizationi Failing - Security - Discuss Istio,"I have set up authorization to work with JWT. I am sending a request that looks like it should pass authorization, but it fails. Here is the request: 
curl -v  /httpbin/v1/anything -H ‘Host:authorization-test.wawa.com’  -H ‘x-jwt:jwtHidden’ 
* About to connect() to hostnameHidden port 80 ( ) 
* Connected to hostnameHidden port 80 ( ) 
> GET /httpbin/v1/anything HTTP/1.1 
> Host:authorization-test.wawa.com 
> x-jwt:jwtHidden 
> 
< HTTP/1.1 403 Forbidden 
< content-length: 19 
< content-type: text/plain 
< date: Wed, 12 Jun 2019 18:15:22 GMT 
< server: istio-envoy 
< x-envoy-upstream-service-time: 0 
< 
* Connection   to host hostnameHidden left intact 
RBAC: access denied The JWT payload is (being new here I had to insert a space into the iss field so that the forum would not be complaining about me posting too many links) 
{ 
“iss”: “https:/ /dev-eu2ne9zx.auth0.com/”, 
“sub”: “EWlSieOaraRPeqxq87NhbEH4ceORzP0f@clients”, 
“aud”: “WawaApiPlatform”, 
“iat”: 1560284642, 
“exp”: 1560371042, 
“azp”: “EWlSieOaraRPeqxq87NhbEH4ceORzP0f”, 
“scope”: “testdata:read”, 
“gty”: “client-credentials” 
} Here is the service role binding that this is matching: 
apiVersion: “ http://rbac.istio.io/v1alpha1 ” 
kind: ServiceRoleBinding 
metadata: 
name: test-reader-binding 
namespace: authorization-test 
spec: 
subjects: 
- properties: 
request.auth.claims[scope]: “testdata:read” 
roleRef: 
kind: ServiceRole 
name: “test-reader” Here is the service role (being a new user I had to insert a space into the apiVersion so the forum would not complain I am postin too many links): 
apiVersion: “rbac.istio .io/v1alpha1” 
kind: ServiceRole 
metadata: 
name: test-reader 
namespace: authorization-test 
spec: 
rules: 
- services: [“httpbin.authorization-test.svc.cluster.local”] 
methods: [“GET”] Here are log records that to me look like it is matching: 
|2019-06-12T17:46:16.894559Z|debug|rbac|building http filter config for {httpbin.authorization-test.svc.cluster.local map[pod-template-hash:5fc7cf895d version:v1 app:httpbin] map[destination.name:httpbin destination.namespace:authorization-test destination.user:default]}| 
|—|---|—|---| 
|2019-06-12T17:46:16.894570Z|debug|rbac|checking role test-reader| 
|2019-06-12T17:46:16.894575Z|debug|rbac|rules[0] matched| 
|2019-06-12T17:46:16.894655Z|debug|rbac|generated http filter config: {policies:<key:“test-reader” value:<permissions:<and_rules:<rules:<or_rules:<rules:<header:<name:"":method"" exact_match:“GET” > > > > > > principals:<and_ids:<ids:<metadata:<filter:“istio_authn” path:<key:“request.auth.claims” > path:<key:“scope” > value:<list_match:<one_of:<string_match:<exact:“testdata:read” > > > > > > > > > >   {}   0}| 
|2019-06-12T17:46:16.895130Z|info|rbac|built http filter config for httpbin.authorization-test.svc.cluster.local|","Hi,  Did the log at the bottom of your message come from the istio-proxy associated with your service or from another container? I am trying to debug my own gRPC authentication and am having issue finding out where to start. Thanks","Could you also post your authentication policy? (it should have  principalBinding: USE_ORIGIN ). Also could you put the jwt token like this:  --header ""Authorization: Bearer $TOKEN"" ? Last, I see you have attached the pilot log, it would be more helpful to also attach the proxy log, see  https://istio.io/help/ops/security/debugging-authorization/#ensure-proxies-enforce-policies-correctly","The log attached is actually from pilot, you can also follow this  https://istio.io/help/ops/security/debugging-authorization/#ensure-proxies-enforce-policies-correctly  to enable debug logging on proxy, note it enables for the RBAC logger in proxy, you may change it to other logger.","Here is the authentication policy: 
 apiVersion: ""authentication.istio.io/v1alpha1"" 
 kind: ""Policy"" 
 metadata: 
 name: ""authorization-test-authentication"" 
 spec: 
 targets: 
 - name: httpbin 
 peers: 
 - mtls: {} 
 origins: 
 - jwt: 
 issuer: ""https://dev-eu2ne9zx.auth0.com/"" 
 jwksUri: ""https://dev-eu2ne9zx.auth0.com/.well-known/jwks.json"" 
 jwt_headers: 
 - x-jwt 
 audiences: 
 - WawaApiPlatform 
 principalBinding: USE_ORIGIN The request is putting the JWT in a header named x-jwt and the authentication policy is looking for the same.  I will use $SUBSTITUTION in future posts. I am having a possibly related issue with trying to get the proxy logs. The documentation begins by asking me to issue the command: 
 kubectl exec $(kubectl get pods -l app=productpage -o jsonpath='{.items[0].metadata.name}') -c istio-proxy -- curl -X POST localhost:15000/logging?rbac=debug -s 
This fails: 
 kubectl get pods -l app=productpage -o jsonpath='{.items[0].metadata.name}' 
 Error executing template: array index out of bounds: index 0, length 0. Printing more information for debugging the template: 
 template was: 
 '{.items[0].metadata.name}' 
 object given to jsonpath engine was: 
 map[string]interface {}{""apiVersion"":""v1"", ""metadata"":map[string]interface {}{""selfLink"":"""", ""resourceVersion"":""""}, ""items"":[]interface {}{}, ""kind"":""List""}","The command failed in your case because it’s for the bookinfo DEMO application (this has nothing to do with JWT here), Note the  -l app=productpage  in the command, you need to replace it with the label of your application."
Enabling mTLS results in SSL handshake error - Security - Discuss Istio,"Hi, I am trying to setup mutual TLS between two of my services. Here’s how I tried. Setup permissive policy and tls disabled destinationrule on both services. Services can talk to each other. Changed destination rule of Service B to tls only. Services can still talk to each other. Changed policy on Service B and I immediately start getting SSL handshake error. Here’s log snippets from istio-proxy of Service A and B I am not using any custom certificates. Just trying to use the MTLS out of the box. I am using Istio version 1.1.7 Any pointers?",/u/leitang   Could you help take a look?,"Hi ukdvivek, 
Can you list the authPolicy and destRule? does this one work for you?  https://istio.io/docs/tasks/security/mtls-migration/#lock-down-to-mutual-tls-optional","Hi ukdvivek, 
 https://istio.io/docs/tasks/security/authn-policy/  has a guide for “Globally enabling Istio mutual TLS” and a guide for “Enable mutual TLS per namespace or service”. Can you try these guides for enabling mTLS?","Hi Guys, 
Yes, I have tried all the options mentioned in the istio documentation but with no success. Here’s the policy and destination rule for smaas-service And here’s the policy and destination rule for cse-service"
Authentication policy for JWT appears to be ignored (1.1.8) [solved] - Security - Discuss Istio,"I am trying to configure Auth0 based authentication and it is being ignored.  Instead of the proxy handling the validation of the authorization header, it is being passed through to the service without the Auth0 validation occuring.  I test this by using an invalid bearer value and the gRPC request is not getting refused, instead the request is being passed through to my service and then it sees the invalid Bearer value. Use Case is that I am wanting to implement a machine-to-machine application that requires the remote client to fetching a token without expecting the Istio services doing redirections to present a login exchange to get this done. The test is done using the following: The error result is coming from the Go application not the proxy.  I would like the proxy to be validating this. Many thanks to anyone who can help. When looking at the proxy log the enforced allow is present as follows:",The problem in this case was a yaml file format issue that failed one or two components and silently ignored.,So I guess it solved the problem after you fixed the yaml file format issue? Just wondering is the file format related to Istio?,"/u/karlmutch  could you provide the incorrect yaml policy and the correct one? It’s strange because if there was an formatting issue, the  kubectl apply  should fail because it will error out when converting yaml to protobuf. /u/yangminzhu  correct me if I’m wrong.",The authentication issues I am having have changed now the yaml is fixed and I’ll post a separate message about those. The yaml issue has to do with multi resource separators.  If these separators have trailing white space characters followed by dashes etc then the separator is ignored.  This is occurring inside the kubectl rather than during istioctl injection. When the separator is ignored then two resources will run together when kubectl runs and we loose the second yaml specified resource.
Nodeagent crashing - Security - Discuss Istio,"I have Istio 1.2.0 running in GKE v1.11.8-gke.6 which I have installed on my custom namespace “foo”. However, the nodeagent crashes with the below error Am I doing something that is causing the issue? Btw, I have used the below helm for the installation And my   as below where I’ve modified the   as  Any pointer will be much appreciated. Thank you!!",Looks like it works fine if “istio-system” namespace is used. Can we remove this “isto-system” namespace dependency?,istio-system  is a reserved namespace for Istio control plane components and their resources. Why do you want to use  foo  or something else?,"Yes, that namespace is reserved but I don’t feel it is mandatory. If you have given the option in templating where it can be modified, it should support any namespace","I’m afraid the namespace is hard-coded in a lot of places, at least that’s what I saw browsing through the code base. Maybe it’s not meant to be mandatory to use  istio-system , but at this point it certainly is.",I agree with  /u/dgn  point. FYI  /u/quanjie_lin,"thanks for raising the issue, sent a fix   https://github.com/istio/istio/pull/15199","Components should be able to be installed in any namespace, this is a hard requirement for  https://github.com/istio/installer . Thanks for bringing this up"
Server authentication for TCP services relies on DNS - Security - Discuss Istio,"Take the scenario from the  https://istio.io/docs/concepts/security/ : It appears that envoy builds the allowed SANs list for a TCP server based on the listener config which is selected using the destination IP address of the outbound packet. There is not much else to use in TCP. So, in the example scenario, the client (envoy) would extract the  test-team  identity from the server’s certificate and check it against the list of valid names that are associated with the malicious destination IP address returned from DNS. Envoy is asking the question: is  test-team   allowed to run the malicious  datastore . The answer is yes and envoy will make the connection, contrary to what’s stated in the documentation. Did I miss something that mitigates this attack?","/u/pbohman , I think your analysis is spot on here.  Would you be willing to suggest some alternate language for the docs that clarifies this point? I believe we would be resilient to malicious manipulation of DNS responses in the case of HTTP, where we can examine the host header to see where the user was attempting to dial. But, as you say, for TCP we do depend on getting correct DNS responses for the secure naming to work.","/u/pbohman , thank you for catching this. I agree with Spike that we should update the doc to call this caveat out and make it more accurate on what secure naming is used for. We will send out a PR, please help comment. Secure naming is for protecting against general network hijacking attack. DNS spoofing is one example. There are other means to hijack network like BGP/Route hijacking, ARP spoofing, etc. I doubt there is much we can do to protect against DNS spoofing for TCP services as you described, DNS lookup happens even before client-side envoy sees the traffic. But it is still useful to protect against other types of hijacking attack.  /u/tao_li","Thanks for the quick response, WG discussion, and document updates. I look forward to discussing solutions.","Here is the PR, feel free to comment 
","For the simplest solution, can we defend DNS hack for TCP traffic by assigning a different port for each service?","We could do that, but it would no longer be “transparent” to the application.  How would the application learn which port it should use to reach a particular service? We cannot use DNS SRV records, as that would leave us with the same problem as we have now if DNS is compromised.",I agree it’s not transparent to the applications. Just thinking about possible approaches to distinguish the service at TCP layer. ,"Yep.  What I would say is that at pure TCP, in terms of distinguishing services we really only have or a combination of the two.  The issue we’re talking about above isn’t so much that we can’t distinguish services  , it’s that we don’t have a secure way to go from application intent (typically a name) to the thing that we use to distinguish (IP/port).  Switching from IP to port or vice versa doesn’t solve that fundamental issue of how to reliably capture the application intent. One thing that   allow us to capture intent is to use named Unix Domain Sockets.  For example, mount a shared volume and provide sockets like  /var/run/envoy/services/my-svc.default.cluster.local That wouldn’t be transparent, as applications would need to be modified to dial domain sockets instead of TCP sockets, but at least it does solve the problem of understanding user intent."
gRPC JWT Authentication silently failing in Istio [workaround] - Security - Discuss Istio,"When using JWT authentication to secure the istio-gateway I am getting the following failure. The Authorization I am supplying works when using my own test code. 
When following the authorization debugging instructions on the website I can see that the rules are being built by the discovery container in pilot. The policy appears as follows: I have also enabled the rbac tracing as the website advises. 
However the Authorization header string which otherwise works using test code is rejected by Istio and nothing is appearing in the proxy logs for the service.  I have searched for any other logs across the istio-system namespace for logs mentioning authorization and rbac but cannot see anything that might hint as to why the authorization might have failed. Is there any other logging at the gateway that can be enabled to help diagnose the actual point at which authentication/validation failed ?","The error  Origin authentication failed  is returned by the authentication when it fails to verify the JWT token of the request and is not even handled by authorization yet, so I guess that’s why you didn’t see anything when you enabled the debug logging for rbac. You may enable the debug logging on the ingress gateway, it should include some information about why the JWT token of the request didn’t pass the verification.","How do I enable debugging on the gateway ? I have tried using the instructions found at  https://istio.io/docs/ops/controlz/  to use kubectl port forward with the istio-gateway pod. For example When using a browser to try and access the ControlZ page to see if I can enable debugging the server is responding with ERR_EMPTY_RESPONSE. 
Are there specific instructions for enabling debugging on the gateway ?","The ingress gateway is just Envoy without any application,  you can turn on the debug logging with: 
 kubectl exec $(kubectl get pods -l istio=ingressgateway -n istio-system -o jsonpath='{.items[0].metadata.name}') -c istio-proxy -n istio-system -- curl -X POST ""localhost:15000/logging?filter=debug"" -s The above command enables for  filter  which should be enough for debugging the JWT issue here.",Awesome getting more information … I did a bit of code crawling but cannot find the files emitting the dynamic_metadata error in the repos I had checkout from the envoy/istio project.  Can you shed any light ? Thanks,"This is where you see  [src/envoy/http/authn/filter_context.cc:81] No dynamic_metadata found for filter jwt-auth 
 https://github.com/istio/proxy/blob/bfc559d649acc1e3db30364a086776c74d2f4002/src/envoy/http/authn/filter_context.cc#L120 . The problem is Istio jwt filter failed to validate the request, so it did not write the result to the metadata for Istio authn filter to check. Since Istio authn filter did not find metadata from Istio jwt filter, it would not write to its metadata for RBAC filter to read. I’m not sure what went wrong, but I agree we should add more logs. I hope this helps a little.",I went digging a little further and turned on and off log levels until I managed to get the following additional information which seems to indicate that the Jwt Authentication did actually succeed prior to getting the error. Does this shed any additional light ?,"As you can see in the log, we start with Jwt authentication, then get an OK status. One possible reason is when the jwt filter extracts the token from headers, it gets nothing. And since you set  allow_missing_or_failed  to  true , it’s considered success (at this filter, other filters in the pipe will validate this instead).  Maybe check your requests?","Upon following that guide and going to localhost:9876, I see the following -> E0626 10:09:59.481308 13528 portforward.go:400] an error occurred forwarding 9876 -> 9876: error forwarding port 9876 to pod 9d70cc7f5d869da7bc15688c4af61aa7398ac3e8fc442bdf170067eb180f54ea, uid : exit status 1: 2019/06/26 04:39:59 socat[22681] E connect(5, AF=2 127.0.0.1:9876, 16): Connection refused Any ideas?","I replied to your GitHub issue post. I think you want to change Envoy logs (port 15000), not the control plane (port 9876).","I deployed a sample grpc server and the same Istio gateway, virtual service and authentication policy as you used here. Everything is working as expected for me. The gRPC call succeeded with a valid JWT token: The gRPC call failed without JWT token: I’m testing this in 1.2 but this should just work for previous versions. Could you also double check if the JWT token is attached to the gRPC call correctly? Like  /u/philliple  mentioned, it looks like the JWT token is somehow not found by istio JWT filter which later triggers the error  No dynamic_metadata found for filter jwt-auth .","Looking closely at the first example which is your working case, you do have an error after the OK.  Is this expected ?",Also what are your GRPC_ environment variables set to ? Thanks,"The grpc_cli command line will actually send 2 requests here. One is the real request for  Hello world  and the other one is an internal request to get the protobuf information from the  https://github.com/grpc/grpc/blob/58ed35407a09cd104881440618eeaedec4a11bf9/doc/command_line_tool.md#prerequisites  (The gRPC server doesn’t have to implement this reflection service though). The error in my log is expected because it’s the request to the reflection service being rejected as it doesn’t include any authorization header. The real request succeeded. Looking at your original log, I realized it’s actually the reflection request being rejected( 
 ServerReflectionInfo rpc failed ... ). This seems explaining everything now because it doesn’t include the authorization header at all. I used  export GRPC_VERBOSITY=DEBUG  to turn on the debug logging of gRPC, I suggest you to use the latest  grpc_cli  (v1.12.0) as it seems the older version is not handling this case correctly.","adding the following to the origin: -> jwt: section of the yaml configuration does workaround the problem.  However the question remains should the reflection APIs be protected, and does not protecting it lead potentially to DDoS issues ?","Normally you don’t need the reflection API, a gRPC server could choose not to support it at all. It’s the  grpc_cli  making this request. If you write your own gRPC client, I think it won’t send the reflection request in the first place. The “workaround” is actually for  grpc_cli , as istio is doing exactly the job to reject requests without valid JWT token."
JWT and Authorization - Security - Discuss Istio,"hello All, Does istio 1.0.5 support the use of JWT for authorization purposes between service calls and end-user calls ? Thank you. 
Cheers.","Hello  /u/sethokayba , what are you trying to achieve?","i am trying to apply authorization between service in a mesh ruled by istio, using JWT tokens, is that weird ?",You absolutely can do this.,"sethokayba, yes, it’s supported. See examples  https://istio.io/docs/concepts/security/#servicerolebinding  and  https://istio.io/blog/2018/istio-authorization/#using-authenticated-client-identities .","Thank you for your answers. 
Cheers.","/u/liminwang  In my JWT I would have a list of groups that the end user is part of, and I would like to check that they are a member of one group in particular, is that possible?",/u/jammerful  This may help  https://istio.io/docs/tasks/security/rbac-groups/
gRPC JWT Authentication not enforced - Security - Discuss Istio,"Hello, I’m new to istio and gRPC, and running into an issue where my authentication policy requiring origin authentication over JWT is not being enforced. Below are my istio configuration files and the envoy configuration files I pulled: Also I’m not getting any logs when the authentication is not being enforced. The above works when I’m deploy a HTTP based service. I’d appreciate any help.","I found the issue, I was not listing   on the  . I found this document outlining what is needed to force the traffic into the envoy proxy:  https://istio.io/docs/setup/kubernetes/additional-setup/requirements/ I’m still not seeing logs from the envoy sidecar, if anyone has any hints there I’d appreciate it.",/u/quanjie_lin   /u/yangminzhu  could you take a look?,"I’m getting the logs now, I do have one last question. I keep seeing a 200 returned even when the origin authentication fails: [2019-07-02T17:08:55.207Z] ""POST /com.example.grpc.EchoService/echo HTTP/2"" 200 - ""-"" ""-"" 0 0 0 - ""-"" ""grpc-java-netty/1.20.0"" ""334f1ee6-ded8-9c1d-82d2-7a197be285f2"" ""echo-server.myorg.com:8081"" ""-"" - - 10.110.118.162:8080 10.110.112.168:51396 Why is this?",did you see both 200 and 401 in logs at the same time ?,Could you attach the full log?,"/u/yangminzhu   /u/quanjie_lin  Thank you for the replies, I appreciate it. Below is the log from one call:","I think this looks like  https://discuss.istio.io/t/grpc-jwt-authentication-silently-failing-in-istio-workaround/2829 , which has been resolved. Could you take a look  /u/jammerful ?",/u/philliple  I ran into a different issue that caused the traffic to bypass the envoy proxy. At this point I was just curious why I’m getting a 200 return at the end of the logs even though origin authN fails and the client is getting origin authN failure.
Anyone using Vault integration at any scale? - Security - Discuss Istio,"I’ve been trying to get the Vault integration working, and am finding it frustrating. In particular, since NodeAgent is passing the ServiceAccount token of the workload (rather than itself), I need to reconfigure the Vault backend role to whitelist each ServiceAccount or Namespace that I want to support. I’m wondering if there are other people/orgs that have successfully got this integration working. It doesn’t necessarily have to be in production, but in an environment with more than a few services running in the mesh.If so, how have you been managing Vault configuration? Thanks in advance, 
Jon",We heard some customers build some syncer by themselves to solve this problem and integration pain. Add  /u/leitang   /u/oliver  who can have a detailed answer.,There are orgs that prefer using workload k8s service accounts for certificate issuance. They build a syncer that monitors the k8s service accounts and configures their Vault authentication and authorization policies based on the k8s service accounts.,"We are in the process of prototyping the integration and have thought about the configuration problem you reference. I like the idea of separate syncer component, but we were also considering: 
 
 
 
"
Version of cert-manager installed with Istio 1.2.0 - Security - Discuss Istio,When I use Istio to install cert-manager (via certmanager.enabled=true in helm) I noticed that cert-manager is deployed with image “ http://quay.io/jetstack/cert-manager-controller:v0.6.2 ”. The latest version available is v0.8.1. Is there a reason why Istio uses an old version of cert-manager? Is it incompatible with newer versions?,/u/philrud  Do you have any context to share?,"/u/jimmychen  last time the cert-manager version was bumped up ahead of the 1.1 release (0.6.2 was the most recent stable version at the time). Stability was the main focus of Istio 1.2 release, so I would guess there was no strong enough reason to pull in an edge version of cert-manager into 1.2, but we should definitely consider upgrading in 1.3.","/u/philrud  Out of curiousity, what’s the motivation behind packaging cert-manager into the istio releases ? Wouldnt it just be easier to expect the user to set it up similar to how RedisQuotas expect the user to be running their own redis servers ?","I was running into problems getting cert-manager working with let’s encrypt. Once I specified a newer version (v0.8.1) of cert-manager via the helm values file (certmanager:tag), it all started working. I haven’t run into any problems with the newer version of cert-manager with regards to Istio."
Instructions for configuring Vault for CA integration - Security - Discuss Istio,"Docs for using Hashicorp Vault CA with Istio:  https://istio.io/docs/tasks/security/vault-ca/ In those docs, it explains how to configure Istio, but assumes that you already have Vault running and properly configured to work as a CA. For example, it says that the Node agent authenticates to Vault using the service account, which implies that the  https://www.vaultproject.io/docs/auth/kubernetes.html  has already been configured. It also assumes the Vault server has a PKI backend mounted, so that  istio_ca/sign/istio-pki-role  is a working path. And that the Node Agent service account has the proper vault permissions to get a CSR signed. Does anyone have docs or a Terraform script or something to configure Vault with all those requirements? With some work I could reverse-engineer them. But I think it would make that security task way easier to follow if it gave some guidance on configuring Vault to work with the assumptions made. I’d be happy to help update the docs with that information if someone has it handy. Thanks in advance!","Hi Jon, 
Thank you for your feedback! I will create a PR on  https://github.com/istio/istio.io  to provide more guidance on configuring Vault. I will post the link to the PR in this thread after the PR is created. Thanks!","Great, thanks. I’ve got some Terraform code that I think is close to working. Once I confirm it works I’ll share it in a gist.",I have created a PR ( https://github.com/istio/istio.io/pull/4432 ) to provide more guidance on configuring a Vault server.,"/u/jonmoter  could you share your terraform gist with me please? I am trying to use Vault and wanted to have a script that does the config for me. 
Thanks a lot, 
Simone"
Authorization not working - Security - Discuss Istio,"Hi, I installed Istio 1.1.2 in GKE cluster 1.12. It’s a new install. 
I configured 2 clusters in multicluster configuration, one cluster with master control plane and second has minimul istio configuration. 
Service discover works ok between clusters ( I can curl from pods across clusters ). Then I want to test authorization, and it’s not working even within one single cluster. 1/ I enable authorization with 2/ I create 2 ngnix deployments a and b and services a-svc and b-svc in cluster1. 
3/ I can curl ok from pod a to b-svc, and from pod b to a-svc.  I would have excepted to have an access denied for both. I verified tshoot steps in  https://istio.io/help/ops/security/debugging-authorization/ 4/  when authorization is enabled, I can see in my proxies in pod a and b  : 5/ I turn on debug logs in the proxy. After testing the curl from a to b or b to a, 
I get proxy logs with the output doesn’t show any debug lined  nor any line with  enforced allowed   or   enforced denied 
I see lots of warning Is my Istio RBAC not working or something I’m missing   ? thanks","The envoy config shows that a network (i.e. TCP level) RBAC filter is generated, which means your service is defined as TCP services. It would be helpful to attach the full envoy config dump for debugging. Could you also attach the service definition of your a-svc and b-svc in cluster1? Last, It seems you’re using  curl  to access the services which means it doesn’t go through the network (i.e. TCP level) filter at all. To fix this, you probably want to change the service port name to start with “http” as indicated in  https://istio.io/docs/setup/kubernetes/prepare/requirements/","Hi, So I’m glad you told me, thank you… 
I tried to add the port name. But as soon as I enable authorization, then my desired deployment crash.I tried another deployment yaml, and it doesn’t crash. So it seems my yaml is wrong for istio ? My original yaml and pods don’t crash: My new yaml with service name port, then pods crash when istio is enabled : 
The following is added 
ports: 
- containerPort: 80 
name: http The other deployment that doesn’t crash",You’re specifying the livenessProbe and readinessProbe on port 80 which I assume it’s rejected by the RBAC as there is no policy applied and it’s deny by default. Could you put a RBAC policy to allow access to port 80 for the probes?,"thank you   /u/YangminZhu , much appreciated! 
I was actually just about to test without liveness and readiness Probe. 
I have removed them, it works and I get the access denied. 
It seems weird that RBAC denies also these probes…",That’s the intended behavior for RBAC to deny all requests by default. The RBAC is enabled on the ports your specified in the Service and you can create a rule to whitelist the probe request.,thank you. I understand better how k8s and istio work now.,"may I ask you why must the services and deployment port be named. 
It seems like a non intuitive and cumbersome task to do. 
Also I tried to apply a TCP service role, and it doesn’t work with service that are named http. It works only after service are named TCP. 
Can it not lead to easy mistakes to administer security ?","I think the reason is Istio doesn’t detect the protocol from the traffic automatically, which is a reasonable choice in my point. Could you clarify what do you mean for  TCP service role ? I don’t quite understand this. I think the common mistake is to apply a  ServiceRole  with HTTP-only fields to a TCP service, for now the problematic policy is simply ignored, one alternative is to generate a deny all rule in this case so that the operator could realize there is something wrong and fix it quickly. Or maybe the better way is to provide a command in  istioctl  that will test the effect and detect potential problems of the authorization policy before applying it.","Could you clarify what do you mean for TCP service role ? I don’t quite understand this. 
A servicerole with TCP only field. I still wonder why it is not possible to apply layer 4 policy to traffic going to HTTP services. There is no use case for that ? Or do you leave that requirement to the underneath network CNI ?","The service role with TCP only field should work for both HTTP and TCP services, do you have example yaml for the deployment and RBAC policy in this case? I can try to reproduce this to see what might be wrong. Thanks!","/u/yangminzhu  can you please point me to the direction, where can I create a rule to whitelist the probe request. 
Currently when I enable the ClusterRbacConfig against a service, my pod of that specific service failed with the following error: Please guide me how do I fix it?",/u/waqar Assuming you have the following service and deployment: You can use the following rule to whitelist the liveness probe:
VirtualService Authorization / Delegation - Security - Discuss Istio,"I’m looking to use Istio Ingress in a cluster that I’m experimenting with, however one outstanding item that I’m not sure how to solve (or if it’s solvable today) in Istio is the ability to delegate the ownership of a subdomain to a given namespace, that way there are no concerns that two competing projects/namespaces can claim ownership of   bar.foo.com  . The best example of what I’m trying to accomplish that I could find is Heptio Contour where that allows you to define a root   IngressRoute   that delegates responsibility for a subdomain to a specific namespace. Is this possible with Istio? I haven’t found anything in the documentation about this sort of set up yet.","Add  /u/liminwang ,  /u/yangminzhu  as the subject is related to Authorization.",/u/costin_manolache1 You might want to ask this in the networking group and also take a look at the  exportTo  field in VirtualService API:  https://istio.io/docs/reference/config/networking/v1alpha3/virtual-service/#VirtualService,"/u/yangminzhu  Thanks, I’ll ask this there.  The  exportTo  field doesn’t really satisfy what I’m looking for since that’s the VirtualService specifying what namespaces it should be exported to for visibility. What I’m actually looking for is extremely similar to the  hosts  option for the Gateway resource where you can specify something like  hello-world/hello-world.example.com  to only respect VirtualServices that reference  hello-world.example.com  from the namespace  hello-world . Basically I want that, but with paths in addition to the hostname.  Imagine that you have an application that is built from many different micro-services distributed amongst many different teams all running under a single domain.  I’d like to be able to delegate permissions for a particular hostname and   to a namespace to ensure that one team cannot mess with another team’s routes."
Understand the different security mechanisms - policy & RBAC - Security - Discuss Istio,"Hi, I have a very high-level basic question: what’s the difference between RBAC and (whitelist/blacklist) policy? Both are service->service access control mechanisms. 
I believe RBAC is enforced by the Envoys (based on IDs from the mTLS SVIDs), whereas Policy is a Mixer thing (requiring “policy” to be on, which causes every request to be checked with Mixer, yes?). Apart from the difference in config format, what’s the deal here? Is Envoy-based RBAC newer and preferred? Or are the two somehow complimentary? Thanks! 
matt","Hi Matt, I have the same question when I looked at it few months back.  I have been recommending folks to use RBAC as it doesn’t require mixer policy checker to be enabled or mixer policy to be installed. I’m curious what others think of this topic. Lin","RBAC was added to Istio using Mixter a long time ago, but now all the RBAC related features are enforced on service Envoy sidecar only (as you can see the RBAC concept section and RBAC tasks on  http://Istio.io  do not mention Mixer). I’m not sure the story with Mixer here (whether we’re still supporting it or will deprecate soon).  /u/yangminzhu  can help answer more since he’s been working on RBAC for a long time.","There’re some feature overlapping between the RBAC and mixer whitelist/blacklist policy, It’s recommended to use the RBAC policy if it supports your access control needs as it has much better performance and there is no concern for single-point failure in the data plane. In the long term, The mixer architecture is changing to also enforce its policy in envoy. When this is done, the RBAC policy and the whitelist/blacklist may be just converged to a single policy for a better user experience.","Right ok, thanks everyone! So I’m hearing that they’re different DSLs for policy, with the mixer/policy version being potentially more powerful? These APIs might merge soon. The implementation of “RBAC” is preferred but this concern will go away when the mixer -> envoy WASM migration happens."
Trust custom Root CA on Egress Gateway - Security - Discuss Istio,Hallo I want to route traffic to services outside of Kubernetes over the Egress Gateway. I don’t want to trust our internal Root Certificates on all pods so I’m asking if its possible to add/trust them on the Egress Gateway so that I call them without trusting them on each Pod.,"I am not sure I completely understand the question, but my hunch is that you are looking to set up TLS origination at the Egress Gateway. See  https://istio.io/docs/tasks/traffic-management/egress/egress-gateway-tls-origination/  for instructions on how to do this. In addition you can set the  DestinationRule.TLSMode  to SIMPLE and provide the CA certificate to be used by the Gateway to validate the external server’s certificate using  DestinationRule.TLSSettings.caCertificate . 
DISCLAIMER: I haven’t tried this personally but I suppose it should work. The TLSSettings.caCertificates documentation states, My understanding is that, if you don’t specify the  caCertificates  value the Gateway will skip validation of Server certificates, while if you do it will validate it based on the ca-certs you have uploaded. Is my understanding accurate  /u/tao_li  ?",/u/nitishm  you are right. The only issue is that you have to deploy the egress gateway in a separate namespace. See  https://github.com/istio/istio/issues/15517 .,"Thank you, it works. ","I’ve a bit strange behavior, the connection was working but now I get a 503. In the proxy logs I see: The certificate is mounted on the egress gateway pods. Any hints whats wrong in my config?",So you had this working with the same caCertificate mounted and it randomly stopped working ? Could you make it work again with a clean setup ?,"Yes it was working with the same config. I think it has nothing to do with the ca certificate, its still working with another service. I’ve opened a new Topic ->  https://discuss.istio.io/t/upstream-connect-error-or-disconnect-reset-before-headers-reset-reason-connection-terminatio/"," I forgot to mention, sorry - you have to use  exportTo: '.'  in your destination rule, so the destination rule will be applied in the egress gateway’s namespace only and the certificate will be loaded in that namespace only (for the egress gateway only).",Still getting a “503 Service Unavailable” and “upstream connect error or disconnect/reset before headers. reset reason: connection Termination”,"I can access my service from the istio-proxy container in the same pod. Access from my app container in the same pod doesn’t work. Really don’t understand that, also that its working for other services. How can I debug the 503?","Is it possbile that there’s an issue with the certificate used on the service? I have two services and they run on the same webserver and also share the same certificate. The CN matches for the fqdn of service that is working, the fqdn of the other service is only a subject alternative name. The only difference between these services is that they have different fqdn and this certificate thing…",Can you provide the cert detail? Not sure what do you mean “fqdn of other service is only a subject alt name” and why do we have the difference of the two services?,"The certificate has: CN = my-service.domain.local and SAN = 
DNS Name=my-service.domain.local 
DNS Name=my-service2.domain.local",Found out that on my-service2.domain.local I get HTTP_1_1_REQUIRED when I try to access it with curl. On my-service.domain.local I can use HTTP/2. Maybe thats the issue. Can I force the Egress Gateway to use HTTP/1.1?,"/u/vadimeisenbergibm , any ideas?","/u/tao_li   /u/nicolasmai  I will have to check the issue, will take me some time.","I have some more details. The services are running on a IIS Webserver (Windows Server 2016). When I set the SSL option “Client Certificate” to accept or required I get: “503 Service Unavailable” and “upstream connect error or disconnect/reset before headers. reset reason: connection Termination” When I set the SSL option “Client Certificate” to ignore it works. In the docs from Microsoft they state: In a few cases, HTTP/2 can’t be used in combination with other features. In these situations, Windows will fall back to HTTP/1.1 and continue the transaction. This may involve negotiating HTTP/1.1 during the handshake, or sending an error code to the client instructing it to retry over an HTTP/1.1 connection. Looks like the “negotiating HTTP/1.1 during the handshake, or sending an error code to the client instructing it to retry over an HTTP/1.1 connection” does not work with Istio.",I have opened an issue  https://github.com/istio/istio/issues/15785,Thank you  /u/vadimeisenbergibm
JWT with Namespace-wide excluded_paths dons't work - Security - Discuss Istio,"hi, what i’m trying to do, its to exluded a path that resolve to a auth microservices, how in first instance create a JWT that would be use to reach the rest of services, some one can explain why this is not posible, or its necesary to use excluded_paths property to create authentication policy with services scope?","I’m also going to hit this issue as well, I’d love to see ahead of time if this an issue.","To better understand the subject of this post “JWT with Namespace-wide excluded_paths dons’t work”, can you share detailed steps to reproduce this problem?",/u/erick_yataco   /u/jammerful Would you mind to provide the JWT policy yaml? Thanks.,"Here are my yaml file apiVersion:  http://authentication.istio.io/v1alpha1 
kind: Policy 
metadata: 
name: default 
namespace: mynamespaces 
spec: 
peers: apiVersion:  http://networking.istio.io/v1alpha3 
kind: VirtualService 
metadata: 
name: authentication-virtualservice 
namespace: mynamespaces 
spec: 
gateways: now i see the rewrite property in my virtualservice, maybe thats the problem?","Yes, that’s possible. The URL rewrite should happen on the client side and the JWT policy is happening on the server side. In other words, the JWT policy sees the request with URI  /  instead of  /auth  and then reject it as it doesn’t have JWT token."
End User Auth: Cannot generate a valid JWKS and token pair to pass the authentication - Security - Discuss Istio,"I was trying to implement end user authentication with our own JWKS and token pair but then found out only the provided sample can pass the authentication. I also tried following the steps to generate new pairs with the  get-pem.py  script and it would also fail. 
I am including the private key file, the generated JWKS and JWT file to the thread, please take a look and help me figure out what is wrong. FYI: I used the same policy configuration in the example here.  https://github.com/istio/istio/tree/master/security/tools/jwt/samples Private Key: 
-----BEGIN RSA PRIVATE KEY----- 
MIIEpAIBAAKCAQEAuIHVKpNOgsYwrvb37iQgRdLvMGp0wcqpBc1SsSE+tmFx99VA 
SfiURc8l2ibh4rLa3yDsqpK5dVsz6j//HBEo7/NftnifIV3LmVMpfbv0/4+i3pt2 
9f0DDa59MJQ8wcuI2OIJufHXaMQnFx/6qJXKbl1tAysix3pu5BAwK7RIaq5IZv7j 
eHIIZcs0f4Gf7aUtKtRH0+P4bnaEId9T9TRJHA6NyufjLgJeHaJZPzDIZuv1nR5G 
mMQg5RfoWO5Bnwf63W3X6LLczeybG3MRQsMGhlQLZF3kTIxC3Csw41gXTHVzVoI7 
mOMxFOdX7QPgH0MPDVRbuPYooTFXTI/Z/GQggQIDAQABAoIBAQCgKQuaVp6LRHEU 
IAvdq3xcQBsjIvXRFxOblrzWR26BsJrWsEWLMH29D3DjKmdgezMlBxaJhq34Yj/x 
crYHbhnkGJYX9iLkOuA2awsUOukUQmH17GvaYlOZN8MyPSt0ajKTWbtprrX3GnZ4 
S2kxmD1NiknLu1EIaY4C6M530ZofB0sNUzxDEXtrqLkgkLS/fsCt0Qemp1LodwHd 
+V8f5XNAmrKDHCR8V0TnvmXjESbQbxD/C8Ai5aEL8OPfSdYa+YvuXwFccaCekRex 
wjImrKEf6krcP9AYlEhMsjq6Rp3tpvTNvIER/Yl9LZ5rMsryqXwLwZjRv90eRWLt 
pXKw96OxAoGBAOBwOlRwtPpOh2dZH3cJWlHXCNxRXTJG1Cj46k/BgdnpoIegpznu 
BgY0+uxFFdh7JBUgYwkCtdrlvmAbfGbp9S/JU47yaGy8s4zuPUMS/yV2XLbt/zLu 
EmsK3h1Nrah/hqFB0hMrSh5bIR3xOTY21orR1dcKNksTYVPqWYmnpwLNAoGBANJ0 
FQ+X9uCy5qFIYIr2sxpOf9qgBP8LbuI6MOSR/wl7wwmSiXRubmUCGsaPim8bK7Po 
6Y7jmuvAh7doer6Z6bxcA0hCD8oB+ms4Fk91WqARCQZgR+mPBSin0DMopuPxbafD 
p8ehjn3TphbhRIuZMfIqhZgcrTtInlB9p+ogFlyFAoGBAN4GJ63g0SfNB6X1RGs9 
lVvgnaNV2hwidT8S/rhndU1dELEa/FMSZGM/hfq1XScKqmc74rzHMZ+aJvpsNmSY 
jTT4tPB0XVk0U2rXQ0NXR5CHxrAwQIThftblqVTTwzcs8MIVmvvblzbwb5JvT2mS 
Vip96k0QjSU3xtB8xJaog08BAoGAHAVkwHzFXEm1t4fBgv8x/bCyCVQBFkxZaTnC 
RMzDnmmiIGYocx45CK3tDr8R+ZUujnfWkTXw7K7n4x3AKhyoKHI/5aEWJRl6VEhV 
gCLp/CIIh5bOPGTUlQMzD3y8K+F7bjj43/W82TgTBzzbOZMeOVY8D3LSBfC3U5RH 
hT7ce1kCgYBeYmuVx46/32XG7Byl0kpSU+ZvqEViqFIeziewDiFKaKNWsFJzSGDa 
fAJyxJsH+wdth5c45nSTfdgb9vk6FEjTXmQwb2nPYrgKgTNJH9ZgjuHY2vgr9sHQ 
jFY9tXT9ksHPuftWWLKwjak/+dM/IhifRWZ6v+YPPMALLRmzAVUa5w== 
-----END RSA PRIVATE KEY----- TOKEN: 
eyJhbGciOiJSUzI1NiIsImtpZCI6IkluVmk2cUE5ZHdtemFvZWRvVkVpT28ydnFqei1IbGp1dDJpLW16VUlZV3MiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjQ3MTc2Nzc3NDAsImZvbyI6ImJhciIsImlhdCI6MTU2NDA3Nzc0MCwiaXNzIjoidGVzdEBnYXRld2F5LmF1dGgiLCJzdWIiOiJ0ZXN0QGdhdGV3YXkuYXV0aCJ9.d4u6MMLFu0mwLhSF7r8YPdXik8kKHSE0XYdVLwsgjE-fZgl-VDiIVxgzAWcnrx0kYz85CYhd-e0v_I5QAuLeoWn3_sD4cEZ_1haEniOJ5X_67EP_6qCeN3jREHfFm17Z79t50jzDwRGUkOY2cSSI-m_U_rVi8VNilcmj4zBBJzBll7E_s6q8oCi_P0i82xJZ9pLDHV2Vh7MO9mMvVFQqTEAOOnvvcq1WEod7v8UfCUyH9pd1_2tL-A3QisghiBvwjVPtyelvMvFDDwAyIJtFSE7lCacn9Hsr7-8XgQvvHGYKidP6dFtFnpE9yvDxw_OTfHg7AGiWghd1PkNnZleajw JWKS: 
{ “keys”:[ {“e”:“AQAB”,“kid”:“InVi6qA9dwmzaoedoVEiOo2vqjz-Hljut2i-mzUIYWs”,“kty”:“RSA”,“n”:“uIHVKpNOgsYwrvb37iQgRdLvMGp0wcqpBc1SsSE-tmFx99VASfiURc8l2ibh4rLa3yDsqpK5dVsz6j__HBEo7_NftnifIV3LmVMpfbv0_4-i3pt29f0DDa59MJQ8wcuI2OIJufHXaMQnFx_6qJXKbl1tAysix3pu5BAwK7RIaq5IZv7jeHIIZcs0f4Gf7aUtKtRH0-P4bnaEId9T9TRJHA6NyufjLgJeHaJZPzDIZuv1nR5GmMQg5RfoWO5Bnwf63W3X6LLczeybG3MRQsMGhlQLZF3kTIxC3Csw41gXTHVzVoI7mOMxFOdX7QPgH0MPDVRbuPYooTFXTI_Z_GQggQ”}]}","Could you share your authentication policy? Please make sure Pilot is able to fetch the public key specified by the jwksUri field in the policy, otherwise the request will just be denied because the envoy doesn’t have the public key to verify the JWT token.","Just re-build the whole thing, and now it works.  /u/yangminzhu  thanks for your reply. And one more question, does Istio only supports JWT verification via JWKS? I don’t see any references using public key set in the policy. If not, will Istio support it in the future?"
L7 DDOS Protection - Security - Discuss Istio,"Has anyone looked at L7 DDOS protection tools that work well with Istio/envoy ? Curious what other companies  that use Istio ingress for traffic from the internet use for ddos protection ? Thanks 
Pratima","One option is to use  https://istio.io/docs/reference/config/policy-and-telemetry/adapters/redisquota/ . However, DDOS protection probably should be implemented in WAF or DMZ layer."
Headless TCP services losing connection - Security - Discuss Istio,"I am reading this page: 
 https://istio.io/docs/ops/traffic-management/troubleshooting/#headless-tcp-services-losing-connection 
In the english version, it saids If   istio-citadel   is deployed, Envoy is restarted every 45 days to refresh certificates. But in the chinese version, it is 15 minutes. 
Is this a translation issue, or is it related to istio version? 
Why 45 days? Can I change it? 
What is the time in a day that it restart? Will it choose a time that the traffic is low?","I think it’s mostly likely the Chinese doc is outdated. Regarding the 45 days,  /u/oliver  could help take a look at this? Thank you."
Cors preflight does not work when Jwt Policy targets the Istio Ingress Gateway - Security - Discuss Istio,"Kubernetes:  1.13.5 
Istio:  1.2 Cors preflight requests do not work when a Jwt Policy is configured on the  istio-ingressgateway  target. OPTIONS  preflight request should be passed through according to  https://github.com/istio/proxy/pull/2165/files  merged PR. In my case, the preflight requests are always  401  Unauthorized, even when using the authentication token. Other regular requests ( GET   POST  etc) seem to work as expected with Jwt auth configured on the Istio Ingress Gateway. Note: The reason that I am configuring Jwt Policy on the  istio-ingressgateway  target and not on the service name, is because I need to integrate an  https://discuss.istio.io/t/cannot-use-jwt-policy-with-an-externalname-virtualservice-target/2794  with Jwt & Cors through Istio. Here is the policy that I use: Here is the remaining configuration: I have configured the following   service for  httpbin.org  in Kubernetes. as well as this   configuration and the following  Any help would be appreciated.",I have also verified that Cors stops working for any service inside K8s (not only the  ExternalName  service) when I configure Jwt on the Istio gateway target.,"I think  /u/leitang  added the preflight support in istio/proxy, could you help take a look, thanks. It seems this is failing in 1.2,  /u/kostas  to confirm.",Yes it is failing in  1.2 .,"By the way, the way that I’ve overcome the problem was to rollout a reverse proxy (Traefik deployed as a pod, not an ingress) inside Kubernetes with a configuration for the external service. 
Then I applied a Jwt policy using the reverse proxy svc as a target and not the Istio Ingress gateway. 
This worked and I have verified that both Cors and Jwt work as expected together.","Thanks for the information, I filed to track the issue:  https://github.com/istio/istio/issues/16171"
If Istio ingress gateway support different TLS according to different request URL? - Security - Discuss Istio,"Hello experts, 
Currently, if Istio ingress gateway support different TLS authentication according to different request URL? For example, I use the same port 443 as TLS port. The request URL …/dummy/example-1 use TLS certificate 1, and …/dummy/example-2 use TLS certificate 2. By the way, I find Ingress Gateway only configure one set TLS CA for specific port(eg.443). 
If there are some methods to use different TLS CA to verify different requests when use the same port and different URL? Thanks,","Hi  /u/shileiguo , Unfortunately what you are asking for can’t really be done. The certificate needs to be provided during the TLS handshake, which happens before any information about the URL path is exchanged, so there is no way to choose the certificate based on the path.  You can, however, use different certificates for different hostnames. Cheers, 
Spike",,"Yes, you can, here is a task that shows it  https://istio.io/docs/tasks/traffic-management/ingress/secure-ingress-mount/#configure-a-tls-ingress-gateway-for-multiple-hosts","Hi  /u/vadimeisenbergibm 
I try to use above method to configure TLS. But I always get 503 response code by curl. I use h2c protocal in backend Pod, Following is the simple configuration. 
 Backend Pod Log info 
2019/08/06 07:27:26 http2: server: error reading preface from client 192.168.240.40:36548: bogus greeting “\x16\x03\x01\x00\xd7\x01\x00\x00\xd3\x03\x03=̃\xacS\x01&.\xe2\xba-U\xef” 
2019/08/06 07:27:26 http2: server: error reading preface from client 192.168.240.40:36556: bogus greeting “\x16\x03\x01\x00\xd7\x01\x00\x00\xd3\x03\x039\xc0\x05\xcb\x05\xcbIٛ\x9f\x80\xba\x01” 
2019/08/06 07:41:49 http2: server: error reading preface from client 192.168.240.40:56376: bogus greeting “\x16\x03\x01\x00\xd7\x01\x00\x00\xd3\x03\x03\xaeh\xa0!\\x97\xefo/\xf3\b\xc4\xe5” 
2019/08/06 07:41:49 http2: server: error reading preface from client 192.168.240.40:56378: bogus greeting “\x16\x03\x01\x00\xd7\x01\x00\x00\xd3\x03\x03\x9c踗\xeb\xd9\xe3\x1e\xc0]\xccca”","Hi  /u/vadimeisenbergibm 
For the response code 503, I uninstall istio 1.2.0 and install istio 1.2.2. Currently, The issue is solved."
Default SSL on Ingress Gateway - Security - Discuss Istio,"I’m coming from using the nginx IngressController where I use the default SSL certificate 
 https://kubernetes.github.io/ingress-nginx/user-guide/tls/ The way that works is that if the Ingress doesn’t provide a separate certificate, then the default will be used. I have a wildcard certificate that accommodates most of the workloads and I provide a separate certificate with an Ingress resource when the wildcard won’t work. Is there some equivalent for the Istio Ingress Gateway?",/u/oliver   /u/jimmychen  Do you know if Istio gateway support using multiple certificates?,"I did make a little progress yesterday using this link 
 https://istio.io/docs/tasks/traffic-management/ingress/secure-ingress-mount/ With this I succeeded in creating a secret in the istio-system namespace with a wildcard certificate that will work for many of my workloads. I then have to add the following section to each Gateway definition 
On this page 
 https://istio.io/docs/reference/config/networking/v1alpha3/gateway/ I see an example of referencing a TLS secret, which is very similar to how the Ingress does it. It looks like this in the Gateway I would expect the secret to be defined in the same namespace as the Gateway resource, but it didn’t work when I tried it. I then tried adding a secret to the istio-system namespace, but that didn’t work either. Is this a currently working feature? If so, how can I use it? I just found and will look at this link next: 
 https://istio.io/docs/tasks/traffic-management/ingress/secure-ingress-sds/","I still can’t get the  credentialName  approach to work. Is there specific documentation about this. For example, does the Secret need to be in a certain namespace? How can I troubleshoot this  credentialName  approach in the Ingress Gateway?","Have you enabled the ingress-sds container on your Ingress Gateway controller ? See  https://istio.io/docs/tasks/traffic-management/ingress/secure-ingress-sds/#configure-a-tls-ingress-gateway-using-sds Once you have this enabled you should see 2/2 containers in your istio-ingressgateway pod. The  credentialName  should match a type/generic or type/tls  Secret  resource deployed in the SAME namespace as the Gateway controller (cross namespace  Secret s are not supported). I have a recent post on the forum regarding using cert-manager with ingress SDS here  https://discuss.istio.io/t/mtls-default-rootca-for-client-certificates/2881/6 . It shows how the ingress-sds container is configured to watch  Secret s. Also with regards to troubleshooting, I would watch the  ingress-sds  logs and also the  istio-proxy  logs for SDS related messages.",/u/daniel_watrous  Additionally take a look at  https://github.com/prune998/certmerge-operator  to merge multiple certificates into a single file.,"I’ll look at SDS. /u/nitishm  When you say “Gateway controller”, do you mean the namespace where I have the Istio Ingress Gateway? I was hoping I could put the Secret in the same namespace where I define the Gateway resource, but it sounds like that won’t work with Istio.","That’s correct it only watches in the gateway controller (where the ingress controller pod is deployed) namespace. 
See  https://github.com/istio/istio/blob/a329eea24cef41a6860c51ae622b744af853d089/security/pkg/nodeagent/secretfetcher/secretfetcher.go#L155-L170",Sorry for the delay. The SDS approach for ingress TLS/mTLS gateway should work fine. I just added a test to automatically test the scripts in that user guide.  https://github.com/istio/istio/tree/master/tests/istio.io/tasks/traffic-management/ingress/secure-ingress-sds,I didn’t use helm to install Istio and so I was hoping for some way to add SDS without needing helm. Is there a stand alone instruction or snippet so I can add the SDS container to the Ingress Gateway Pod?,I used  https://hub.docker.com/r/alpine/helm  and cloned  https://github.com/istio/istio  and was able to generate and add the following sections to the existing deployment. and this That last volume mount needs to be added to the existing  istio-ingress  container.,"The SDS container is running, but it’s not working as expected. These are all the logs from the container, and I when I connect to the istio-proxy container, I don’t see the credential based TLS cert anywhere. I may not know where to look. Any idea what’s going wrong here?",I created a different thread to discuss the SDS stuff  https://discuss.istio.io/t/tls-sds-credentialname-not-working-with-ingress-gateway/3537
Change headers for original request in a authorization template out of process adapter? - Security - Discuss Istio,"So I have an out of process mixer adapter that handles authorization using an external service. The adapter works fine based on the out of process adapter walk-through but I need to set an additional header to the original request based on the response from external service. Currently there is no HandleAuthorizationResponse in the proto  https://github.com/istio/istio/blob/7c05efeab5f3ff583b42ac512de3dcf1b6618fc1/mixer/template/authorization/template_handler_service.proto#L75 Is there any way to do this? I did come across this Route directive adapter guide that uses a custom template and uses responseHeaderOperations.  https://github.com/istio/istio/wiki/Route-directive-adapter-development-guide 
Is it possible to replicate this using existing authorization template?"
EnvoyFilter for ext-authz - Security - Discuss Istio,I’m having trouble configuring an external authorization filter with Istio. I’ve written a filter that should be applied to my gRPC service requests: The filter seems to be intercepting my requests because I’m getting permission denied responses. However in my gRPC service I’m not actually receiving or vetting the auth request (I’ve added a log in my service to output an incoming unary request). I’m wondering if my cluster_name is incorrect. The documentation in Istio and Envoy aren’t clear as to what “cluster_name” should actually be. In the above example I’m feeding it the Service name I’ve setup. I’ve seen some example where the cluster_name is referred to as: I’m not sure which one is accurate. Also how can I review logs for this call to help troubleshoot the request once I determine the correct cluster_name? Thanks.,Some extra information. I pulled the logs from the Gateway and noticed the following error: I’m using a definition that I see repeated quite a bit. Also I ran it through a YAML to JSON converted and it doesn’t render as a list beneath grpc_service. It’s just a regular propery. I suspect this might be a bug but I can’t easily tell if I’m just doing something incorrectly.,That sounds like a bug; what version of Istio are you using?,Version 1.2.4 I’m having a bit of a hard time replicating it. Am I specifying the cluster_name correctly at least? lol.,"Whether the cluster name is correct depends on what you are trying to reach and how it was defined.  The most direct thing to do is to exec into the Istio-proxy pod, and curl http://localhost:15000/clusters —this should dump a list of all the clusters the proxy knows about, and you can check the name.","Yup looks like I defined it correctly. Strange. Once I apply the rule the gateway throws a 403. I have gRPC DEBUG on to warn me when the receives receives when anything is connecting and it’s not even showing an attempt. Something internally is blocking the filter. This seems like a pretty basic implementation, I wonder if others have encountered the same problem."
Why forwarding a Host Header from the previous request with mTLS is not working? - Security - Discuss Istio,"So I had a working mTLS service mesh until one of the services got updated with some header manipulation logic. This logic was getting the headers from the request the service got, and then adding those headers to the request this service was making to another one. With this logic in place, mTLS was broken between this service and the next one, and if I activate PERMISSIVE mode, connection works as usual. So then I went to this service’s container and did a curl request to the next service but without the Host Header and the request came through. So, same request, just that without Host header mtls works, and with host header it doesn’t. I would like to know the reason why this happens. Is it related with mTLS and how both services are trusting each other? Thanks"
SSL passthrough does not work without intermediary chain - Security - Discuss Istio,"Hey everyone, Just general question to audience - did you notice that SSL passthrough mode (SSL terminated either in app or envoy sidecar) won’t work with server certificates without intermediary chain? Such service won’t appear in ingressgateway config_dump ( http://localhost:15000/config_dump ) thus connection fails. I’m just trying to understand if is it by design or a bug? The Istio example uses intermediate cert too:  https://istio.io/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/ https://github.com/nicholasjackson/mtls-go-example Thanks for any answer",How exactly are you setting up SSL passthrough mode? Could you list steps to reproduce and any yaml config needed for this? Also how do you setup intermediary chain?,"well, just follow   https://istio.io/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/ Then instead of  https://istio.io/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/?_ga=2.39303392.271427795.1566841510-899261950.1544467795#generate-client-and-server-certificates-and-keys   generate your own self-signed certs w/o intermediary. There are manuals how to do that, but e.g.:"
VirtualService always returns 403 - Security - Discuss Istio,"Hello, I’ve been playing around with Istio authentication, more or less following the guides on the references. I have the following service and virtual service: I haven’t added any policies yet and the app itself should make the /actuator/health endpoint available without authentication. The issue is that every time i try to access any endpoint in the application i always get a 403 with the message I’ve tried removing the whole namespace and starting from scratch, but i always get the same result. Am I missing something?"
Istio init-container running as root with all capabilities - Security - Discuss Istio,"I see that for the injected sidecar we run as root user 0 and add the - NET_ADMIN capability. Why don’t we add the NET_RAW capability also and drop the rest of the capabilities, such as: cap_chown,cap_dac_override,cap_fowner,cap_fsetid,cap_kill,cap_setgid,cap_setuid,cap_setpcap,cap_net_bind_service,cap_sys_chroot,cap_mknod,cap_audit_write,cap_setfcap+eip securityContext: 
runAsUser: 0 
runAsNonRoot: false 
capabilities: 
add: 
- NET_ADMIN 
- NET_RAW 
drop: 
- ALL This is regards to the pod security policy as the policies are only at a pod level rather than a container level, so in order to have the istio init container with a pod security policy you need to allow all containers within a pod to run as root user 0?"
Support for encrypted JWT ID tokens (JWE) - Security - Discuss Istio,"Hello, I’m interested in using origin client authentication with Istio, but I’d prefer that the claims in the JWT token are not visible to the end user, but only to the Identity provider and to the Resource server (my API) and obviously to Istio itself. 
My understanding is that this is something that is normally solved by using  https://tools.ietf.org/html/rfc7516 . However I haven’t found anything in the documentation or the source code about this being supported or even being planned in Istio. Does anyone have any insights into this? Thanks! 
Bogdan"
SSL Configuration - Security - Discuss Istio,"Hi all, 
I am facing issue while configuring SSL in Kubernetes cluster with istio, “” kubectl create -n istio-system secret tls istio-ingressgateway-certs --key decrypted-key.key --cert certificate.crt “” – is the command I am using. But When I am checking my domain name in digicert or sslshopper its showing ssl is not from trusted source, which is a paid ssl from Godaddy. In the SSL I have 2 crt files(bundle, certificate) and key file. colud you guys help me in sorting out the issue?"
"Missing selected ALPN property, TLS with AWS Certificate, AWS classic LB - Security - Discuss Istio","Hi there, I am having an issue with the ALPN properties when using gRPC across TLS with AWS certificates. The TLS negotiation appears to proceed but appears to fall back to HTTP 1.1 rather than gRPC HTTP 2.0. I see this with curl and also the same issue with the python gRPC client with TLS.  When this happens the python gRPC client treats this as a fatal error. I have read  https://github.com/istio/istio/issues/5769  and related items with no clues found. kops is being used to create the cluster and I am using the  http://service.beta.kubernetes.io/aws-load-balancer-  annotations to set the istio-ingressgateway in the istio-system namespace to load the AWS ARN into the AWS classic load balancer successfully. When I used self signed certs and relied completely on the istio gateway to perform TLS security things appear to work. Does anyone have suggestions on using HTTP/2 gRPC with the AWS load balancer option ? Thanks, 
Karl When using curl without the --http2-prior-knowledge option the fall back can be seen as follows When using the  --http2-prior-knowledge option we still see the following:"
Vault CA support for Istio 1.3 - Security - Discuss Istio,"https://istio.io/news/2019/announcing-1.3/  mentioned: I want to make sure I understand that correctly… Does that mean there is no option use Vault with citadel? If that’s the case, where will the support be added back?","/u/leitang Sorry for the misleading message. Actually using Vault with Citadel should be supported, The affected use case is that Vault directly interacting with the Citadel Agent, because we have not verified that Vault is able to authenticate the Trustworthy JWTs. Lei can give you more information.",How about Keycloak Server? Is there anyway for it to interact with the Citadel agent?  And can it authenticate the Trustworthy JWTs?,"In current Istio implementation, Vault integration is through Citadel Agent, not through Citadel. Due to Trustworthy JWT, Istio 1.3 temporarily removed integration with Vault CA. It is TBD when Istio 1.3 will add back Vault support. 
As to Keycloak Server, Istio currently does not support integration with Keycloak server yet.","/u/leitang  I am a bit confused now. Do steps on  https://archive.istio.io/v1.2/docs/tasks/security/vault-ca/  still work for Istio 1.3. If not, how do I configure Istio 1.3 to integrate with Vault for provisioning certificates for service mesh?","Due to Trustworthy JWT, the steps on  https://archive.istio.io/v1.2/docs/tasks/security/vault-ca/  will not work for Istio 1.3. It is TBD when Istio 1.3 will add back Vault support.","So what are the options for people who want to use Vault for Istio until that support is added back? stay with Istio 1.2.x? I think it’s going to be disruptive switch to Vault for existing services running Istio 1.3 when the Vault support is back, right?",How are you using Vault with Istio now? Are you deploying Vault in the same cluster as your Istio cluster?,"Besides Istio 1.2.x, another possible option is to add a flag to Istio 1.3 to choose whether using trustworthy JWT or not, which will avoid disrupting Vault for existing services running Istio 1.3. Add  /u/oliver ,  /u/rlenglet  regarding to the planning of adding the Vault support back to Istio 1.3.","We haven’t started using Vault with Istio yet; however, we already have Vault running outside of k8s. We’d to integrate Vault with Istio and want to make sure we have a clear path forward.","The task here  https://archive.istio.io/v1.2/docs/tasks/security/vault-ca/  is just a toy example. I still think you can use Istio 1.3 with Vault. However, Vault needs to check if the audience of the jwt is  istio-ca  or not (but this is configurable).","Thanks. Is there a doc that details the step? This will not disrupt services vault support is added back, correct?","I don’t think there is a doc yet. (I don’t think there is a doc from  http://istio.io  that shows how to use Vault in prod env, we had just a toy example). What is your setup like? If you look at the example before, every service is using the same service account,  vault-citadel-sa , which means every service carries the same identity. This is what I meant when I said it’s just a toy example. To add to this, if you’re running Vault on the same cluster as Istio workloads, I think it should be fine. But if you’re running Vault on another k8s cluster, you need to sync Istio cluster service accounts with Vault service accounts. Vault sends the jwt represents the service accounts to the api server for authenticating the jwt.","The task on  http://istio.io  and  https://github.com/istio/istio.io/pull/4432  provide an example that uses a k8s JWT for authentication, but it does not mean all services must use the same JWT for authentication: an user may configure multiple JWTs on Vault for issuing certificates with different identities and a service may use its own JWT to request a certificate.",So vault support for Istio with trustworthy JWT is gated on vault adding support for trustworthy JWT?,"Yes. AFAIK, Hashicorp is working on such support for Vault."
Citadel revoke workload certificate - Security - Discuss Istio,Is there a plan to add revocation support in Citadel for workload certificates?,Filed a feature request:  https://github.com/istio/istio/issues/17763#issue-505398468
Ingress Gateway SDS not working with local build of 1.2.5 - Security - Discuss Istio,"For internal rules reasons I have to build my own images for Istio, this is further complicated by the fact that right now I am only allowed to use a Centos7 base or a scratch base. We cannot use Centos7 for the proxy due to older C++ ABI which requires Centos8 so right now we build it with a multistage dockerfile using an Ubuntu image as the builder and transfer pilot-agent and envoy with required libraries to a scratch image for runtime. Whilst convoluted this has worked for us for a number of months until now. We want to switch to using SDS for ingressgateway TLS credentials. To enable this we have moved to Istio version 1.2.5. 
We have configured deployment appropriately and can see that the node-agent sidecar is correctly watching secrets. However we notice that there is no GRPC request coming to the nodeagent sidecar from the proxy to trigger the push of the secrets. (i.e. we do not see this message in nodeagent sidecar logs - https://github.com/istio/istio/blob/d9e231eda0e163d0f3df0103546c7a06b72cc48d/security/pkg/nodeagent/sds/sdsservice.go#L208 ) 
Hence the sidecar does not push secrets to the proxy. I have validated that the gateway deployment is ok by replacing my local build image with the upstream from docker ( http://docker.io/istio/proxyv2:1.2.5 ). When we swap the image we do get the initial request to the sidecar and the credential is pushed to the proxy. However we have compared our build with the upstream and found: Following the debug steps in  https://discuss.istio.io/t/tls-sds-credentialname-not-working-with-ingress-gateway/3537  we can see that the specified dynamicactivelistener config   for our build of the proxy. Pretty much out of ideas on this right now. SHAs on my built image: 
ISTIO-PROXY-SHA: 490fa3febe68bd0ced2f92ba29df899896376ced 
ENVOY-SHA: 9ddb95ee406303c484b1ce1d95810f1ca8bfb22d","so based on further exploration the issue is not related to the binaries I have built but the image itself. 
I have tried copying in the upstream binaries for pilot-agent and envoy to my scratch image. All linker dependencies are resolved and proxy works ok apart from SDS sidecar interaction. 
What am I missing?","I have revisited this, my image build and linking was fine. It seems I was missing something in copying over to the scratch target. 
I updated to 1.3 and changed to use the fetch_ca_certs script. All is good now. 
Consider this resolved"
End-user JWT authentication bypassing authentication - Security - Discuss Istio,"Setting up end-user authentication following the  https://preliminary.istio.io/docs/tasks/security/authn-policy/#end-user-authentication  is not taking any effect and service is accessible without passing the auth header. this always returns 200 OK Kubenetes version: v1.15.0 
Istio version: 1.2.2 Istio gateway and virtual service are setup and service is externally accessed using NodePort.",Solved this - changing the target from app name to service name fixed the issue and enabled authentication.
Ingress Gateway - Decrypt then send to a POD listening on https - Security - Discuss Istio,"Hi all, I was setting up an ingress gateway and VirtualService to send traffic to a pod and received this error:  tls: first record does not look like a TLS handshake After some troubleshooting and finding that log message I figured out the pod was listening on https; so I switched it to http and everything went fine. But I wanted to know if there are any configurations options to allow Istio to terminate https then send traffic to a pod that is listening on https? I couldn’t find anything in the docs, tried a bunch of different methods also…","I think we currently does not support this feature,",cc  /u/diemtvu   /u/incfly   /u/oliver
Upstream connect error when mtls is enabled at namespace level - Security - Discuss Istio,"Hi All  /c/10-networking   /c/12-security   /c/9-policies-and-telemetry   /c/8-config  , I have a simple application with .Net core MVC (UI) service called GiftShopUI .Net core WebAPI (REST) service called GiftShopAPI I have deployed them on AKS (K8s version 1.13.10), istio version 1.4. I have created a namespace called “microservices” in my cluster and enabled automatic sidecar injection on that namespace. Please find my service, virtual service and gateway definitions below. Please find the settings returned by   below. Please find the settings returned by   below. Now i do not see any traffic flowing in WireShark and I start getting the below error. I have verified the certs in my pods and they seem to be ok. Any help is much appreciated.","Did you create a destinationRule for the istio ingress gateway? 
It should look like your enable-mtls rule, but deployed to istio-system.","/u/haim_helman 
I created my gateway in the namespace called “microservices” where all my services are deployed. My destinationrule enable-tls is also in the same namespace called “microservices” where my services are deployed as the mTLS was enabled at the namespace level only. Do you suggest me to move my gateway to istio-system and add an additional destinationrule exactly like the existing enable-tls in the istio-system?","/u/sreenivasmr  - The selector of your Gateway objects indicate that you are using Istio’s default ingress gateway, which is located in the istio-system namespace.","/u/haim_helman  i have tried the changes you suggested. It does not work yet. As per  https://istio.io/faq/security/#enabling-disabling-mtls , mtls settings should look as below. However in my case I see STRICT under Server and ISTIO_MUTUAL under client. How do I set the server and client to reflect mTLS?"
Istio SDS support on GKE - and key rotation - Security - Discuss Istio,"I have a GKE cluster with Istio add-on. GKE version: 1.13.11-gke.5 
Istio version: 1.1.16-gke.0 For Istio add-on on GKE, SDS profile is not installed - and there is no node agent running. In that case how does Istio do key rotation? Appreciate a lot any pointers… Thanks!","For Istio add-on. Citadel creates root certificate and root private key, and stores the cert and key into a Kubernetes secret istio-ca-secret. That istio-ca-secret is the source of truth. Citadel periodically checks workload certificate, and rotates workload cert if the cert is about to expire. The workload cert is signed by the root cert. In Istio 1.1 release, Citadel does not automatically rotate root cert. There is a script that rotates the root cert using the existing root private key.  https://istio.io/docs/ops/security/root-transition/ . We are working on supporting Citadel auto root cert rotation for 1.2+.  /u/oliver"
Istio End User Authentication - Security - Discuss Istio,"We plan to use istio for end user authentication and find out the isser field is required when creating a policy with end user authentication. Since we are using our own token provider, we would like to know how istio use this issuer field to verify the token? Does the payload have to come with an ‘iss’ field that match the isser defined in the policy? 
And besides please let me know if there are more required or recommended fields to generate the tokens ? 
Thanks.",Yes that is correct. Token should have iss field populated
Failed to sign CSR - Security - Discuss Istio,"Hello, 
I am using Istio 1.1.7 and trying to integrate it with Vault (version 1.1.3). I would like to achieve the service to service mtls communication, as explained here:  https://istio.io/docs/tasks/security/vault-ca/ So I setup the Kubernetes auth backend in Vault, and the pki secret backend. I noticed Istio wants a specific path where to mount the pki, so I created a specific path for istio_ca. It seems the SDS is properly configured (the 3 node agent are running properly) and the communication to Vault is properly setup. Once deployed the httpbin and sleep pods, the logs are saying: Looking at the Vault logs, I found request and response from the node agent: It seems to me that Vault is not returning the full chain - maybe is returning only the client cert, but not the CA and the intermediate. Could you help me here please? 
Cheers, 
Simone",/u/leitang   /u/oliver  for help with Vault,"Hi Simone, 
To debug the problem, I suggest you sign a CSR directly on Vault to see if the response from Vault is as expected, e.g., including the correct certificate chain, and etc. 
Lei","/u/leitang  Thanks for your suggestions… I think I’ve made some progresses. 
I realized that, since I am using an intermediate ca, I had to update the VAULT_SIGN_CSR_PATH to point to the intermediate ca (something like istio_int/sign/istio-pki-role). 
Logs look clear now, Envoy is not complaining anymore and SDS says: According to the doc, I should see certs and key under  /etc/certs  in the envoy sidecar, but the path doesn’t exist at all. Am I missing something here? Thanks! 
Simone","In SDS, we store key and cert in Envoy memory instead of to a file. You can check the key and cert of a workload by port-forwarding Envoy port 15000 to a local port and check out the  /certs  endpoint.","Hi Philliple, 
thanks a lot for your input, I can see the certs and the chain as you said. 
I’ll be continuing with the Vault CA task during the next days and let you know the outcome. 
Meanwhile, if you guys need, I am happy to contribute to the documentation for this task - it seems other people are struggling and there are a lot of things to configure (Vault, the auth for k8s, PKI etc…) Cheers, 
Simone","That sounds like a good plan,  /u/simone . Feel free to send a PR here  https://github.com/istio/istio.io","Hi  /u/philliple , 
sorry for late reply, I have been busy lately. I saw there is already a PR opened to improve the doc:  https://github.com/istio/istio.io/pull/4432  . Looks like it will be merged soon, so I can wait for it and maybe add/propose comments on it. Have another issue though… the certs are mounted as you say, but when I curl the httpbin endpoint from the sleep container I get a 503. Here is my destination rule: The istio auth check looks good too: And the mesh policy: I think it’s all well setup, but there is something I missing I think. Looking at the docs, 503 seems to occur when the destination rules are not properly setup or missing, but I think mine looks ok. 
Could you help me here please? Cheers, 
Simone","/u/philliple   /u/leitang  I enabled envoy debugging and found out the following: From the client side ( the sleep container ) I get: So it looks like the client can’t validate the certificate (which one?) but I am not sure why, since both CA and intermediate are generated by Vault (and both signed by the CA). What am I missing here? Cheers, 
Simone","I think I bumped into this:  https://github.com/istio/istio/issues/14853  did I? 
I am using Istio 1.1.7… 
This is from the sidecar of the sleep container…",The error TLSV1_ALERT_UNKNOWN_CA in the log indicates that the CA certificate is not recognizable. Quote from  https://stackoverflow.com/questions/37356579/python-ssl-server-reporting-tlsv1-alert-unknown-ca:  The   TLv1 unknown CA   alert is sent by some clients if they cannot verify the certificate of the server because it is signed by an unknown issuer CA. You can avoid this kind of exception if you use a certificate which is already trusted by the client or which can be validated against a root CA of the client (don’t forget to include the chain certificates too). I suggest you dump the certificate chains received by client and server and verify whether the certificate chains are valid for both sides.,"I’ve found something. I did a dump of the CA certs and both client and server and they are both mounting an intermediate CA instead of the root one. I don’t really know why this is happening. 
Vault has the proper CA but the pods keep mounting the wrong one. I tried to restart the node agents and the pods too, but always the same result. 
I know envoy certs are mounted in memory. So I expect that, when I kill the pod, the memory gets empty and, after restarts, I should see again the ca and the chain. What I see is a bunch of certs instead… always the same CA (the wrong one) and a bunch of different intermediates, i.e. I think there is something wrong in the way the SDS fetches the certs… if you look above, I posted a bug  https://github.com/istio/istio/issues/14853  and maybe I am hitting that. 
What do you think? 
Thanks a lot for your help! 
Simone","Can you try simplified configurations? For example: 
– One CA that directly signs the workload certificates. 
– One CA signs one intermediate CA, which signs the workload certificates.","Hi Leitang, 
I just tried the first configuration - One CA that directly signs the workload certificates. Unfortunately the pods cannot mount any certificate… the certificate list on envoy is empty. I enabled the trace logs and here it is: SDS logs: So the chain is empty, but I am not sure why - the CA seems properly configured and I expect the SDS to properly pick it up… I still see  read error: Resource temporarily unavailable  in Envoy and I am not sure if that’s the culprit here. 
Cheers, 
Simone","Based on the log entry “failed to sign CSR: no certificate chain in the CSR response”, the CSR response does not contain a certificate chain. The failure may be caused by the following reasons: I suggest you add/turn on the logs on the client and Vault server to check what is the request sent from the client, whether the Vault server receives the request, and what is the response from the Vault server. Meanwhile, you can also use the Vault command line tool to directly sign a CSR at your Vault server and check whether the response contains a certificate chain.","Hi Leitang, 
thanks much for your input. This is what I see in Vault logs: 
Request: Response: The response looks okay to me, there is the certificate with the issuing CA… I don’t know why SDS doesn’t take that. I also try to sign a certificate request using directly Vault and it looks good. Is there any way I can enable debug logs on the SDS side? I suspect the culprit is there. 
Cheers, 
Simone","The log level of Node Agent can be set through --log_output_level parameter:  https://istio.io/docs/reference/commands/node_agent/ . If the logs are not detailed enough, you may add your logs in the code of Node Agent and Envoy directly.","/u/leitang   /u/simone   Any further ideas on this issue ? 
Im facing the same exact issue while getting signed with an intermediate cert. I can’t think of a reason why the CA would be invalid in this case if Vault is signing the CSR and returning the correct response.","Hi Kasun, 
For the issue you encountered (i.e., the CA is invalid), can you dump the entire certificate chain received by Envoy (you may need to turn on debug logging of Envoy or add certificate chain logging statements to Envoy) and verify whether the certificate chain is valid (e.g., through openssl tool)?",Would you happen to know how to dump a readable chain ? This is what i get with  /cert  endpoint
Istio node-agent log Level for SDS service - Security - Discuss Istio,"Hello everyone, I am following the SDS tutorial and was checking out the node-agent code. 
Is there a way I can turn on the debug mode for the node-agent. I am talking about the following code: 
 Please, let me know how to turn the debug mode for the node-agent.",You can do a port-forwarding on port 9876.,can you provide the details?,"You can do something like kube port-foward <node-agent-pod> 9876 -n istio-system , then go to localhost:9876/scopez on your machine and change the logging level."
"How to hide ""server' response header - Security - Discuss Istio",I’d like to hide the server response header. Dropping the header from virtual service definition doesn’t help. x-envoy-upstream-service-time  is removed but not  server . What do I have to do to drop that header? or override the header?,This worked for me.  https://github.com/istio/istio/issues/13861,Thanks for sharing the information! It works for me.
ISTIO-SECURITY-2019-006: DoS affecting Istio 1.3.x versions - Security - Discuss Istio,"The Istio Product Security Committee would like to inform you that a vulnerability affecting all Istio versions released after 1.3 (included) has been discovered. Note that the 1.4-alpha and 1.4-beta releases are also affected. This vulnerability has been discussed publicly as a “high CPU” or “100% CPU” bug, and as such is considered a 0-day vulnerability. As we are working on a code fix to address this issue, we would like to share an existing workaround. The exploitation of that vulnerability can be prevented by customizing your Istio install (as described in  https://istio.io/docs/reference/config/installation-options/#pilot-options  ), using Helm to override the following options: Thanks, Francois (on behalf of Istio’s PSC)","What does these changes mean? 0s means “no timeout” at all, doesn’t it?","Yes. /u/dontreboot  Istio 1.3.5 with a security fix has been released today, so you can upgrade to this version.",What are the implications are the changes? When are the proper fixes be out?,/u/dontreboot  1.3.5 contains the proper fixes (i.e. the timeout workaround are only required for 1.3 to 1.3.4 included).
Urgent - How to verify mTLS communication between services with traffic dump - Security - Discuss Istio,"Hi All, I have setup a K8s (v1.13.1) cluster and installed Istio on it. When i have not enabled mTLS yet, if I run istioctl authn tls-check in the default state, I see the below results. If you see above, there is no conflict and my services work as expected. As per ( https://redhat-developer-demos.github.io/istio-tutorial/istio-tutorial/1.3.x/8mTLS.html ) , the default state is supposed to be The   has   value.  I am I doing anything wrong with my Istio installation? I have tried this with previous versions of Istio too. Now if I apply mTLS at individual service level or at namespace level, I see a different behavior than what is documented in istio docs. This is what I see in my cluster. However as per istio docs ( https://istio.io/faq/security/#enabling-disabling-mtls ) I should see   for   and  . Even if I follow this ( https://istio.io/docs/tasks/security/mutual-tls/ ), I do not see what is documented there… I ignored this mismatch for a moment and tried to inspect the traffic between my pod Envoy side cars as mentioned here ( https://blog.getambassador.io/verifying-service-mesh-tls-in-kubernetes-using-ksniff-and-wireshark-454b1e3f4dc9 ) using ksniff. I do not see any TLS traffic. However my sidecars have the certs as mentioned here ( https://istio.io/docs/tasks/security/mutual-tls/ ) There is something wrong with my Istio mTLS setup, which I am not able to figure out. Any help is much appreciated.",istio default installation use  PERMISSIVE  by default. Redhat website may refer to their own distro of Istio which might have different Istio mTLS configuration.
EnvoyFilter - ext_authz for istio 1.3 - Security - Discuss Istio,"Hi, I struggle with converting istio filter from istio version 1.2 to the new api for envoy filters from istio 1.3. However, I have some problems with that, maybe someone will be willing to help me and figure out what I did wrong. Everything applied correctly but traffic isn’t redirected to auth-service (with filter config from version 1.2 it works). Maybe I don’t need to convert this because there isn’t any info that the previous config will stop working soon?","Hello, you probably forget to add filter name in patch.value section, my working configuration is:"
Why not use cert-manager to manage ca cert for istio-sidecar-injector - Security - Discuss Istio,"Hi, I noticed that Istio used  istio-citadel  to create and CA secret for  istio-sidecar-injector . And I also found that  Istio  support  cert-manager  for tls security. I wonder that why not use  cert-manager  to handle the ca secret  sidecar-injector  need as  cert-manager  can also support self-signing Issuers and refreshing. Just out of curiosity, thanks.",/u/leitang /u/costin_manolache are the experts.,"Istio supports Citadel provisioning the certificate for the sidecar injector. Istio also supports Chiron (a new alpha feature of Istio 1.4 that calls k8s CA API to sign DNS certificates) provisioning the certificate for the sidecar injector. In terms of provisioning a certificate for the sidecar injecotr, Cert-manager and Citadel are functionally equivalent. Compared with Cert-manager and Citadel, Chiron makes it easier to distribute the root of trust."
Destination rule to set mTLS ignores specific host - Security - Discuss Istio,"Hi All, I’ve applied 2 ‘ServiceEntry’ in the test namespace I wanted to apply a destination rule to encrypt traffic only to the “ http://test.test.com ” host with the following DestinationRule: From the config dump I can see that the DestinationRule also applied to the “*.test.com” host I found this code 
I’m not sure that in my case this is a match. Is this the expected behavior?",/u/incfly  could you please take a look?,"/u/hzxuzhonghu   /u/howardjohn  thoughts? this is a general destination rule host resolutoin issue. Unless your mesh has  *.cluster.local  DestinationRule, with ISTIO_MUTUAL otherwise, I think it’s a bug based on my understanding…","/u/incfly  thanks for your response. I do not have such DestinationRule. From the description: 
 .foo.com""), in which case we use wildcard resolution rules* 
 I’m assuming that for DestinationRule host match, this logic is wrong.","I agree with you. Please file a bug against networking area, and provide minimal reproducible yaml/steps.",/u/incfly  Thanks for the response. I’ve submitted a bug  https://github.com/istio/istio/issues/19459 Should I assign it to someone?
Centrally Manage Citadel Certificates? - Security - Discuss Istio,"Hey folks, new here - go easy please. I’m trying to help a company’s security with their new Istio deployment(s) and today their curious about centralized management and monitoring of certificate policies. Could an external certificate manager (e.g. Venafi) manage or monitor (at a minimum) Istio certs? Thanks in advance.","Hi, Luke, and welcome! I have heard anecdotally that Venafi isn’t ideal for issuing certs directly for Istio (because of the number of certs and frequency of rotation). So I believe the typical use case is to use Venafi to generate a root cert and plug that root cert into Citadel (see docs here:  https://istio.io/docs/tasks/security/citadel-config/plugin-ca-cert/  )"
Access istio/k8s service via HTTPS - Security - Discuss Istio,"I hope I’m asking in the right place. 
I’m a bit new to Kubernetes and istio. I’m trying to create a service and access it over HTTPS. These are my configurations files of the Gateway, Virtual Service, Cluster Issuer, and Certificate. Gateway Virtual Service Cluster Issuer Certificate When I’m running  kubectl get secrets messaging-certificate -o yaml , I can see both the tls.crt and the tls.key content. Any ideas why I can’t get to a point where I can access over HTTPS? Full  https://gist.github.com/ElonSalfati/49bcf438ff1d5d34dd7870bfb6e0359e  - I have generated the manifest using  istioctl manifest generate . Hopefully that’s the correct way Stackoverflow: 
"
Authentication policy with okta is not working - Security - Discuss Istio,"Hi We are using aws -> istio -> okta for authentication. we configured our services with aws and istio. Wanted to apply OKTA authtication policy i.e, JWT verification similar to auth0. Even if we applied the policy, requests are not getting authenticated. Below is the configuration 
apiVersion:  http://authentication.istio.io/v1alpha1 
kind: Policy 
metadata: 
name: ingressgateway-policy 
namespace: test 
spec: 
targets: Let us know if we miss anything or anything needs to be changed?",Policy looks correct to me. Did you take a look at operation guide  https://istio.io/docs/ops/common-problems/security-issues/#end-user-authentication-fails  ?
Connectivity Verification from side car to istio pilot for mTLS enabled policy fails - Security - Discuss Istio,"As mentioned in the page  https://istio.io/docs/ops/diagnostic-tools/proxy-cmd/  to verify connectivity between sidecar envoy and istio pilot ,  i performed below test Logged in to istio-ingress gateway pod Tried curl commnad from istio-ingress gateway pod to istio-pilot with all certificates as mentioned in below command 
root@istio-ingressgateway-58447cfc87-mxgjl:/# curl -k --cert /etc/certs/cert-chain.pem --cacert /etc/certs/root-cert.pem --key /etc/certs/key.pem  
 . And I am getting error message as shown above highlighted in bold. Does any one have idea what could be wrong? Regards, 
Krimesh"
"How do the developers usually specify the end-user permissions? i.e., How do we know the permissions of an end-user? - Security - Discuss Istio","Hi, I am studying istio and microservices. Currently, I have a question about the permissions of end-users. I understand that administrators can issue authorization policies based on the end user’s permissions, but where are the end-user permissions usually specified? i.e., How do we know the permissions of a user? Is there any corresponding judgment logic in the code (e.g., if (user==“admin”){…} else{…})? Or do they have a dedicated database to store end-users and their corresponding permissions? If there is a dedicated database, how do they perform the permission enforcement?"
Istio mtls connection issues - Security - Discuss Istio,"Hi guys, I’ve been using istio for a few weeks now in dev environments and want to deploy towards acc/prod. 
We want to make use of global mtls on our clusters but keep bumping into issues with pods losing connection to other services. I’m using istio 1.3.1 on k8s v1.14.6 (dev) and v1.15.4-k3s.1 (local-dev) with rancher 2.3.1. I am able to deploy the httpbin and sleep containers from the sample files without issues, however our own deployments are not able to connect when enabling mtls. To test our deployments I made a simple grpc client and server to check if the mesh works as intented. When using the istio mesh without mtls the services can connect with loadbalancing to the services. When enabling mtls by setting the policy to strict and adding a destination rule the client will start giving 503 errors: 
“upstream connect error or disconnect/reset before headers. reset reason: connection termination” 
Kiali still sees traffic flowing over the mesh network but the istio-proxy sidecar doesn’t seem to hand over the request to the pod, wireshark confirmed this behaviour as the request does flow from the client-ip to the server-ip but no internal traffic on 127.0.0.1 from the sidecar to the pod. Apart from my grpc test a simple nginx and curl container also fail to communicate with mtls active. 
Unless I copy the sample line by line altering the names and image I always recieve the 503 error. 
The only difference I noticed when comparing my working deployment and non-working deployment is the selector rancher adds to the deployment and service: I feel like I’m missing something pretty trivial but haven’t found any clear solution after a week of trial and error and lots of googling. Any help would be much appreciated. Michael","It appears to be tied to namespaces. 
Everytime a namespace is created using Rancher mtls just doesn’t enable correctly. 
When a namespace is created using kubectl the testsetup works like a charm. I have not been able to figure out what exactly is different on namespaces created by rancher and kubectl but I’ll post an update if I figure out what the problem is.","Is this related to how your workloads deployed? We see some issues when the pods/workloads are not associated with a service, the istio mtls configuration can be wrong. does rancher created namespace affect on that regards?","I’ve tried different combinations of deploying a deployment on the rancher gui and via the sample yaml files. Every deployment in the kubectl created namespaces worked fine even more basic deployments set up using the rancher gui. 
I’ve not been able to get anything to work in the rancher created namespace. Digging through the namespaces using kubectl and diffing the yaml output I noticed no major differences, the few things like annotations created by rancher did not affect anything after mimicking these.",Not sure what exactly caused this issue but it got resolved after upgrading to kubernetes v1.16.x on both my dev and local-dev cluster using rke 1.0 on dev and k3s on local dev.
"Authorizationpolicy issue with readiness, liveness probes throw 403 - Security - Discuss Istio","Hi, Name:         probes Namespace:    app-platform Labels:       <none> Annotations:  <none> API Version:  security.istio.io/v1beta1 Kind:         AuthorizationPolicy Metadata:   Creation Timestamp:  2019-12-17T09:07:45Z   Generation:          1   Resource Version:    188723   Self Link:           /apis/security.istio.io/v1beta1/namespaces/app-platform/authorizationpolicies/probes   UID:                 b0813be6-20ac-11ea-afdc-ce6838e62bd6 Spec:   Rules:     From:       Source:         Namespaces:           app-platform     To:       Operation:         Hosts:           my-app.app-platform.svc.cluster.local         Methods:           GET         Paths:           /actuator/health         Ports:           8080 
2019-12-17T08:46:28.544162Z	debug	rbac ignored HTTP permission for TCP service: hosts([my-app.app-platform.svc.cluster.local]) 
2019-12-17T08:46:28.544185Z	debug	rbac	role skipped for no permission matched 
2019-12-17T08:46:28.544222Z	debug	rbac	built tcp filter config: {envoy.filters.network.rbac 0xc002408850 {}   0} 
2019-12-17T08:46:28.544276Z	debug	rbac	added TCP filter to filter chain 0 Thanks, 
Saif","It’s likely that the readiness probe doesn’t carry the  source  information or the host is not  my-app.app-platform.svc.cluster.local . Can you remove them (both, or one-by-one) to see if it works?","Also, you may want to check  https://istio.io/docs/ops/configuration/mesh/app-health-check/#liveness-and-readiness-probes-with-http-request-option  to bypass proxy for probe requests.","Thank you, I was able to overcome the issue. I have one question though w.r.t behavior of Authorization policy suppose I have my-app, backend-app and db-app within the same namespace and I want to block access from my-app to db-app by using Authorization policy (service-account based). So, my question is Is the Authorizationpolicy not applicable to service to service communication within a namespace Is the Authorizationpolicy not applicable to service to service communication from a different namespace I observed RBAC access denied when I was querying from external using virtual service."
JWT authentication on specific method - Security - Discuss Istio,"Nice to meet you all. Due to some interop requirements with a third-party app, I have designed an API as follows: I’m precious about keeping paths consistent, so I’m wondering what options are available to enforce an origin policy only on the GET method? I was thinking to split out authenticated and non-authenticated endpoints into different service ports/matching rules, using the policy ports target selector and creating two separate policies.  Is this sane?  Or am I potentially missing a jwt triggerRules option that can be used for the http method? Thanks ","You’re not missing anything from the  triggerRule , it currently only supports path. For your requirement, Instead of modifying your application (this is also possible if you think it gives you a better architecture), you can also use  https://istio.io/blog/2019/v1beta1-authorization-policy/  to do the fine-grained access control based on methods or paths. You can apply the following policies to do so, the trick here is to set  originIsOptional  to  true  delegate the access control to the authorization layer: The following authZ policy requires JWT token on GET method only: With the new JWT policy and deny/exclude semantics in AuthZ policy, the above policy could be much simplified and also more flexible other requirements."
Authorization policy is not working properly - Security - Discuss Istio,"I have created authorization policy as shown below and specified rules to apply for GET and POST Method which includes the path. If Rest endpoint contains account in the path then check whether scope includes “yzx”. But If I send scope “xyz” for account API it is not throwing 403 error. apiVersion: “ http://security.istio.io/v1beta1 ” 
kind: “AuthorizationPolicy” 
metadata: 
name: “auth-policy” 
spec: 
selector: 
matchLabels: 
app: billing 
rules: 
- to: 
- operation: 
methods: [“GET”] 
path: [“ ”] 
when: 
- key: request.auth.claims[scope] 
values: [“xyz”] 
- to: 
- operation: 
methods: [“GET”] 
path: [“ ”] 
when: 
- key: request.auth.claims[scope] 
values: [“yzx”] 
- to: 
- operation: 
methods: [“POST”] 
when: 
- key: request.auth.claims[scope] 
values: [“abc”] Am I missing something?",Sorry its my mistake. typo problem it should be “paths”.,"Thank you for reporting and glad it’s resolved, let me know if you need more help."
Istio and Kubernetes Network Policies - Security - Discuss Istio,Are there any resources for using Kubernetes Network Policies with Istio?   What access should I give istio to my namespaces and vice versa to allow for configuration?,K8s Network policies is on a different level of access control and is enforced out of Istio. I think you just need to allow access from the  istio-system  namespace in your k8s network policy so that Istio control plane is able to talk to the Envoy in your pods.
Istio Authentication with Internal Service - Security - Discuss Istio,"Hi everyone. 
I currently need that every time a service is required to be accessed, you must first verify in another internal service if you are logged in. 
There is currently the logon logic within my service. 
My question is: how can I do that if I want to consume another service within my network? First I will validate that the login exists. The service offers a 200 or a 401. I’m looking for options with   but I can’t find a solution. It is something similar to an authentication with Auth0 but this time I must validate against an internal service. If you can help me, I would greatly appreciate it."
Citadel rejects requests from mesh expansion node - Security - Discuss Istio,"I’m currently trying to get istio-1.1.4 up and running with mesh expansion and mTLS enabled. My main issue for now is making a host-based service reachable from within a k8s cluster. 
Without mTLS everything looked fine. With mTLS the service was not reachable anymore, and checking the logs for the istio-auth-node-agent revealed the following: Citadel (which is contacted here) says the following: 
 2019-05-02T14:23:26.327519Z	info	grpc: Server.Serve failed to complete security handshake from ""100.64.0.100:40098"": remote error: tls: unknown certificate The relevant certificates for /etc/certs have been fetched according to the mesh expansion documentation from the istio.default secret (from the namespace the expansion node shall be part of). Anybody else observing that and having an idea how to debug this further or what I am doing wrong?","I made some progress: 
It seems to be caused by activating controlPlaneSecurity (which is disabled in the helm chart by default, but assumed for the mesh expansion tutorial). The helm chart does in that case explicitly set a DestinationRule with tls.mode: DISABLE for pilot, but not for citadel. If I do that, citadel connections work again. 
Now I do have a working connection from istio-auth-node-agent to the control plane, but my mesh expansion in general is broken. I currently cannot persuade a pod to send any traffic to my expansion node (according to iptables on the target node).","/u/incfly 
do you have the same experience when having pod talk to expansion node in mesh expansion tutorial?","More progress: 
By carefully choosing when to use abbreviated names and to use fqdn in the ServiceEntry and DestinationRule definitions (and eventually just dropping the DestinationRule sind mtls is activated by the default rule anyway when using *.local names), my pods are reachable now. Partially the envoy config could not be generated because of collisions of the names in ServiceEntry, DestinationRule and service/endpoint registered for the expansion node via istioctl. I additionally observed that I need to restart the envoy on the expansion node from time to time. That is even more confusing since it depends on the source node of the communication if it works or not - but restarting the target makes the experience consistent again …","I’ve managed to get the mTLS working between k8s and vm services. My initial guess of the mTLS failure is due to the lack of secure naming information. Pilot does not know what service account the VM services is running as. The supported mechanism is using annotations on k8s services, i’m not sure if we have documentation on that… Control Plane mutual TLS should be used since we use gateway with sni routing + mtls for vm to reach out to pilot and citadel. Also can you elaborate a little bit about why envoy restarting is needed on vm? what issue will occur if you don’t restart? This sounds like a serious bug that we should track.","Seems I got my restarting problems solved on the vms, that was an error on my side. There was local puppet run messing with iptables which broke the communication path. 
I started another test run and will see how long that looks fine. 
I think my original issue with citadel is still valid, needing to disable tls in the destination rule for talking to citadel",I have found this issue following the documentation to install a shared control plane in a multiple networks scenario. Is this a known bug?,"/u/incfly , using Istio 1.3.5 on GCP I’m on the same page as  /u/sfudeus . It seems mesh-expansion,  or at least reaching citadel ist only possible when adding a destination rule to disable mtls for citadel. 
I was following the official tutorial, global mtls ist enabled as well as service plane security. 
You have mentioned something regarding SNI , can you give some more details on that?"
Securing Istio PKI - Security - Discuss Istio,"Hey 
As I understand, the PKI is the most sensitive part of Istio - and a compromise root certificate allows a hacker to impersonate any service. How can I protect the root certificate? Something besides Vault CA integration? I’ll be happy to read more about the security model and have a deeper understanding - is there something like a public threat model available? Thanks! 
Omer","You ask two different questions. What is Istio PKI root threat model or how to plug the PKI infra other than Vault? For the first one, the doc I’m aware of is  https://istio.io/docs/concepts/security/#node-agent-in-kubernetes . Prior SDS, root are delivered via secret mounts; in 1.1 SDS introduced, root can be delivered via SDS via Citadel Agent. If for the second one, that’s interesting. Do you mind sharing more requirements about pluggability?","It really depend on the threat model - meaning, intuitively, I want to say that I would like to have HSM protections for the root CA. So either support for systems like Azure KeyVault or PKCS11. This will make it almost impossible to extract the keys and give built-in audit capabilities. As this is the root of trust of the authentication, this is pretty important.","There is some work to support HSMs, but is still in early phase as far as I know:  https://discuss.istio.io/t/review-request-istio-ca-key-protection-using-softhsm/1716",Reviving an old but still relevant topic. I believe what  /u/omerlh  had in mind was some publication like  https://www.vaultproject.io/docs/internals/security.html . I’m especially interested in understanding what safeguards there are with respect to self-signed certificates and if you execute any of the commonly known mitigations like certificate pinning.
Authentication Policy Origins JWT - Internal vs Public Access - Security - Discuss Istio,"I am building a simple test system that keeps track of Smoke Detector Batteries. 
The database entity is simple: Smoke Detector location (in the house) and date of battery install. 
In Istio, I have three services: 
[1] Smoke-Detector-Service (provides a list of all smoke detectors - providing name and date of install, also has methods to CRUD detectors) 
[2] Alert-Email-Service (everyday it calls the Smoke-Detector-List service and sends an email alert for the detectors with a battery older than 11 months) 
[3] Web-Interface (provides a webpage to access smoke detectors and create/update/delete records) Istio Configuration (Gateway/VirtualService) 
[A] [3]Web-Interface and [1]Smoke-Detector-Service are exposed publicly via Gateway/VirtualService 
[B] [2] Alert-Email-Service is not exposed publicly The [3]Web-Interface calls the [1]Smoke-Detector-Service and it works beautifully until I try to secure the [1]Smoke-Detector-Service. 
I secure it ([1]) by using an Authentication/Policy-Origins-JWT and it works so far. 
The user has to login to the web-app, uses keycloak to get the auth-token, then calls the secured [1]Smoke-Detector-Service with the token and works well. The Problem: 
The problem is that, when I enable the Authentication/Policy-Origins-JWT for the [1]Smoke-Detector-Service then the internal [2]Alert-Email-Service cannot access it. 
How do I secure a service using Authentication/Policy-Origins-JWT but allow it to be called from inside the mesh (without using JWT inside the mesh). 
Basically I want a mesh where all internal services are trusted - no jwt needed, but services available internally and also exposed to the Internet (Public) are secured from outside via JWT. Was I clear in what I am looking for? 
Is Istio capable of this? How to configure it? 
Any help is greatly appreciated…",There are 2 options to solve this: you can apply the JWT policy on your [3]Web-Interface but not on [1] Smoke-Detector-Service. you can set the JWT policy with   and use Istio Authorization policy to enforce different access control based on the source of the request. You can write an authorization policy that requires JWT token only if the request is coming from [3] Web-Interface.
How to tell pilot to fetch JWKS certs using mTLS? - Security - Discuss Istio,"Hi, I have an IDP (keycloak) running in an istio-enabled namespace. The service has a policy like this: The cluster-default DestinationRule is: Istio is installed using helm and has  controlPlaneSecurityEnabled: true 
However I’m seeing a lot of errors from discovery when fetching JWKS certs from keycloak 
 Failed to fetch public key from ...   which comes from this file:  https://github.com/istio/istio/blob/f2222fe2c3c1543cb90562fa03d7887191b37844/pilot/pkg/model/jwks_resolver.go#L242 My hunch is that Pilot is not using mTLS to fetch the JWKS certs - and indeed if I exec into the pilot pod I’m not able to fetch the certificates. 
If I use mTLS: PERMISSIVE for keycloak then Pilot can fetch the certificates, but I would rather avoid this. How should my DestinationRule, Policy and MeshPolicy to instruct Pilot to use mTLS?","I noticed the same issue three months ago and could not find a solution yet. As far as I know, fetching JWKS certs using mTLS is not supported yet.","I talked with some folks and confirmed that we don’t go through sidecar by default when Pilot is fetching the Jwt public key, so then obviously mTLS fetching a IdP within cluster wont work… And In future release, Pilot will use kube apiserver signed DNS cert. won’t have a sidecar. I also remeber some customers are requiring to use customized key/cert when fetching public key (their IdP maybe is a normal https, with cert signed by internal CA). Maybe we can have some discussion/proposal around how to make this cutomizable… /fyi  /u/yangminzhu   /u/diemtvu","From my perspective it would be very nice to make fetching of JWT public keys customizable. 
My use-case is the following: So the only thing in this setup that doesn’t support mTLS is Pilot. It seems un-intiutive that the IdP needs to run in Permissive mTLS mode instead of Strict. Until we have a proposal for the above I think it should be mentioned in the documentation regarding JWT Policies that the JWKS URI cannot use mTLS. 
It took quite some debugging to find out that mTLS was the problem "
TLS Tickets with multiple Ingress Gateway - Security - Discuss Istio,"Hello! I am running Istio 1.0.6 and saw that envoy has TLS Tickets enabled by default. When running with only one Ingress Gateway, session is resumed correctly ( openssl s_client -connect [ENDPOINT] -reconnect ). On the other hand, when Ingress Gateway is scaled to multiple replicas, session may sometime be resumed (if it land on the same pod I guess), but in most case it’s not, and a new TLS Tickets is issued. Is there any configuration that can be done to change this behaviour, or is it simply not implemented in Istio (if so, is it a planned feature ?).","It’s an Envoy behavior that we also observed, but TBH, we haven’t digged into it yet. Have you consulted with the Envoy team? 
 /u/costin_manolache  Costin, do you have clue why that happens?","The  https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/auth/cert.proto#auth-tlssessionticketkeys  show there is only an array of keys used to encrypt/decrypt TLS Tickets. 
It also says keys are generated internally (per envoy process), which may explain the current behaviour. I’m not quite familiar with Istio development, could Citadel handle keys generation/rotation ?","Citadel only handles the key generation and rotation for the internal mTLS traffic. For the external-facing TLS certs, it replies on users to rotate them through the K8s secrets.",Ok I see. I though of Citadel because the Envoy docs state that TLS keys should be handled as securely as private keys used for certificates. Should I fill in a feature request in Istio github repo ?,"I’m pretty late on this, but here is the issue :  https://github.com/istio/istio/issues/20347"
JWKS Parse Error - Security - Discuss Istio,"Hello, I’m trying to upgrade from 1.2.2 to a new version, preferably to 1.3.3. However, when I try to upgrade, I’m seeing an error on the istio proxy sidecar starting properly due to a mysterious JWKS parse error. I’m seeing this error on versions 1.2.7 and 1.3.3: I checked the JWKS and all keys with kty = “EC” have both an “x” and “y” field set. Beyond this my OIDC provider is PingFederate which I doubt it serving up an invalid JWKS, and this JWKS works on 1.2.2. Thanks for any help","If anyone could help me out here, I’d appreciate it. Right now I’m unable to upgrade.","If you rollback to 1.2.2, does the error still exist?  /u/yangminzhu",Istio 1.3 changes to use the upstream Envoy JWT filter which is following the JWKS standard more strictly and this is possibly causing the issue. Could you share the jwks to reproduce the issue?,"Yes if I rollback to 1.2.2 I don’t have an issue.  /u/yangminzhu I can share a redacted version of the JWKS, is that okay? Note this is from PingFederate, which is a pretty standard enterprise IdP. Thank you for the help ","/u/yangminzhu  Here is the redacted JWKS, I’ll work on getting approval to send the full JWKS to you. It would preferable if I could send you personal message/email instead of posting the full one on here. Please let me know if you need any additional information, alternatively I can help reproduce the issue myself.",Having same problem with Istio and PingFederate. Have found out that copying the JWKS to a new location without the EC’s works fine (at least for a few hours until the keys rotate). Our IdTokens are RSA signed,/u/yangminzhu  Here is the full JWKS,"Thank you for the information, I will test it to try to reproduce the issue. /u/michael_whittlestone  what do you mean for  without the EC ? Do you mean remove the  ""kty"":""EC""  in the jwks?","/u/yangminzhu  Yes, I think if you remove the EC keys it will go away given the code below. I can’t test as I ran into this issue a while ago, and it takes a while to repro for me. Looking into the issue more, I think the jwt verify library needs to be updated in Envoy, it doesn’t have support for EC-384 and EC-512 keys and that is causing it the JWKS parse error. See the following links: Where envoy is throwing the first part of the error: 
 Where the second part of the error message is coming from:  https://github.com/google/jwt_verify_lib/blob/9f10e2d60d42edeb6662e185707a7d6a4ebc5604/src/status.cc#L72 
Where the second part of the error maybe coming from:  https://github.com/google/jwt_verify_lib/blob/9f10e2d60d42edeb6662e185707a7d6a4ebc5604/src/jwks.cc#L90 
Adds EC-384 and EC-512 support:  https://github.com/google/jwt_verify_lib/commit/4d9461344d9768c3cd05f8d90d4518b83d113f9d 
Looks like its already fixed in envoy:  https://github.com/envoyproxy/envoy/commit/b9faab6747a9a884cc4518b8f0e574acd763c3cf","Thanks for the investigation, please see my reply in  https://github.com/istio/istio/issues/19424#issuecomment-562729218",/u/michael_whittlestone  Where you able to resolve the issue? Did you just remove the EC keys from PingFederate’s JWKS? I tried moving to 1.3.6 and 1.4.2 and still facing the same or similar issues.,/u/yangminzhu   /u/jimmychen  Any help will be greatly appreciated. See my cooment on the GitHub ticket:  https://github.com/istio/istio/issues/19424,"Note, this issue is fixed in 1.4.3 release.",Can confirm this works fine with Istio 1.4.3 and PingFederate JWKS.,"/u/yangminzhu  Thank you for fixing this, it was rolled out to our production environment already "
Configure Istio Ingress Gateway to require header token using Authorization Policy - Security - Discuss Istio,"I configured Istio Ingress Gateway to accept my URLs (using https) like   ,   and so on. Everything is working but all the urls are public. Beacause of that I was asked to configure ingress gateway to protect urls inside   (Grafana has a login page). The idea is allow acess only if the request contains a token inside the header. But when I applied this yml file all the URLs are blocked and they require the header including   : apiVersion:  http://security.istio.io/v1beta1 
kind: AuthorizationPolicy 
metadata: 
name: ingress 
namespace: istio-system 
spec: 
selector: 
matchLabels: 
app: istio-ingressgateway 
rules:"
Istio Authorization with Internal Service - Security - Discuss Istio,"Hi everyone. 
I currently need that every time a service is required to be accessed, you must first verify in another internal service if you are logged in. 
There is currently the logon logic within my service. 
My question is: how can I do that if I want to consume another service within my network? First I will validate that the login exists. The service offers a 200 or a 401. I’m looking for options with EnvoyFilter but I can’t find a solution. It is something similar to an authentication with Auth0 but this time I must validate against an internal service. If you can help me, I would greatly appreciate it.",I think you can use  EnvoyFilter  to deploy an ext_authz filter to talk to your other service.,Do you have any examples of what I need? I tried to implement EnvoyFilter but it doesn’t work as it should.,Do you have any examples of what I need?,"I don’t have a working example, but a quick search on  http://discuss.io  shows some examples:  https://discuss.istio.io/t/envoyfilter-ext-authz-for-istio-1-3/4234/2","I have applied the yaml making the respective modifications based on my service. 
But I don’t see that it’s working. Do you know how I can see if there is an error?","I have just gone over this myself, was not able to get it to work on the GATEWAY, which is what I had wanted, but did work on the SIDECAR.  The response to that thread is pretty much what I have working.   I had some logging on the 2 service to see the requests.  To verify I removed the active login (flushed redis cache backing the authentication) and was logged out from the front end.","You can show me what you have done, I am very lost in this filter that I require",,"In the workloadSelector, when you call the app, is the name of the app you are referring to a service? Is it the same EnfoyFilter?",service == app This is the app that needs authentication.  auth is the name of the service doing the authentication and ns is the name of the namespace where the auth server lives. just put the filter in the same namespace as your app.,I have copied your code and add my service. But I still have the doubt of the app inside the workloadSelector,"that is a label on your app.   any pod that has that label will have the envoyfilter applied. it doesn’t have to be app, you could label all your workloads with: 
auth: true","So, if I want to apply the lock to another service, in the app I only put in the name of this service. Is that correct?","So is my EnvoyFilter. 
But when I see the logs of my istio gateway, I only get a 200 response. At no time does it access the filtering service. 
It’s wrong ? Or am I misunderstanding how it works?",so both your app and the authentication service are in the testing namespace.   you have envoy sidecar added to the back-test pod?   I am using auto sidecar injection.  this seems like it should be working.,I currently have no sidecar configured. Should I create a yaml sidecar to make it work?,in namespace I only have istio-injection = enabled,do your pods have an istio-proxy container added?  they should.   if so you can log on to them and curl localhost:15001/clusters to make sure your auth cluster is available.,how can i do that ? Im new in this theme
Mutual TLS over HTTPS on calls via the ingress gateway - is this possible? - Security - Discuss Istio,"Hi All Is there a possible configuration for mtls between the ingress gateway and an application in the mesh IF the application endpoint being called is HTTPS? This is what I’m trying to achieve: https calls coming in from the internet to be terminated at the gateway (this is what my current setup looks like) then forwarded to the application as a https request, with mutual tls on the layer 4 tcp traffic between the gateway and the sidecar of the application being called. I believe I’m doing this correctly for HTTPS calls WITHIN the mesh from one application to another as per the docs at  https://istio.io/docs/tasks/security/https-overlay/   “The reason is that for the workflow “sleep ->   sleep-proxy   ->   nginx-proxy   -> nginx”, the whole flow is L7 traffic, and there is a L4 mutual TLS encryption between   sleep-proxy   and   nginx-proxy  . In this case, everything works fine.” However I’m failing to achieve this with calls from the gateway to a backend HTTPS app (error = “http request sent to a https server”). The only way I can configure my https app to work is by putting in a destination rule with tls SIMPLE mode and a policy that allows none mtls traffic to that specific application. (as the rest of the mesh is set to destination rule mtls, policy mtls for all services). When I refer to the documentation I notice that the server side proxy in this instance maybe downgrading HTTPS to HTTP: Based on the above is it the case that because the call in my environment is being done from the ingress gateway itself to the HTTPS application, the server side proxy is downgrading my HTTPS call and ultimately leading to the error “http request sent to a https server”? If this is the case, is there anything that can be done to achieve what I would like from the pic above? and why does the server side envoy proxy automatically downgrade HTTPS calls? Many Thanks","I’d like to understand this use case a little better. In your desired scenario, where are the TLS sessions being originated and terminated? In particular, the TLS session originated by the user’s browser/endpoint (the cloud in your diagram) — where is it terminated?  At the Ingress Gateway?  Or does it need to be tunneled through the mTLS session and terminate at the HTTPS oauth application?","Hi thanks for the response. The TLS session from the users browser is terminated at the ingress gateway and the cert on the gateway is presented to the users browser, which is fine. It’s the forwarded call from the ingress gateway to the sidecar of the backend HTTPS auth app that I’m trying to establish mutual TLS with, then I would like this sidecar to forward the https traffic locally to the HTTPS auth app that resides within the same pod. As such… ingress-gateway > oauth sidecar > oauth app. I have a policy applied that dictates mutual tls across the namespace, I also have a destinationrule applied such that all traffic being sent is over mutual tls. I think what is happening at the moment is because my ingress gateway is doing the termination and forwarding, it is operating at layer 7 and thus establishing a layer 7 mutual tls connection with the oauth sidecar. When this is terminated at the oauth sidecar the traffic is then forwarded to my https oauth app within the pod over plain http… and hence I get the error message “Client sent an HTTP request to an HTTPS server.” I have another application within the mesh that makes https calls to this oauth app and does so successfully. I believe this is because envoy recognises that it is a https request and should therefore operate in transparent mode, where the mutual tls connection between sidecars is done at layer 4, and the https stream between client app and oauth app is kept intact. (I do not know how envoy makes the decision to do this). I’m essentially trying to achieve the same result with my call from the ingress gateway, because at the minute my only way of making the call work is to enable SIMPLE as a destination rule to this service, as well removing the mtls policy - which is not my desired solution.  Any advice or correction of my understanding is welcome.","One thing to try if you haven’t: on the K8s Service corresponding to your oauth application, ensure you name the port “https”.   https://istio.io/docs/setup/kubernetes/prepare/requirements/ What needs to happen is for Istio to configure the sidecar Envoy to speak HTTPS to the oauth application backend. I think it   do that if you name the port “https,” but if not, we (the security WG) might have to discuss how to handle this config.","I’ve ensured my oauth service is names correctly, still get the same problem. My service: apiVersion: v1 
kind: Service 
metadata: 
name: oauth 
labels: 
app: oauth 
spec: 
ports: This is reflected correctly in my cluster config on the oauth sidecar: http://localhost:15000/clusters inbound|4444|https-oauth-public|oauth.default.svc.cluster.local The traffic destined for the local interface 127.0.0.1:4444 in the oauth pod is still coming out as raw http. And the traffic that is destined for eth0 in the oauth pod arrives as encrypted traffic. The same as before. Destination rule: apiVersion: “ http://networking.istio.io/v1alpha3 ” 
kind: “DestinationRule” 
metadata: 
name: “default” 
spec: 
host: “*.default.svc.cluster.local” 
trafficPolicy: 
tls: 
mode: ISTIO_MUTUAL Policy: apiVersion: “ http://authentication.istio.io/v1alpha1 ” 
kind: “Policy” 
metadata: 
name: “default” 
spec: 
peers: The istio logs for each service under this configuration: Oauth pod sidecar: The Ingress gateway log: * Many thanks for your continued help","So, I don’t think what you want is possible in Istio currently. I chatted with some other devs, and we don’t have a way for you to configure the proxy to set up HTTPS connection to the local backend. However, I think you might be able to configure things so your application can still function. On the Ingress Gateway, configure the TLS mode to  PASSTHRU . This will make it so the gateway doesn’t terminate the TLS session from the browser, instead tunneling it thru mTLS to the sidecar, where it gets forwarded to your application as TLS.  You’ll lose the ability to do traffic management or collect HTTP request level telemetry, since Istio isn’t decrypting the end user traffic, but it should at least work.","Thanks for digging into this. I think based on this outcome I’ll need to stick to a SIMPLE destination rule and remove my policy for the specific oauth port, therefore just relying on https rather than a mutual tls session. Passthrough worked as you say however I have other services behind the ingress gateway (forwarding from 443 on the ingress) that I don’t want to use Passthrough for as a configuration. SNI filtering seems not to be a viable strategy for me in this instance as well as all calls from the client to the ingress gateway indicate the same hostname.","Hi, is there any other workaround? I think about setting up another envoy sidecar just for translating http to https because my application forces me to use https."
Citadel support multiple replica or not? - Security - Discuss Istio,"Hi, I found the citadel replica is configurable like this (replicas: {{ .Values.replicaCount }}, the modification is in  https://github.com/istio/istio/pull/14961  ), but the doc said “Citadel does not support multiple instances. Running multiple Citadel instances may introduce race conditions and lead to system outages.”. 
Can anyone help to confirm which one is correct? 
 /u/tao_li Thanks,","Yep, this feature seems to be supported. I’ve submitted a pull request to update the docs.","Hi  /u/jwendell Then does I need to enable the flag  --read-signing-cert-only  in citadel to make multiple citadels setup work? https://istio.io/docs/reference/commands/istio_ca/ --read-signing-cert-only: When set, Citadel only reads the self-signed signing cert and key from Kubernetes secret without generating one (if not exist). This flag avoids racing condition between multiple Citadels generating self-signed key and cert. Please make sure one and only one Citadel instance has this flag set to false. I can’t find any reference to this flag in helm chart or the new installer repo.","who know this? does that mean only “not self-assigned” citadel support multiple relica? 
Thanks, 
 /u/oliver Hobby"
Order of execution of Istio Authentication Policy and Mixer-based authorization : Istio 1.3 - Security - Discuss Istio,"I have an Istio 1.3 cluster with an end-user JWT Authentication policy attached to a microservice. I also have an Authorization Mixer adapter setup for runtime authorization check. I would expect that the authentication policy kicks in first, followed by authorization. But the reverse seems to be happening , and if a client sends a request without any credentials, client gets a 403(mixer-authorization-denied error) , whereas they should receive a 401 Authentication Denied error. This has other ramifications, because since the authorization happens before authentication, the authorization request.auth.principal attribute is not set . Setting this attribute requires authentication to take place first."
Is it possible to examine the mtls certificate in istio 1.5 - Security - Discuss Istio,"in 1.4, citadel would write the certs to secrets (and apparently to /etc/certs in istio-proxy of a given pod), so you could view the cert to see the principal, the expiration, etc. with 1.5, certs are no longer written to secrets or to /etc/certs, so is there somewhere I can view the cert?",The certificate can be viewed through the openssl s_client command. The following example command retrieves the certificate of an example service httpbin (the details can be found in  https://istio.io/docs/tasks/security/plugin-ca-cert/#verifying-the-certificates ). (kubectl get pod -l app=sleep -n foo -o jsonpath={.items…metadata.name}) -c istio-proxy -n foo – openssl s_client -showcerts -connect httpbin.foo:8000 > httpbin-proxy-cert.txt,I think it’s in the config dump as well?,"this is perfect, thanks!","what’s the config dump? edit: found istioctl proxy-config command, but I don’t see anything that immediately looks like it would provide a dump of the certificate. is there a specific command you know of?",https://github.com/istio/istio/wiki/Troubleshooting-Istio  can get the raw config dump istioctl proxy-config secret  will get this as well
Question on Mixer support in Istio 1.5 and authorization policy - Security - Discuss Istio,"Hello, I have the following questions:- We are currently using Istio 1.4 and we have a mixer configuration model in which we invoke a Adapter. Adapter in turn makes a rest call to determine if authorization is allowed or not for the user in the request. With mixer being deprecated in Istio 1.5, How do we perform the authorization check using a rest call? Regarding authorization policies at  ,   Is there a regular expression match available to match the path? For e.g 
paths: [""/data/[0-9]+/types""] Please clarify 
Thanks, 
Shruthi"
Authservice fails to exchange authorization code for access token with keycloak - Security - Discuss Istio,"We are trying to setup an oidc provider for authZ and authN with istio in our k8s cluster. We followed this example here:  https://github.com/istio-ecosystem/authservice/tree/master/bookinfo-example  for the integration. 
Below are the details on the setup: OIDC provider: Keycloak 
Grant type:  authorization_code 
Istio version:  1.5 Authentication flow: On first request, since there is no authentication,   successfully redirects to Keycloak, where we’re able to login successfully. Keycloak then redirects the request to the application on the redirect_uri. The authorization code is present in this uri now. The redirect_uri is intercepted by the authservice again and it detects the url to be the filter url for oidc as defined in  
 Now it tries to call keycloak for exchanging the authorization code for the access token. This is the step where authservice fails and gives the error  IdP connection error . The log for the request is as follows: On further checking the code, I found this error is triggered from here:  https://github.com/istio-ecosystem/authservice/blob/c9e97a7cc8818ee84e3e9ddc2f6d94fe4a78d431/src/filters/oidc/oidc_filter.cc#L516 To rule out the issues with the configuration, I used  https://oidcdebugger.com/  to manually generate an authorization code and then called the api to exchange it for an api token. I was able to successfully retrieve it, there was no issue with that. But somehow it is failing with authservice. Could there be something wrong on my end? Has anyone experienced this issue before? Any help appreciated. Let me know if any more details are needed."
End user authentication using JWT throws 401 unauthorized for few attempts before being successful - Security - Discuss Istio,"Our kubernetes cluster is running Istio 1.4.0. End user authentication is setup as below Client obtain the auth token from auth provider and its issued by is same as  https://sts.windows.net/<tenentid>/  first few calls after obtaining new jwt token fails with message 
 Origin authentication failed . and after a while all the calls succeeds. There are 10 istio sidecars running for the service products-svc. Any reason why this is happening?",https://discuss.istio.io/t/configuring-jwt-with-requestauthentication-does-not-work-in-istio-1-5/5649/2
How to implement user authentication with Istio along with LDAP or other components? - Security - Discuss Istio,"Can LDAP features be integrated with Istio to provide user authentication? We basically want to use Istio on top of our existing services. Our goal is to make Istio authenticate with LDAP for the list of users and their passwords. And based on this data, Istio should route the request to the appropriate service. Is there any utility through which this can be done? 
If LDAP cant be integrated with Istio, are there any other ways to have the user authentication in Istio?",Your questions i think boils down to two parts. Hope this helps,"Thank you for your suggestions! It indeed helps. 
I’m going ahead with the first option that you have suggested:  https://github.com/istio-ecosystem/authservice . 
However, I’m new to the OIDC authentication. I have setup keycloak on my k8s cluster and I’m trying to fill in the values in the template here: 
 https://github.com/istio-ecosystem/authservice/blob/cfa3529c771d359a28f269abd7808bf64a68bcf4/bookinfo-example/config/authservice-configmap-template-for-authn.yaml This requires values like the authorization_uri, token_uri, callback uri etc to be substituted. 
Can you please let me know how and from where can these values be fetched and replaced? Any help would be appreciated! Thanks!",I was able to get these values from the keycloak console itself. Thanks.,"I’m also trying to integrate the same flow, but I’m not able to find the token_uri and callback_uri anywhere in the keycloak console. Can you please let me know where can I get these values in the keycloak console. Thanks.","Navigate to your realm on the keycloak console and you would have a link as 
Endpoints : OpenID Endpoint Configuration You can also get it from this endpoint: Attaching the image for reference: 
","Thank you so much for your response. I was able to get all the configurations to setup the authservice. After login from keycloak, the authservice is able to get the authorization code, but authservice fails to exchange authorization code for access token with keycloak. Are you also facing this issue? I’ve also created a  https://github.com/istio-ecosystem/authservice/issues/79  with more explanation."
Authorization policy challenge - Security - Discuss Istio,"I’m having difficulty with authorization policies, and can’t seem to achieve what I want.  I’m looking to use an authorization policy(s) to deny access to anyone and anything (e.g., external requests, internal service requests) for one path on a service unless a specific jwt claim is present.  So permit requests to app/service on all paths for all methods except one, but on the one path only permit if jwt claim is present.  I’ve tried many combinations but I cannot seem to get it to work, only in pieces.  Do I need multiple policies (i.e., one to allow all and another to deny one path when ‘notValues’).  This is what I thought would work but it does not.  Here I’ve got a policy to ALLOW everything for namespace but then a DENY for one path on one service unless (i.e., notValues) the oid claim is all zeros.  I know the ‘when’ clause works as I can get it to work in other contexts but not this one.  Any ideas - thanks?  Seems like a simple requirement (i.e., allow everything except one path which requires a specific claim).  Using Istion V1.4.2. apiVersion:  http://security.istio.io/v1beta1 
kind: AuthorizationPolicy 
metadata: 
name: myAllowPolicyName 
namespace: myNamespace 
spec: 
action: ALLOW 
selector: 
matchLabels: 
app: myService 
rules: apiVersion:  http://security.istio.io/v1beta1 
kind: AuthorizationPolicy 
metadata: 
name: myDenyPolicyName 
namespace: myNamespace 
spec: 
action: DENY 
selector: 
matchLabels: 
app: myService 
rules:","Hi 
action field include in istio1.5 Which is opional.  In istio1.4 there is no Such Deny semantics 
It is added in istio1.5. istio1.4 only support allow policy(not having action field). Here is the Link  ( https://istio.io/news/releases/1.5.x/announcing-1.5/change-notes/#security ). Istio support Multiple Authorization Policy so in istio 1.4 you can apply multipal allow authorization policy. If you use above yaml(Which you mention) you upgrade to istio1.5 May be this helps you.","Thanks very much that explains a lot of my confusion.  Do you know how to achieve my objective with just multiple allow policies.  Do I have one allow policy to allow everything and another to allow a specific path only if claim is specific 
claim?  Something like","Thanks very much that explains a lot of my confusion.  Do you know how to achieve my objective with just multiple allow policies.  Do I have one allow policy to allow everything and another to allow a specific path only if claim is specific claim?  Something like apiVersion:  http://security.istio.io/v1beta1 
kind: AuthorizationPolicy 
metadata: 
name: myAllowAllPolicyName 
namespace: myNamespace 
spec: 
selector: 
matchLabels: 
app: myService 
rules: 
{} apiVersion:  http://security.istio.io/v1beta1 
kind: AuthorizationPolicy 
metadata: 
name: myRestrictiveAllowPolicyName 
namespace: myNamespace 
spec: 
selector: 
matchLabels: 
app: myService 
rules:","you want to allow everything plus /path with specific claim  using version istio 1.4 you should apply both of them.  because we apply more than one authorizzation policy. 
( https://archive.istio.io/v1.4/docs/concepts/security/#implicit-enablement ) May be this will help you…","I was unable to make this work with Istio 1.4.  When I allow the policy with the claim, only that policy applies – when I then add the policy to allow everything, the first policy is ignored and everything is allowed (i.e., the second policy 
overrides the first).  Has anyone made this work or does anyone have any other suggestions?  I think my problem is that I’m allowing everything on all paths, then allowing one particular path access only with a claim. Thanks.",You can achieve it using a deny and allow-all policy. Deny policy is introduced in Istio 1.5. And deny policy has higher priority than allow policies. You deny policy example looks correct to me. The allow-all policy seems missing “-” before “{}”. Take a look at  https://istio.io/docs/concepts/security/#allow-all-and-default-deny-all-authorization-policies .
Plugging in existing CA Certificates in istio1.5 - Security - Discuss Istio,"Hi All, I am bit confused with the behavior of istio1.5 ,when it comes to changing the certificate. 
I have installed istio with the following command and then created the sample bookinfo example 
istioctl manifest apply --set profile=demo I debugged the certificate and it has following values 
Issuer: O=cluster.local 
URI:spiffe://cluster.local/ns/bookinfo/sa/bookinfo-details Then I have Plugging in existing CA Certificates and executed the following command 
istioctl manifest apply --set values.global.mtls.enabled=true,values.security.selfSigned=true I was expecting istiod to be redeployed but it’s not instead I see the following error in istiod logs 2020-04-05T16:57:23.696459Z     info    grpc: Server.Serve failed to complete security handshake from “192.168.251.235:53086”: remote error: tls: unknown certificate authority kubectl get pods -n istio-system grafana-5cc7f86765-zc9rv                 192.168.251.238 
istio-egressgateway-598d7ffc49-wb5lk     192.168.251.235 
istio-ingressgateway-7bd5586b79-xj2sl    192.168.251.236 
istio-tracing-8584b4d7f9-6wdxp           192.168.251.239 
istiod-646b6fcc6-cvw5j                   192.168.251.222 
kiali-696bb665-f4l6h                     192.168.251.240 
prometheus-6c88c4cb8-84z8j               192.168.251.241 Once I restart all these component I dont see any exception.I was expecting that as it is using default sds ,it should be reflected automatically. At the same my certificates are having the same value ,I was expecting it to change at the runtime.But it did not 
Issuer: O=cluster.local 
URI:spiffe://cluster.local/ns/bookinfo/sa/bookinfo-details Then I deleted the pods in bookinfo and see the issuer change. 
Issuer: C=US, ST=California, L=Sunnyvale, O=Istio, CN=Istio CA I would be thankful for any kind of explanation","As shown on  https://istio.io/docs/tasks/security/plugin-ca-cert/ , plugging in an existing CA certificate should take place at the installation time.","Hi leitlang, Thanks for your answer.Is it possible to change the expiration time of the token…? regards 
S",Which token do you plan to change its expiration time? The token issuer should be able to reissue a new token with a new expiration time.,sorry I was not very clear while asking .I mean to say defaul certificate expiration time.At the moment it is 24hrs.,The certificate expiration time may be customized. Examples can be found in  https://github.com/istio/istio/issues/21944 .,"Hi Leitlang. Thanks a lot. regards 
S"
RequestAuthentication is not forwarding token - Security - Discuss Istio,"Hi All I am setting the following def. apiVersion: “ http://security.istio.io/v1beta1 ” 
kind: “RequestAuthentication” 
metadata: 
name: “jwt-example” 
namespace: istio-system 
spec: 
selector: 
matchLabels: 
istio: ingressgateway 
jwtRules: apiVersion:  http://security.istio.io/v1beta1 
kind: AuthorizationPolicy 
metadata: 
name: frontend-ingress 
namespace: istio-system 
spec: 
action: DENY 
rules: apiVersion:  http://security.istio.io/v1beta1 
kind: AuthorizationPolicy 
metadata: 
name: policy 
namespace: bookinfo 
spec: 
action: ALLOW 
rules: On istio ingressgateway I can see my token getting passed so my rules are getting passed successfully (enforced all ) – 
} While when the request reaches to productpage in bookinfo namespace ,it fails as my tokens are not getting forwarded 
in spite of forwardOriginalToken:true If I remove the when section in following def ,it works like a charm .But I wan to check on request.auth.claims[“preferred_username”] apiVersion:  http://security.istio.io/v1beta1 
kind: AuthorizationPolicy 
metadata: 
name: policy 
namespace: bookinfo 
spec: 
action: ALLOW 
rules: Idea is that MeshAdministrator set the the policy at istio-system that nobody is allowed to pass ingress gateway without valid token 
And then application developer set his own Authz policy on the base of certain user name in his own namepace regards 
Shrish",Is this issue a duplicate issue for  https://discuss.istio.io/t/forwardoriginaltoken-true-does-not-work/6037/2 ?,yes it’s same .Just have more details
Multiple Authenttication policies - Security - Discuss Istio,"I am trying to attach multiple Authentication Policies for the same workload target, each one with  different trigger rule so each policy will apply to a different endpoint. When I do this neither policy is applied. Is that a expected behaviour? 
Policy 1: Policy 2:",/u/diemtvu   /u/yangminzhu,"I think your expectation is that path with prefix /v1/endpoint1 and /v1/endpoint2 are required for JWT token issued by  https://my.url.com . This won’t work in the alpha policy because only one service-level policy ( targets: httpbin ) is allowed, you need to combine the two policies together, note the origins is a list. Also please try to use the new v1beta1 RequestAuthentication and AuthorizationPolicy instead of the deprecated v1alpha1 Policy, see more in  https://istio.io/docs/tasks/security/authentication/authn-policy/#require-valid-tokens-per-path"
Multicluster control options for gateway - Security - Discuss Istio,"Hello, I have the bookinfo experiment running on my multicluster shared multi-network topology. In this case,  when i deploy authorization policies to make service calls cross clusters, the gateways will handle and automatically pass though the traffic. So out of curiosity, does istio provide additional authorization policies for the gateways to define rules to pass traffic across clusters? 
Also, I notice some interesting options in 
 kubectl edit cm -n istio-system istio 
but not clear on other options such as  ingressControllerMode  or  outboundTrafficPolicy . is there documents explaining those options for access control between clusters? An ideal case will be filter traffic based on service or cluster or both. Please advise. Thanks!",cc  /u/yangminzhu  for the authorization policies.,"I’m not sure what you mean for additional authorization policies? The AuthorizationPolicy is supported on Istio Gateway just as Sidecars. I think these are more for traffic control (e.g. routing, load balancing). It may be able to provide some level of access control but please be noted that it’s not designed/implemented/tested the same way we do for security policy (e.g. AuthorizationPolicy) and you’re at your own risk if you use it as security policy. I’m not sure about the documentation about it ( /u/costin_manolache ,  /u/rshriram  probably should know more)"
Istio 1.5 JWT claim in AuthorizationPolicy - Security - Discuss Istio,"Hi, 
I’m trying to allow access to an app only if you present a valid JWT token with a specific claim (request.auth.claims[preferred_username]). Everything work but the conditional check: if the token is not provided I get a 403, if it’s expired i get a 401 … I would expect that if the JTW field is not   I should get a 403 but actually I get a 200. It looks like the part   is ignored. What am I missing? Is this the right approach? 
How do I check claims from the JWT token? Complete deployment here:  https://github.com/binc75/istio-jwt Cheers","Hi See the Authorization Policy Conditions from here:  https://istio.io/docs/reference/config/security/conditions/ To Check the claims:  https://jwt.io/ Try this: apiVersion:  http://security.istio.io/v1beta1 
kind: AuthorizationPolicy 
metadata: 
name: backend 
namespace: default 
spec: 
selector: 
matchLabels: 
app: backend 
action: ALLOW 
rules: https://github.com/binc75/istio-jwt#inspect-jtw-token    here is the value. May be this wil helpful to you.","Hi, 
thank you for the hints but actually the JWT in the repo is only an example. 
The one I was using it’s correct, it has: 
  ""preferred_username"": ""testuser2"" Cheers and thank you again ","Hi 
  ok ok. you should try this one also: deny policy. may be this time its work.","/u/binc75  You should remove the part “source: requestPrincipals: [”*""]"" because that will allow all end user traffic. Or if you want to only allow traffic from preferred user “testuser2”, you can use deny policy as  /u/shubham  suggested. cc  /u/yangminzhu","Shubham, 
no luck  All the requests now gets a 403 Forbidden, with or without “testuser2” in the claim. 
Cheers PS: on the git repo i left a brach with your suggestion named “issue-w-claims”  /u/shubham","/u/liminwang  your suggestion it’s working! 
Now I’m trying to discriminate access  through the claim “realm_access.roles” … I’ll let you know if I find a solution. Right now I’m here but it’s not working: Cheers","Hi Binc75 I am also hitting the some sort of related problem .I have some success but not exactly what I wan to do. Please see it here. 
","Unfortunately the syntax  request.auth.claims[realm_access][roles]  is not supported, currently we only support the basic  request.auth.claims[some-claim]  format. Feel free to file a feature request for this on github if you think you this is valid use cases for you. Thanks."
Nested JWT claims validation - Security - Discuss Istio,"Hello, I’m trying to use Keycloak JWT roles to perform RBAC. My JWT contains a nested claim containing the list of roles: Within ServiceRoleBinding I’d like to access the roles with something like But it seems that this is not the correct way to access nested claims. Any idea how to perform this? 
The setup is working fine for “first level” claims","Authorizing on the nested claim is not supported today. You have to flatten the claim (e.g., “realm_access_roles”: { …}"", or perform custom authorization on the structured claim.","Is authorizing on a nested claim going to be supported anytime soon? We have a JWT who’s scopes are listed below a parent JSON element (see “auth”) element with nested “sco” claim. Any help in understanding this further would be greatly appreciated. 
Thank you, 
Jon","Since this issue mentions Keycloak, let me share the details of a workaround I was able to use. Within the Keycloak client that you are using, you can create a custom mapper to get around the nesting of the   roles   info. If configured as follows, the JWT will produce a   roles   claim on the root with the same info as   realm_access.roles  : This can then be used by the Authorization policy."
Istio Multicluster Custom CA Issues - Security - Discuss Istio,"I am trying to configure a multicluster mesh topology with replicated controls planes with Istio, as described in  https://istio.io/docs/setup/install/multicluster/gateways/ . My PKI setup has 3 tiers and looks like the following. https://i.stack.imgur.com/fg1No.png A Root CA (root-ca.pem) Intermediate CA to sign each clusters Citadel CA (intermediate-ca.pem) Each cluster’s Citadel CA (ca-cert.pem) Following the install instructions, I install the certificates into the istio-system namespace with the following command. In this command, ca-cert.pem is the cluster’s CA certificate. ca-key.pem is the private key for ca-cert. cert-chain.pem is the full chain of the ca-cert.pem ie.   cert-chain.pem=$(cat ca-cert.pem intermediate-ca.pem root-ca.pem)   and root-cert.pem is the chain of the intermediate CA ie.   root-cert.pem=$(cat intermediate-ca.pem root-ca.pem) When I install this setup into a cluster, mTLS works fine within the cluster using my custom CA as expected. However, when I go to setup the multicluster environment, calls from cluster A to cluster b fail the root certificate validation. Does anyone have insight into why these certificates would not be trusted when they share the same root CA structure?",/u/oliver  Can you take a look?,"To assist, I want to add that it seems that the Envoy proxy attached to the ingress-gateway terminates as a result of trying this connection. When I try to curl to the remote service, it spits out the following logs. Additionally, I still get this error when I load both clusters with the same CA in citadel.",Which version of Istio are you using? How you install Istio? How you set up the multicluster and configure custom CA?,"Thanks for getting back to me  /u/leitang . This is Istio 1.5.1. I am installing Istio via helm in AWS EKS. In my values file, I define the following configuration. To configure the custom CA, I ported the Makefile on the Github. When this is setup in both cluster, I create a service entry for a remote service for Cluster B in cluster A.",I just took this same configuration and it works in 1.4.7 interestingly enough.,I’m running into the same thing here on 1.5.0. I’m following the multi-cluster setup as well and running into the same problem. I can try to downgrade and see if it resolve it but I’d rather know more about what the issue is. Is there anything I can do to help figure out what’s going on?,1.5.0 has an issues with multicluster setup. Upgrade to 1.5.1,"Yes, I’ve confirmed that upgrading to 1.5.1 it is now working. Thanks!","+1, this is documented in our 1.5 notes:   https://istio.io/news/releases/1.5.x/announcing-1.5/upgrade-notes/#multicluster-setup Please use 1.5.1 instead."
Questions about Gateways and Let's Encrypt - Security - Discuss Istio,"Hello everyone, I’m trying to get Istio up an running into a new project we’re building. 
Our app consists right now on an angular frontend, a backend app and an internal service. First things I did was installing Istio, I’ve dumped a profile and customized it to use our existing grafana and prometheus servers. Kaili and Jaeger are both running correctly. Then I’ve  added the sidecar injection to the namespace, created a new subdomain and created the necessary Gateway and Virtual Service. at this point everything was working properly, I pointed the DNS to the loadbalancer created by ISTIO and everything was ok. I’ve then tried to enable HTTP using let’s encrypt.  To do so I’ve changed my istio profile to include these changes: as mentioned in  https://istio.io/docs/tasks/traffic-management/ingress/ingress-certmgr/ At this point I saw that the guide only mentions having a single certificate for the main k8sIngress just created and it also uses default k8s ingresses but I want to use gateways and VirtualServices. 
So I’ve then changed: at this point the ingress controller logged: and the https endpoint was just returning a timeout. Cert manager already saved the secret but nothing happened on the ingress controller side. After restarting the ingress controller instead, everything worked: Now, I’ve many questions but I’ll try to summarize them: Thank you in advance and sorry for the long post","Hello, we use only istio-ingressgateway with cert manager and it works great. Only think that you have to do is to enable SDS for gateway. I’ve never use k8singress from Istio so I do not know. No, you don’t need to have it enabled. Use selectors for selecting the right gateway. If you use istio-ingressgateway then the selectors field should contain Istio: ingressgateway. I’d go with gateway here. Also be careful for wildcard Gateways.  
","as  /u/tomas_kohout  says,  it should work. 
no need to use k8singress.","/u/tomas_kohout   /u/bethmage  thank you for your answers. So  I’ve tried to remove the ""k8singress’ and that makes cert-manager not being able to solve http challenges so it’s not able to get the certificate from let’s encrypt. After re-enabling it the provisioning worked. 
This seems something that’s not needed anymore in 1.6  https://github.com/istio/istio/issues/22306#issuecomment-601228808  so I’ll try to remove it again after 1.6 is released. Regarding wildcard gateways, excluding the one generated from k8sIngress, istio manifest always generate a default gateway: what is that for? Can I delete it? I’m trying to imagine what I’ll need in the future, let’s say I have 2+ apps, each one with its own domain. 
E.g.  http://a.com ,  http://b.com  and  http://c.com  and so on. 
I will need 2+ gateways, where each port need to have its own unique combination of number and name because of  https://istio.io/docs/ops/common-problems/network-issues/#port-conflict-when-configuring-multiple-tls-hosts-in-a-gateway  so gateway for  http://a.com  will be: gateway for  http://b.com  will be: right? if each app has its own gateway, what is the default one for? Btw: docs  https://istio.io/docs/reference/config/networking/gateway/#Gateway  say about the selector: however I have gateways (without any selector) in the app namespace (so not in istio-system) working just fine, is that expected? Thank you","Seems like cert manager don’t know how to work with Istio’s VirtualService. I’m sorry, but I don’t think I can help you.  About the Gateway. IMHO you can delete that default I don’t know why it’s generated in the first place. Is it from demo profile? It works now, but AFAIK it’s a bug so it can stop working when it’s fixed.","Cert manager only generates an ingress to get traffic to the acme pod so maybe without the k8singress a regular ingress won’t work. It’s a profile generated from the default one and modified to use custom grafana/prometheus basically. 
The helm template is this one which doesn’t seem to have any condition on when to generate the default gateway or not  https://github.com/istio/istio/blob/d7c82cf727ec9d8d24143907a12bf1fd405e0c23/manifests/gateways/istio-ingress/templates/gateway.yaml 
I’ll just keep it for now because what I do usually is just modify the profile template and apply that, so if I do some changes I need to remove the default gateway every time. Plus for now I also need to keep the k8singress because of cert-manager. If it’s a bug, then the Gateway must be in the istio-system namespace and the VirtualService in the app namespace?",Apologize for late answer. I think that VS can be in different namespace. At least I use it that way for egress traffic.  If you can’t use DNS challenge and you don’t want to renew certs manually then it looks like only way now. Of course you could volunteer and contribute to cert-manager. ,"Oh ok so I can probably: Thank you very much for your answers, I feel like this would be a good setup for now! 
Regarding contributing to cert-manager, I wish my go level would be good enough to do so   that would mean contribute in a way cert-manager could use VS to forward the requests to the acme pod instead of ingresses?",You’re welcome. 
AuthorizationPolicy not allowing health endpoint - Security - Discuss Istio,"Hi, I have created one AuthorizationPolicy content below. apiVersion:  http://security.istio.io/v1beta1 
kind: AuthorizationPolicy 
metadata: 
name: auditpolicy 
namespace: dev 
spec: 
action: ALLOW 
rules: GET & POST working for VS and service port 80 but the service having one more port 9000 for health. for port 9000 GET & POST method not working",any update on this ?,you can add the health check path to the authorization policy to allow them specifically. see this for an example
Get Istio CA in 1.5 - Security - Discuss Istio,"Before 1.5, we can get CA in secret like istio.default, we can check the value of SAN and others. 
Now in 1.5, Istio will not write CA in the secret rather than use grpc. So how can I get the CA?","Hi  /u/tx19980520 
am i understanding right that you want to see Certificates in istio1.5 previously which are stored in secrets.",yes! it is stored in the istio.default secret maybe,"From istio1.5  we use SDS (by default) for worload certificate. Not File Mount which we used in prior istio1.5.  see this upgrade notes: 
 https://istio.io/news/releases/1.5.x/announcing-1.5/upgrade-notes/ The key and certifiactes are only in Envoy memory today. Istio agent monitors the certs and rotate them by pushing new SDS responses to Envoy. 
You  can see it by running this command. 
  kubectl exec <pod> -c istio-proxy -- openssl s_client -alpn istio -connect <service:port> or also in the proxy config_dump endpoint, the dynamic secrets are dumped at the bottom.",Very helpful! Thanks for your command!,"As  /u/shubham   pointed out, from 1.5 SDS is used by default. You could use openssl to check the certificates."
Forward headers with EnvoyFilters - Security - Discuss Istio,"Hi- I’m trying find a way to forward an inbound header value to a service that is, an inbound request for an istio service  svc1  contains header “foo=bar”, i’d like to automatically forward that header to an upstream service like  svc2 At the moment, i have to read that key/value in code and then reemit that to the outbound call. Is it possible to do this automatically using something like  EnvoyFilter  and LUA? I made some progress below by using both a filter that reads the header using  SIDECAR_INBOUND  and then emits some other header to upstream using  SIDECAR_OUTBOUND : What i can’t figure out is how to use the  inbound_header  variable in one filter in another one in the chain later on (i.,e read it in  SIDECAR_INBOUND  and use that in  SIDECAR_OUTBOUND  both of whih are  envoy.lua Here’s the yaml i’ve setup so far: note, the image   salrashid123/httpbin-remote:1  just makes an http GET call to httpbin (which means if you tail the logs on that cotnainer while testing, it’ll print out the headers  svc1  sent out (externally outside of istio) Is there any easier way to do this (i tried using dynamic metadata in LUA but didn’t make any progress)",I have the same exact requirement. I also created similar topic here  https://discuss.istio.io/t/request-header-propagation-transparently-from-service-a-to-service-b-using-envoy-filter/6326 . Please share solution if you found any. I am thinking of trying HTTP Route filter to try  request_headers_to_add  from  https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/route.proto#http-route-configuration,"automatically forwarding isn’t really possible with envoy between stages like this  unless the state (i,e header value) is saved off somewhere external; the suggestion i got specifically for the authorization header usecase i had (i.e, auto forwarding the  authorization  header) woudl be to recontact the  ext_authz_server  on the outbound filter to add the new token…i’ve updated a sample  https://github.com/salrashid123/istio_external_authorization_server#backend-peer-and-origin  w/ that info","If you want to add a LUA filter, could you forward the question to  https://github.com/envoyproxy/envoy-wasm/issues , and let wasm experts to take a look? 
Does ext_authz_server solve this problem?  /u/yangminzhu"
Security - Authorization Policy - 503 - Security - Discuss Istio,"Hi, Am trying to setup authorisation policy. not working. Kubernetes on premise setup with Istio version: 1.5.1 Getting 200Ok when there is no authorisation policy. 
503 Response Code Ingressgateway access log (working when there is no authorization policy) Corresponding applicaiton pod Istio-proxy log (working When there is no authorization policy) Implementing below authorization Policy $ http://authorizationpolicy.security.istio.io/%5BREPLACED%5D-auth-policy  created Ingressgateway access log (NOT working when authorization policy applied) Corresponding applicaiton pod Istio-proxy log (NOT working When authorization policy applied)","Hi 
am i understanding right you can excess the service from outside cluster?(external request) 
so in that case see this  https://istio.io/docs/tasks/security/authorization/authz-ingress/ AFAIK Authorization policy doesn’t give 503 error","Hi  /u/shubham , Thanks for your response. Am new to Istio. kubernetes cluster on premise implementation with external LoadBalancer. Accessing using NodePort Writing AuthorizationPolicy at “istio-ingressgateway” level  . Thanks","Hi  /u/kanthasamyraja 
possible to write autthorization policy  at worload/namespace/ mesh policy. have a look  https://istio.io/docs/concepts/security/#authorization   (concept of security in istio) 
may thi will help you",There are more tasks about authorization rules here  https://istio.io/docs/tasks/security/authorization/,"Hi  /u/shubham  /   /u/jimmychen Thanks for time and response. Yes. I have tried those authorizationpolicy. But not working. Kubernetes POD is Spring Boot application 
Getting 200 Ok when there is no authorisation policy. 503 Response Code when applying authorizationpolicy. Have created this topic for the same. Could you please check initial thread on this discussion.",Hi  /u/kanthasamyraja have a look on this  https://istio.io/docs/ops/common-problems/network-issues/#503-errors-after-setting-destination-rule & i also find this issue on github  https://discuss.istio.io/t/authorization-policy-issue-with-503/4545  check it may be this will solve your problem
Adding Envoy NETWORK_FILTER with Client TLS authentication - Security - Discuss Istio,"I am following the Egress gateway for HTTPS traffic ( https://istio.io/docs/tasks/traffic-management/egress/egress-gateway/ ) example and additionally wanted to add a EnvoyFilter at the Egress Gateway to Validate the cert thumbprint. 
I have a successfully added a Envoy Lua filter at Ingress gateway to Validate the cert thumbprints, However that EnvoyFilter is of type HTTP_FILTER and Its not effective at Egress Gateway as the traffic goes through Egress gateway is HTTPS. so from my observations so far only NETWORK_FILTER is effective on HTTPS/TLS traffic and Envoy Lua filter does not work for NETWORK_FILTER. So I have decided to try this Client TLS authentication(  https://www.envoyproxy.io/docs/envoy/v1.13.0/api-v2/config/filter/network/client_ssl_auth/v2/client_ssl_auth.proto  ) which is NETWORK_FILTER. 
Anyone tried this with Istio and got it worked? Or is there any example of how to configure this?","By looking at  https://www.envoyproxy.io/docs/envoy/v1.13.0/api-v2/config/filter/network/client_ssl_auth/v2/client_ssl_auth.proto , which has “auth_api_cluster”, “stat_prefix”, “refresh_delay”,“ip_white_list”. It seems that this does not support cert thumbprint validation. Destination rules could help here  https://istio.io/docs/reference/config/networking/destination-rule/#TLSSettings","my attempts so far, 
 
 
 
 
 
 
 With these settings , I can see it calls the auth endpoint , but it fails with 400 error. debug log from auth pod below, This “ ” error seems to me like it does not like the 
‘:authority’, ‘ ’ . Anyone know how to add a envoy cluster differently so i can get the authority name correctly?"
Help with blacklist for jwt compromised - Security - Discuss Istio,"Hi there, is it possible to create a JWT blacklist for the below scenarios, if so how? 
1, jwt is compromised 
2, used being deleted by the admin 
3, info in the JWT is updated by the admin such as roles I have been googling and spent the whole day reading through blogs, unfortunately, there are very few articles describing this scenario. Some mentioned to resolve this issue by leveraging mixer, nevertheless I know Mixer adaptor is going to be deprecated soon.",We’re solving this issue using the Envoy ext_authz built in filter type combined with a service that stores blacklisted tokens and returns a 403 if the token is invalid.,/u/yangminzhu  could you take a look and share any workarounds?,"You can also use AuthorizationPolicy with deny action, for example, you can deny JWT token with claim “user: admin1” on the ingress gateway with the following policy:"
503 error with requestPrincipals in AuthorizationPlicy (istio 1.5.2) - Security - Discuss Istio,"Hello, I am having a problem, and I was someone had some insights on it Basically, I have the 2 following Security Rules : As soon as I add those 2 in my setup, every single one of my calls end up with a 503: upstream connect error or disconnect/reset before headers. reset reason: connection termination If I simply change :  requestPrincipals: [""*""]  to  principals: [""*""] , everything goes back to accept all connections Basically, everywhere I looked, it seems like this should work, but simply doesn’t … I was wondering what exactly is happening here, am I missing some configuration? 
Is there any way to debug what’s happening so I can see what happens to my call? Some extra information : Virtual Service : Gateway : Let me know if you need more information","cc  /u/yangminzhu ,  /u/liminwang",It does not look like authorization issue. Can you check if the jwksUri (“mycompany/jwts.json”) is reachable from inside cluster?,"Yep, I have gone through all istio pods and my app pods and curl on that URI, every single node can access it I’m also trying with it (or with jwks directly) and I am getting exactly the same problem Example of my jwks 
 https://raw.githubusercontent.com/sbolduc-reactive/test_files/master/jwts.json Also, another question would be, is there a way to put Istio in trace/debug mode so I can see the calls it does and maybe debug it from there?","Hi  /u/sbolduc AFAIK Authorization policy doen’t give 503 error 
requestPrincipal & principal are different things. 
see here  https://istio.io/docs/reference/config/security/authorization-policy/#Source Istio constructs the  requestPrincipal  by combining the   iss   and  sub  of the JWT token with a   /   separator. see this task. 
 https://istio.io/docs/tasks/security/authorization/authz-jwt/#allow-requests-with-valid-jwt-and-list-typed-claims May be this will help you","I understand that, but requestPrincipas should give me a 401 unauthorized if I had a token problem, not a 503 Which is why I am wondering if there is some way to debug the pathways that Istio use. If so, I can try to debug, and will probably notice something completely unrelated (as it happen with these kinds of bugs  ) Thanks"
Actions required for external CA key/cert to take effect? - Security - Discuss Istio,"Hi there, I’ve tried updating the cacerts secret a few times now and the only reliable way that I’ve found for the new certs to take effect in both the control plane and data plane pods is to restart the Citadel pod.  Then, it takes about a minute for all the pods (in both planes) to get reissued new certs using the new CA key. The step to delete the secret “istio.default” in the docs is not working for me.  I’ve tried deleting it in the default namespace as well as in istio-system and my own application namespace, but to no avail. Could someone please confirm that Citadel does need to restart when plugging in a new CA key/cert (including a new CA key/cert when replacing a soon-to-expire one)? And if that’s the case, it follows that we cannot do this with live traffic coming in. Thanks for the confirmation/correction.","which istio version you used? I try  https://istio.io/docs/tasks/security/cert-management/plugin-ca-cert/  by using istio 1.6. And I find if I create cacerts after istio installation, it can not take effect. And the httpbin will only return 2 cert (cert and ca cert ) by using command: I try to restart istiod pod, restart httpbin, the httpbin-proxy-cert.txt only include 2 cert. After I redeploy httpbin, httpbin-proxy-cert.txt can return 3 certs (add root CA) But I don’t think redeploy httpbin is reasonable,  Any steps I do wrong?","I was on 1.4.2, I think.  Sorry, I have not tried it on 1.5.* or later.  Any progress since your last post though?"
Routing seems broken when enabling mtls on namespace basis - Security - Discuss Istio,"I have 2 namespaces, bob and bobby, each have their own admin and managed servers. Bobby namespace has a policy and destination rule bob namespace has a policy and destination rule The Admin and Managed server in bobby can communicate fine. 
However the Managed Server in bob fails because it can’t contact its local Admin server. Looking at the istio proxy log for the Managed Server one see this which prolly explains why it can’t talk to the Admin server in bob but what the heck? The IP is for the adminserver in bob namespace but the svc name, bobbys-front-end-admin-server.bobby.svc.cluster.local, is bobby namespace. Sometimes the failed managed server will be in the bobby namespace. When that happens, the servers in bob namespace will boot successfully. The IP is the endpoint of the Admin Server in bobby namespace but the svc name, bobs-bookstore-admin-server.bob.svc.cluster.local, is in bob namespace. 
This is Istio 1.4.6 
Any ideas how to investigate? 
Tnx One other possibly important fact, calls that are failing are on a protocol unsupported by istio.  All this works fine w/o policy and destination rule but I may not be clear on the expected behavior of an unsupported protocol in the security case","cc  /u/incfly 
Can you share detailed steps for reproducing the issue?","Hi, I have a client/server pair of microservices that speak both http and tcp. 
I set is deployed to namespace bobby and the other to namespace bob. 
These work fine until I add namespace scoped policy and destination rules 
An example of these config files per namespace are above. When the policy and destination rule files above are applied to the booby and bob namespace, one of the clients fails to connect to its corrsponding server on tcp. The following comes from the istio-proxy log of the failing client instance in the bob namespace It looks to me as http succeeds.   The lines below that I assume are the tcp invocations from the client that are failing.  They appear to be failing because the service name 
 
is from the admin server in the bobby namespace.  This failing client is running in the bob namespace. The IP address is the correct one for the admin server running in the bob namespace so something seems odd about that. Here is the service definition for the admin-server in bobby namespace Let me know if you need anything else, happy to try any recommendations."
Istio 1.5 - PeerAuthentication not reflected on istioctl authn tls-check and istioctl x describe - Security - Discuss Istio,"In Istio 1.5.0 , on applying PeerAuthentication, you can’t see the authentication policy applied on checking via the commands 
 istioctl authn tls-check  and  istioctl x describe However, the policies do work as expected. Is there another way to verify the application of the authentication policy?",/u/diemtvu  Are these istioctl commands broken for beta authn policy?,"same In Istio 1.5.1 , PeerAuthentication  default policy 
 istioctl  x describe pod   does not show the applied policy.","It is a bug, same issue here:  https://github.com/istio/istio/issues/23845","also here  https://github.com/istio/istio/issues/22471 , seem the usage will be deprecated soon?",istioctl authn tls-check is removed in 1.6
Elasticsearch client fails to handshake with master - Security - Discuss Istio,"When we apply the istion auto injection to the elastic search, the elastic search client fails to join the master node : transport error says fails to handshake with mater node. However the same thing works when deployed without side car proxy ? Can you explain us why is the side car proxy casuing this behaviour",Can you share the detailed steps for reproducing the issue?,"Elastic doc is recommending to disable istio,  https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-service-mesh-istio.html  is for their ECK operator but similar concept should apply to non eck installations"
Mutual TLS with external CA Configuration - Security - Discuss Istio,"Hi Security team, My company is using Keyfactor as a PKI and I wanna use it for provision cert chain to Istio and rotate cert on expired. Does Istio support to use custom CA Provider like Vault CA integration (deprecated from 1.3)? If not, can I pull request into Istio for it? Thanks and Best regards,","Hi 
AFAIK We can use Custom CA in istio. 
Please see this. May be this will help you. 
 https://istio.io/docs/tasks/security/plugin-ca-cert/",/u/oliver  FYI another use case of Vault.,"Yes we will support Vault CA integration. The plan will come out next week. Contribution is of course welcomed. I’ll let you know about the plans. If you have cycles, we could work together.","we use a lot of vault 
i will be another user of vault CA ","+ 1 for using Vault 
We also use vault ",/u/oliver  We updated istio to 1.6 and using istiod. Is the integration with Vault already working? Where can I follow the development?
Failed to read cacert from credentialName in Gateway - Security - Discuss Istio,"Istio Version  : 1.5.2 
kubernetes version: 1.17.4 we followed the steps mentioned in the url  https://archive.istio.io/v1.5/pt-br/docs/tasks/traffic-management/ingress/secure-ingress-sds/  for Configuring a mutual TLS ingress gateway , certificate and secret creation we created following secert kubectl create -n istio-system secret generic prometheus-gateway   
–from-file= http://key=prometheus.example.com/3_application/private/prometheus.example.com.key.pem   
–from-file= http://cert=prometheus.example.com/3_application/certs/prometheus.example.com.cert.pem kubectl create -n istio-system secret generic prometheus-gateway-cacert   
–from-file= http://cacert=prometheus.example.com/2_intermediate/certs/ca-chain.cert.pem kubectl get secrets -n istio-system | grep -i prometheus-gateway 
prometheus-gateway                                                Opaque                                2      36m 
prometheus-gateway-cacert                                         Opaque                                1      35m ISTIO INGRESS logs for container “ingress-sds” 
2020-06-03T06:48:11.354246Z     info    transport: loopyWriter.run returning. connection error: desc = “transport is closing” 
2020-06-03T06:48:11.354460Z     info    sds     node:router~192.168.1.80~istio-ingressgateway-7c648db8b-dzb72.istio-system~istio-system.svc.cluster.local-2 resource:prometheus-gateway-cacert connection is terminated: rpc error: code = Canceled desc = context canceled 
2020-06-03T06:48:11.354461Z     info    sds     Received empty resource name from “router~192.168.1.80~istio-ingressgateway-7c648db8b-dzb72.istio-system~istio-system.svc.cluster.local”. No need to respond 
2020-06-03T06:48:11.354560Z     error   sds     Remote side closed connection 
2020-06-03T06:48:11.354558Z     info    sds     Received empty resource name from “router~192.168.1.80~istio-ingressgateway-7c648db8b-dzb72.istio-system~istio-system.svc.cluster.local”. No need to respond 
2020-06-03T06:48:11.354711Z     info    sds     node:router~192.168.1.80~istio-ingressgateway-7c648db8b-dzb72.istio-system~istio-system.svc.cluster.local-1 resource:prometheus-gateway connection is terminated: rpc error: code = Canceled desc = context canceled 
2020-06-03T06:48:11.354742Z     error   sds     Remote side closed connection 
2020-06-03T06:48:11.963226Z     info    sds     node:router~192.168.1.80~istio-ingressgateway-7c648db8b-dzb72.istio-system~istio-system.svc.cluster.local-3 resource:prometheus-gateway new connection 
2020-06-03T06:48:11.964213Z     info    sds     node:router~192.168.1.80~istio-ingressgateway-7c648db8b-dzb72.istio-system~istio-system.svc.cluster.local-4 resource:prometheus-gateway-cacert new connection 
2020-06-03T06:48:11.971390Z     info    secretfetcher   Return secret prometheus-gateway found by direct api call 
 
 
 
2020-06-03T06:48:11.971865Z     warn    cache   node:router~192.168.1.80~istio-ingressgateway-7c648db8b-dzb72.istio-system~istio-system.svc.cluster.local-4 resource:prometheus-gateway-cacert SecretFetcher cannot find secret prometheus-gateway-cacert from cache 
2020-06-03T06:48:11.971872Z     warn    sds     node:router~192.168.1.80~istio-ingressgateway-7c648db8b-dzb72.istio-system~istio-system.svc.cluster.local-4 resource:prometheus-gateway-cacert waiting for ingress gateway secret for proxy “router~192.168.1.80~istio-ingressgateway-7c648db8b-dzb72.istio-system~istio-system.svc.cluster.local” 2020-06-03T06:48:11.979164Z     info    secretfetcher   Return secret prometheus-gateway found by direct api call 
2020-06-03T06:48:11.979339Z     info    sds     node:router~192.168.1.80~istio-ingressgateway-7c648db8b-dzb72.istio-system~istio-system.svc.cluster.local-3 resource:prometheus-gateway pushed key/cert pair to proxy 
2020-06-03T06:48:11.979359Z     info    sds     node:router~192.168.1.80~istio-ingressgateway-7c648db8b-dzb72.istio-system~istio-system.svc.cluster.local-3 resource:prometheus-gateway pushed secret","Hi In this (  https://archive.istio.io/v1.5/pt-br/docs/tasks/traffic-management/ingress/secure-ingress-sds/ ) it is mentioned May be this is the problem. bcz you have 2 secrets as prometheus-gateway ,prometheus-gateway-cacert starting  with name prometheus",thank you  /u/shubham  … above errors are gone.
Problems create lua filter - Security - Discuss Istio,"Hello, I have been using this yaml to try to create lua filter on istio 1.4.5. Currently I am getting this error: 
Error from server: error when creating “STDIN”: admission webhook “ http://pilot.validation.istio.io ” denied the request: configuration is invalid: envoy filter: unknown message type “envoy.config.filter.http.lua.v2.Lua” Can you anyone help me understand what is happening?","/u/rodrigo_valladares  This does not seem to be an issue related to security. To get better visibility for this issue, can you place it under other categories (e.g., config)?","Hello  /u/leitang , I couldn’t edit the post, so I created a new one with the correct config:","please refer   https://discuss.istio.io/t/problem-creatting-lua-filter/6102 
I think  https://discuss.istio.io/u/James_Thomson  provided the answer."
"Envoy LUA filter, contact local container for external authorization - Security - Discuss Istio","Hi all, 
we’ve deployed a sidecar for authorization purposes, that will contact our authorization service. Basically we’ll have our pod with 3 containers: We were planning to deploy an Envoy LUA filter in front of our pod to intercept each HTTP request and forward it to our authorization service, which in turn will perform the authorization checks. How can i reach that container? I mean: inside the LUA authorization filter we’ve to use the following function to perform http call: request_handle:httpCall. How can i reach, with this function, an internal container belonging to the same pod? I’ve tried with localhost (due to the fact that containers inside the same pod share the same network stack) but it doesn’t work. Any ideas on that? Thank you very much, 
Matteo","httpCall  takes an Envoy “cluster” name as its argument, not a hostname like  localhost . What you need to do is create a ServiceEntry that represents your authz service, then find out the cluster name that Istio assigns to it, and use that name.","Just curious, if you need external authorization, why not just use  ext_authz  filter?","Yeah, yesterday we found a pr on github which was telling about service entries + envoy config and at the end we created a specific service entry and it works  /u/yangminzhu  we’ve used LUA filter because we needed to pass specific custom headers to the underlying authorization sidecar (like specific path and method of the incoming request that needed to be authorized against our authorization server) and the LUA filter gives us more flexibility. Due how it’s implemented our authorization sidecar this was the easiest and fastest solution. We’re going to do some performance tests on that and we’ll see if we’ll need to change our implementation to ext_authz filter. 
Anyway, the problem about how to contact an internal container was still present with the ext_authz filter  Thank you!","Thanks for the information. I’m very interested in the performance test result, would you mind to share the result when you got the data? I have done micro benchmark between Lua filter and RBAC filter by enforcing the same sample access control policy. The result is Lua filter is around 5x slower than the RBAC filter. When comparing with external authorization, I guess the latency will mainly be dominated by the external request.","Can you share the absolute numbers (e.g. number of microseconds) in addition to the relative? Was the Lua filter in your test implementing the policy, or was it sending an request to an external service that was implementing the policy?","Hi Spike, sorry for the late reply I forget to follow on this, I tested the Lua implementing the policy directly. I didn’t test any external requests. The following table shows the raw benchmark data, together with some other implementations (CEL and C++): The code for the benchmark is  https://github.com/yangminzhu/envoy/blob/69c2d33ef46129b16028e0b2f8452c7d4caf1562/test/cel/benchmark_test.cc , the RBAC is about 5x faster than the LuaJIT in Envoy.","Can you share how you set up the ServiceEntry for the internal auth service? I’m trying to create a similar setup. I need to authenticate users, and was thinking to set up another “service” that will act as the auth services, connecting to our external auth service and validating, while also maintaining a cache of validated users for performance. This service would run on the same cluster, but I am not sure how to call it from the Lua script, but it seems that you solved that issue?","Hi Quack90. We’ve recently switched to the standard external authorization filter (anyway we had still the need of declaring the ServiceEntry), due to the fact that we’ve found a better way to integrate the overall auth system. something like this should fulfill you needs: ===== And in the LUA filter you need to call ===== 
// Building the HTTP req 
local authentication_request = { 
["":method""] = “GET”, 
["":path""] = “/path_to_auth”, 
[“Authorization”] = request_handle:headers():get(“Authorization”) 
} In layman’s terms you need to use “outbound|8080||auth.local” as the target endpoint for the HTTP Call. 
I hope this will help you in integrating your auth system  PS: since i’m not an Istio expert, this could not probably be the best approach. Any suggestions or recommendations are really appreciated.","Sorry, in the last answer i’ve not replied directly to you. See my previous reply for the solution ","Thank you for the quick response. I seem to have gotten something to work, so a step in the right direction. If you don’t mind me asking, how have you been able to set up the external authorization filter? Do you have an example? Did you find any performance related improvements? I was looking into that as well, but Lua filter seemed to be easier to set up. My setup is really very basic, I just need to hit an internal service that will respond back with whether the user is authenticated or not (internally it will hit our external server and cache responses for performance). A little extra note, I spent quite long trying to get Istio’s own JWT Auth Policy to work, as this is essentially what I need, but as my JWT provider does not allow local verification of tokens, I was not able to use this, which is why I am not trying to set this up.","Hi, 
Our decision was not based on performances, but by the fact that we didn’t have to maintain a LUA script anymore. We don’t have so much requirements on the performances. In my opinion external authorization filter is more fast, due to the fact that you don’t have the script with all the stuff involved (interpretation / run of the script and so on), but is better that you ask to the experts  
We use that both for the authentication and the authorization, interacting with a famous OS authorization server (i can’t say the name here), so my suggestion is also to use it to check authorizations, especially if you have complex authorization rules and so on. We don’t use Istio JWT auth policy, all is done inside our sidecar which gets called by the envoy ext authz filter, so i cannot help. If you’ve only authentication requirements, so you want to just authenticate the user and not checking the authorizations, maybe is better to use this approach. I think that you need to configure the authorization server (maybe based on OpenID Connect?) and let Istio validate incoming tokens. But i’ve never used it so i don’t know. From what i know the ext authz filter, as the name implies,  is primarily used to check also authorizations. Here’s an example of an ext authz filter (your auth service must return 200 if user is authenticated and authorized to proceed): For more infos about the other properties we’ve followed the doc (it explains all the fields involved, even sometimes is not complete). 
Hope it helps! bye!",Hello! This kind of ext_authz filter only works if ur microservice responds with a GET option right? what if my microservice only responds with POST?,"The LUA filter was working as you said. Basically was performing a GET request to a local endpoint (sidecar), passing some custom headers that were needed to validate the incoming call (something like: i need to validate the access to that path with that http method). . In our case, more specifically:","Mostly the authorization is more complex, like below auth-adapt . 
I am using post, forwarding token in http header,   in http request header, for validate. 
Can istio envoy filter also implement such requirement?","I almost read all what it was written regarding how to redirect to external authentication server, and it looks not simple   , and even may impact seriously performance if, as proposed here ( https://journal.arrikto.com/kubeflow-authentication-with-istio-dex-5eafdfac4782 ), each request will be first send to the auth. server for checking. 
There is also this ( https://github.com/envoyproxy/envoy/issues/8571 ), that proposes an additional component in the system to handle this redirection. I would like to ask, if it is not too much. Using ‘RequestAuthentication’ we already are able to check if a valid JWT is present ( https://istio.io/docs/tasks/security/authentication/authn-policy/ ), and it handles all the ingress traffic. At this point why to not simply add a option to redirect to the auth. server ?","So, don’t know if i’ve understood well, basically you need to perform an HTTP call passing additional headers… am i right? So, i’m not an istio expert, but this can be achieved with a LUA authorization filter (see older posts). Basically in this kind of filter i think you can code your needed behaviour.",Hi Guys. if anyone using external_authz envoy filters were able to do “whitelisting”? So part of the request to target service are not being intercepted by filter and go straight to the target?
"[Question] Decode JWT and put ""sub"" into a request header - Security - Discuss Istio","I’m using the OPA adapter to manage AuthN and AuthZ. Some of my backend services need to know who is making a given request; for example, to populate a created_by column when a given user creates something. I’m trying to figure out an elegant way of decoding the JWT and putting the “sub” field into a “user” header before the request gets sent to the actual backend service. This way, a given service would simply need to look at the “user” header rather than dealing with parsing the JWT. Any ideas or recommendations on how this could be accomplished are appreciated.","/u/liminwang  Hi Limin, can you take a look?","Right now, I’m trying to do the same by using some EnvoyFilter. With some LUA code, you can alter the request / response and so, extract data from token and then inject it inside custom header. The problem right now is, if I’m not wrong, in this EnvoyFilter, you can’t import lua library, so you have to work from “scratch” with the JWT token. If some of you have a better idea to do this, I’ll be glad to here it, thanks ",I had a similar problem. I forked the opa adapter and modified it to allow returning arbitrary results from the rego evaluation. Envoy’s ext_auth protocol allows the endpoint to return a list of modfied/added headers. I added the result of the evaluation to that list. Envoy then added the headers to the upstream request for me.,"Currently either Istio authorization or OPA adapter returns TRUE or FALSE result. It does not modify the headers. If this becomes a popular requirement, we may consider supporting it. In the JWT case, the original JWT token is passed to the backend. The backend just needs to base64 decode the JWT and get the claim (no need to validate the signature if Istio JWT authentication is enabled). I think this is the only supported way currently. I hope it is not too much burden for the backend.","I think a generic JWT to header mechanism that is exposed as a policy would likely eventually need to exist to support simplifying workloads behind the sidecar. Something not specific to any single value (flexible key/value pair for mappings?). Header patterns for are common for proprietary identity proxies, which would also make adapting legacy applications simpler. Our eventual goals on top of  https://tiny.cc/istio-oidc-policy  would also look to tie in with logic similar to this based on standard use cases we shared as part of  http://tiny.cc/istio-iam-usecases .",This indeed is a good use case. We will look into supporting this.,This rule worked for me. I am not sure about the handler section but I was able to add headers from the JWT payload this way.,"request_header_operations  and  response_header_operations  can already resolve static values in the values clause without any handler… if they could also directly reference attributes, it would solve this an other use cases.","Thanks! This works really well for ‘sub’. We put some custom claims in our JWTs and would like to extract them in the same way and add them to headers. So far my tests have been unsuccessful. I’m doing something like the above, but replacing ‘values’ with: Keeping two headers, one for sub and one for abc in the rule, sub comes back fine, but abc does not. I’m wondering if the request.auth construction only pull in certain well-known JWT claims, or if vendor-specific claims get added in a different way?",/u/bryan_absher  i am also using the same setup but somehow the rule was not working any sugegstions ?,"I got it working, i needed to enable global.disablePolicyChecks=false in my istio release 
Thank you,",/u/jayasai470  Were you trying to get it working for just ‘sub’ or also for vendor-specific claims?,"Hi rob, i was able to retrieve custom subs as well","Hi, Are you able to use the header in a VirtualService for a routing decision? I find that I am unable to effectively use them if they are added by a Rule.","I could not manage to make it work, tried  global.disablePolicyChecks=true|false istio version 1.6.0"
Upgrading mTLS root certificate - Security - Discuss Istio,"Hi, We are testing the process of upgrading the root certificate used for mTLS so that we understand the process. One thing we have noticed is that when the root certificate is changed the sidecars don’t automatically get a new certificate, this results in a state where new pods, with the new certificate, can’t communicate with old pods until they are restarted. I was hoping that all the running sidecars would automatically detect the new certificate and update themselves, does this functionality exist?"
Istio not reporting spans when Jaeger is secured with mTLS - Security - Discuss Istio,"Istio version : 1.5.2 We have deployed Jaeger components using a YAML descriptor for the all-in-on image. The Istio has been configured to point to this Jaeger instance by using the setting -set values.global.tracer.zipkin.address=jaeger-collector.mynamespace.svc.cluster.local:9411 Everything seems to be fine when there is no security Policy for the namespace. Spans from both istio side car proxies and the application are both seen with proper context propagation. However, when we apply the mTLS policy to the namespace and send the requests, only the application related spans are seen and NO Spans are received from the Istio side cars.  Hence we are wondering whether Istio supports sending spans to a secure 9411 port of Jaeger.  This is very important for us to realize the end to end span call flow with complete security enabled. From the logs it is observed that, the side car of the application is sending the spans [2020-06-08T10:56:46.562Z] “POST /api/traces?format=jaeger.thrift HTTP/1.1” 202 - “-” “-” 7934 0 1 1 “-” “okhttp/3.9.0” “c8f5dfba-afe5-9bfa-ba4d-27a023d077ad” “jaeger-collector.eium-cloud.svc.cluster.local:14268” “10.32.0.11:14268” outbound|14268||jaeger-collector.eium-cloud.svc.cluster.local 10.38.0.11:58394 10.9 But there is no proof logs on the side car of Jaeger collector to receive the spans. kubectl get svc -n mynamespace NAME               TYPE           CLUSTER-IP     EXTERNAL-IP   PORT(S)                               AGE 
jaeger-agent       ClusterIP      None                   5775/UDP,6831/UDP,6832/UDP,5778/TCP   105m 
jaeger-collector   ClusterIP      10.96.255.86           14267/TCP,14268/TCP,9411/TCP          105m 
jaeger-query       LoadBalancer   10.98.86.102        7171:32545/TCP                        105m 
zipkin             ClusterIP      None                   9411/TCP"
mTLS uses wrong SNI in TLS Client Hello - Security - Discuss Istio,"Hi, we are using RedHat Service Mesh 1.1.2. I am aware that the actual upstream project is Maistra but we are observing mTLS problems where i am not sure if we are not understanding the intended architecture/configuration or if it’s a major bug which possibly affects Istio also. 
In our setup we have deployed two namespaces, first x2 and afterwards x3. Both are from a configuration and deployment perspective identical (of course the namespace specific config within the yamls differ accordingly), both have mTLS enabled and a headless service. 
In our setup we have one Istio control plane (istio-system) and are trying to do mTLS within the namespaces. Just in case, we are not trying to do mTLS between multiple namespaces. In the first namespace, x2, mTLS is working as expected. istioctl authn tls-check galera-cluster-bb55l -n x2 | grep x2.svc 
headless.x2.svc.cluster.local:3306                                 OK         STRICT         ISTIO_MUTUAL     x2/default                                     x2/default 
headless.x2.svc.cluster.local:4444                                 OK         STRICT         ISTIO_MUTUAL     x2/default                                     x2/default 
headless.x2.svc.cluster.local:4567                                 OK         STRICT         ISTIO_MUTUAL     x2/default                                     x2/default 
headless.x2.svc.cluster.local:4568                                 OK         STRICT         ISTIO_MUTUAL     x2/default                                     x2/default When we deploy x3 with the same configuration as x2, the x3 pods are not able to communicate with each other. istioctl authn tls-check galera-cluster-24z99 -n x3 | grep x3.svc 
headless.x3.svc.cluster.local:3306                                 OK         STRICT         ISTIO_MUTUAL     x3/default                                     x3/default 
headless.x3.svc.cluster.local:4444                                 OK         STRICT         ISTIO_MUTUAL     x3/default                                     x3/default 
headless.x3.svc.cluster.local:4567                                 OK         STRICT         ISTIO_MUTUAL     x3/default                                     x3/default 
headless.x3.svc.cluster.local:4568                                 OK         STRICT         ISTIO_MUTUAL     x3/default                                     x3/default A tcpdump revealed that the TLS handshake between the envoy proxies fails with “Certificate Unknown (46)”. The reason for this is that in the TLS Client Hello the SNI for x2 is used (outbound_.4567_._.headless.x2.svc.cluster.local), which is obviously wrong. It seems that the mesh (i use this term on purpose because i don’t know which component of it is responsible for this behaviour) uses the first service fqdn that is created for this tcp port. When we delete the x2 namespace the mTLS communication in x3 starts working as expected. 
If needed i can provide further configuration and tcpdumps. 
We did not find a way to change this behaviour by configuration (different ServiceEntries, DestinationRules etc.) nor did we find a hint in the documentation that this should or should not work. From an architectural or configuration point of view is this behaviour expected? Thank you for you support! Best Regards,",This seems duplicate of  https://discuss.istio.io/t/mtls-uses-wrong-sni-in-tls-client-hello/6978/3 .,"sorry, yes it is. I did not notice the auto anti spam bot blocking in the first place."
mTLS uses wrong SNI in TLS Client Hello - Security - Discuss Istio,"Hi, we are using RedHat Service Mesh 1.1.2. I am aware that the actual upstream project is Maistra but we are observing mTLS problems where i am not sure if we are not understanding the intended architecture/configuration or if it’s a major bug which possibly affects Istio also. 
In our setup we have deployed two namespaces, first x2 and afterwards x3. Both are from a configuration and deployment perspective identical (of course the namespace specific config within the yamls differ accordingly), both have mTLS enabled and a headless service. 
In our setup we have one Istio control plane (istio-system) and are trying to do mTLS within the namespaces. Just in case, we are not trying to do mTLS between multiple namespaces. In the first namespace, x2, mTLS is working as expected. When we deploy x3 with the same configuration as x2, the x3 pods are not able to communicate with each other. A tcpdump revealed that the TLS handshake between the envoy proxies fails with “Certificate Unknown (46)”. The reason for this is that in the TLS Client Hello the SNI for x2 is used (outbound_.4567_._.headless.x2.svc.cluster.local), which is obviously wrong. It seems that the mesh (i use this term on purpose because i don’t know which component of it is responsible for this behaviour) uses the first service fqdn that is created for this tcp port. When we delete the x2 namespace the mTLS communication in x3 starts working as expected. 
If needed i can provide further configuration and tcpdumps. 
We did not find a way to change this behaviour by configuration (different ServiceEntries, DestinationRules etc.) nor did we find a hint in the documentation that this should or should not work. From an architectural or configuration point of view is this behaviour expected? Thank you for you support! Best Regards,","This seems like a bug, is this using Istio 1.1? That is a very old version and is no longer supported, I’m wondering if you can try this with a newer Istio version (e.g. 1.5 or 1.6). Just a sanity check, what if you delete the DestinationRule in the x2 namespace? Does it help the x3 namespace to become normal?","Actually it is istio 1.4.6, i will try removing the Destination Rule.",Removing the DestinationRule does not make any difference. x3 uses still the x2 TLS client cert.
Istio + openresty is possible ? What is common(best) practice? - Security - Discuss Istio,"In our K8S we already use Openresty. The idea was to use Openresty as third party component for Istio gateway. 
I found examples how to setup NGINX, and I see NGINX as part of service mesh … 
 https://istio.io/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/ 
Thanks",This seems more about networking. cc  /u/costin_manolache1   /u/rshriram
mTLS + JWT authentication - Security - Discuss Istio,"We are currently using JWT based end user authentication (Origin authentication). Now we are planning to use SSL certificate authentication via a whitelist of certificates allowed to connect end users (client). However, we want to have this in our Ingress Gateway. Does istio ingress gateway has the support to handle both type of request.",this can be done with AuthorizationPolicy on ingress gateway that allows the request if it has a valid JWT token. This is not supported on ingress gateway for now. the authorization policy needs some update if you want to use it to enforce access control based on arbitrary fields in the x509 cert issued by non-istio CA.
Matching permissions in Istio AuthorizationPolicy - Security - Discuss Istio,"Service permissions (specified in an Authorization Policy per Service) define one or more specific required permissions for an endpoint, e.g. “group1.alarms.read.read” Can User/Group permissions assigned to a user  , define one or more generalized permissions, e.g. “group1.*.*.*”. ?? Thanks.","I think it’s up to your JWT issuer to decide what should be included in the JWT token. If your JWT issuer allows, you can put whatever you want in the JWT token, Istio doesn’t control the JWT token issuance. To enforce the JWT token claim like  group1.*.*.* , unfortunately this is not supported today. This could be supported with the regex support in authZ policy which we’re still discussing and working on an early design, will update once we have made some more progress on it."
Istio (1.6.2) : DENY policy in Authorization Policy does not work with Valid Token - Security - Discuss Istio,"I’m new to Istio. I’m implementing Authorization with JWT. The DENY action is not reflected for a valid JWT token. I’ve added the JWT Payload and Authorization Policy for reference. 
I’m using kubernetes version v1.18.3 and Istio 1.6.2. I’m running cluster on minikube.","This is the same as the other thread, please see my reply there."
Istio + OAuth 2.0 - Security - Discuss Istio,I have an OAuth authorization server hosted outside of Kubernetes cluster. Our micro services are hosted inside K8.  We want to authorize the incoming request at the Ingress gateway . Is it possible to build a custom adaptor which can call the authorization server by passing the bearer token from the incoming request header.,I think this is doable by configuring the ingress gateway to process token validation. Please take a look at:  https://istio.io/docs/tasks/traffic-management/secure-ingress/#configure-end-user-authentication-on-ingress-gateway,If you aren’t using JWTs we used an EnvoyFIlter that we plug into our Gateway that proxies all requests to our authn server. I wrote about it here:  https://medium.com/plangrid-technology/custom-user-authentication-in-istio-67c90458b093,"The example doesn’t show a way to configuring the authorization server.  I see the token is returned from the github repo , if the token needs to be sent to another service for authorization do I have to write a custom adaptor? 
I see the post from Omar was flagged , is it not the recommended way?","/u/natraj09 , here is an blog detailing how your configure the authorization server:  https://programmaticponderings.com/2019/01/06/securing-kubernetes-withistio-end-user-authentication-using-json-web-tokens-jwt/  . The blog is based on  http://auth0.com  but the configuration should be quite similar for other products.","Hi Rafik, 
Our use case is similar to what Omar had shared in the blog. Is implementing the custom EnvoyFilter in form of a inline lua script the recommended approach for such use cases. The management of inline script could be tedious and error prone. Is there plan of supporting such extensibility with a cleaner interface?","Hi Natraj, 
Afaik, the solution provided by Omar and PlanGrid is the only way to support other OAuth token type in addition to JWT. I think also that Istio JWT token is based on Envoy JWT filter which is build the same way using Envoy filters ( https://www.envoyproxy.io/docs/envoy/latest/configuration/http_filters/jwt_authn_filter ). On the other hand, you should keep in mind the limitation of filters (That what I can see as precaution from Istio documentation:  https://istio.io/docs/reference/config/istio.networking.v1alpha3/#EnvoyFilter ). So, keeping a minimal number of filters in addition to running validation test when upgrading Istio should be a good practice. I would like that a core team member comment on that to be sure.  /u/spikecurtis","Yeah, I echo the caution about EnvoyFilter, as it comes with no guarantees about backward compatibility. There is some work starting in the Security WG to bring support for “opaque” authentication tokens using a “blessed” Istio API.  I don’t have an exact time frame, but you might  https://docs.google.com/document/d/1PbM8ppIH4XQqWVOGHqStR1iyYLyUyXMPuZJpm8Xm0uA/edit#heading=h.qex63c29z2to  and mention your interest. The other thing to mention is that instead of custom Lua, you might consider the  https://www.envoyproxy.io/docs/envoy/latest/configuration/http_filters/ext_authz_filter .",Thank you Spike for all these details and useful information. I will definitely opt for External Authorization filter as a tactical solution until having the out of box support.,Thanks Rafik and Spike for the suggestion. Will take a look,"I am new to Istio world, but I think  a Mixer adapter will be able to do this task using Authorization  template 
Here I imagine how things should work (please feel free to correct me, I am still understanding this Mixer     )   => https://github.com/istio/istio/tree/master/mixer/adapter/opa","Hey guys, 
I am trying to follow the OAuth 2.0 with Istio, using Envoy Filter, but I am having some trouble with it. My request reaches the ingress and filter, but it’s not redirected to the Authorization service (Keycloak). 
I included a similar question here:  https://stackoverflow.com/questions/55159887/istio-oauth2-with-keycloak 
Anyone with this problem too? If I work with curl, everything is fine, the problem is when I try by browser and follow the OAuth2 flux. Thank you!",Did you find any solution for this?
503 errors with AuthorizationPolicy and ALLOW with a Rule - Security - Discuss Istio,"I have the following: When trying to set authorization no rules apart from empty {} work. They return 503. DR also set like so. curl -i vadal.local/echo/ is fine 
curl -i vadal.local/users/ gives 503.",It looks like to make this work you have to add to the k8s service ports tag the text name: http,/u/yangminzhu  can you take a look? Thanks!
Access K8s Secrets from Istio - Security - Discuss Istio,I have the following Is there anyway to store “secret” somewhere common such as in K8s/Configuration/Secrets and then reference it here. Many thanks.
mTLS Client Hello uses wrong SNI - Security - Discuss Istio,"Hi, we are using RedHat Service Mesh 1.1.2 which includes Istio 1.4.6. I am aware that the actual upstream project is Maistra but we are observing mTLS problems where i am not sure if we are not understanding the intended architecture/configuration or if it’s a major bug which possibly affects Istio also. 
In our setup we have deployed two namespaces, first x2 and afterwards x3. Both are from a configuration and deployment perspective identical (of course the namespace specific config within the yamls differ accordingly), both have mTLS enabled and a headless service. 
In our setup we have one Istio control plane (istio-system) and are trying to do mTLS within the namespaces. Just in case, we are not trying to do mTLS between multiple namespaces. In the first namespace, x2, mTLS is working as expected. When we deploy x3 with the same configuration as x2, the x3 pods are not able to communicate with each other. A tcpdump revealed that the TLS handshake between the envoy proxies fails with “Certificate Unknown (46)”. The reason for this is that in the TLS Client Hello the SNI for x2 is used (outbound_.4567_._.headless.x2.svc.cluster.local), which is obviously wrong. It seems that the mesh (i use this term on purpose because i don’t know which component of it is responsible for this behaviour) uses the first service fqdn that is created for this tcp port. When we delete the x2 namespace the mTLS communication in x3 starts working as expected. 
If needed i can provide further configuration and tcpdumps. 
We did not find a way to change this behaviour by configuration (different ServiceEntries, DestinationRules etc.) nor did we find a hint in the documentation that this should or should not work. From an architectural or configuration point of view is this behaviour expected? Thank you for you support! Best Regards,",in the immediate term you can use the  networking.istio.io/exportTo:.  resource annotation in the metadata of your headless services to restrict visibility of your headless service to its own namespace. That will preclude the clash on requested_server_name. This is (supposed to be) fixed in Istio 1.5.
Custom CA on istio 1.6.2 - Security - Discuss Istio,"Hi, I’ve been trying to get the replicated control plane to work on Istio 1.6.2 with a custom CA by following the guide located at  https://istio.io/latest/docs/setup/install/multicluster/gateways/ . Some details on what I’ve done: Cluster: Google Kubernetes Engine 
Type: Private Cluster Deployed a private CA using  
 Generated a certificate, exported the root and intermediate certificates for the CA Validated that all certificates can be linked up their chain (actually, even used it for a hello-world webhost just to be absolutely sure they work) Renamed all the files to the correct naming and created cacerts: ca-cert.pem, ca-key.pem, cert-chain.pem and root-cert.pem Tried to deploy istio using the manifests/examples/multicluster/values-istio-multicluster-gateways.yaml as per the guide However, istiod continuously fails to work with the certificate and reports the following error: 
Error: failed to create discovery service: failed to create CA: failed to create an istiod CA: certificate is not authorized to sign other certificates I’ve tried swapping certificates to a legitimate wildcard certificate from GoDaddy but that failed as well. If I delete cacerts or use Istio’s sample certs, the deployment works. I did some digging and found that the sample ca-cert.pem provided with istioctl has the following which my custom CA cert and GoDaddy certificate does not have: X509v3 Key Usage: 
Certificate Sign Could someone verify if this is a required condition for certificates to work with istiod? Is there an easier way to go about getting a custom CA to work with 1.6.2? My apologies if I missed this in the documentation somewhere, but if anyone could point it out to me, it would help alot, thanks!","I’ve resolved this, here is what I did, hope it helps someone: Switched to cfssl as the CA, you need the ability to modify key usage and extended key usage of the certs Generated a CA Cert (root-cert.pem) & Intermediate Cert according to this guide:  
 Generated a Cert for Istio’s usage (ca-cert.pem & ca-key.pem). This was the extremely tricky part. The cert should have the Key Usage “Certificate Signing” and if you are using the same cfssl version that I am, add the Extended Key Usage “any”* Combine the above 3 certs into a cert-chain.pem file Use the 4 files to deploy cacerts as per the Istio guide *I lack the expertise to explain the necessity behind the “any” Extended Key Usage but I got the clue from here:  https://github.com/jetstack/cert-manager/issues/2407  on jessedearing’s comment about RFC 5280. If any Extended Key Usage exists, it must conform to the exact usage of the Key. Therefore, without knowing more about Istio’s usage of the Key, I added the “any” value. Please note, this could be insecure.","try generating root ca, intermediate ca, and cert chain using  step certificate , it is more easier. you can do something like:","Hey Zufar, Thanks for the reply, I actually tried smallstep first, but I could not modify the Key Usage and Key Extended Usage values. I believe this is tracked here:  https://github.com/smallstep/cli/issues/110","Hi, 
I also used cfssl to create certs and add in istio, now I am not getting this error: “certificate is not authorized to sign other certificates”, but I see this error: “grpc: Server.Serve failed to complete security handshake tls: unknown certificate authority” 
Were you able to solve this?",I have a modified version of  https://raw.githubusercontent.com/istio/istio/release-1.4/samples/certs/Makefile  to create self signed certs Follow the commands in comment to create self signed certs. I have tested this in 1.4 and 1.5 istio versions.
Certificate manager - Security - Discuss Istio,"Good morning, I try to get cert-manager running with ISTIO 1.5.x, which comes as addon in the IBM cloud for the 
managed K8S cluster. I am confused to configure the cluster issuer to work with the ISTIO IngressGateway. What should I do 
to achieve that? 
I am sure, that I need to get virtualservices to route the traffic from the ACME servers to the pods to finish the http01 challange. But, how? Thank you in advance. 
Jan P.S.: I read the documentation of ISTIO for the SSL certs with cert-manager, which says, that I only need to deploy cert-manager in the usual way. I read the cert-manager documentation, which explains the machanism, which is totally right. But I cannot configure the cert-manage to work with the ISTIO ingress, which is the ISTIO IngressGateway. .-(","Hello  /u/palic  , You don’t need to create any virtual service to route the traffic from the ACME servers to the pods to finish the http01 challenge. First, Istio must be configured with: 
 --set ""values.global.k8sIngress.enabled=true""  which will allow Istio to detect Kubernetes Ingress objects and add routing to them. This configuration is necessary because Cert-Manager, to perform the HTTP challenge, will create a pod to answer the challenge and will expose this pod via a Kubernetes ingress. and ""values.global.k8sIngress.gatewayName=[ingressgateway name]""  which determines from which Istio Ingress Gateway traffic will be routed to the Ingress Kubernetes detected by Istio. In our case, we want it to be through the gateway that will manage Let’s Encrypt SSL certificates. Indeed, we will use the HTTP challenge and it is this gateway that will be called by Let’s Encrypt during the challenge. You allso need  ""values.gateways.istio-ingressgateway.sds.enabled=true""  which will allow the certificate to be automatically injected on the Istio Ingress Gateways based on the name of the secret containing the certificate. If you configure your issuer with Cert Manager automatically create an ingress with Istio add to the ingress gateway the route for all ingress with this annotation. I wrote 2 articles for my company’s technical blog to explain how to déploy an application with Kube / Istio / External-Dns / Cert-Manager/ Let’s Encrypt ( https://cbp-group.github.io/kube-istio-externaldns-cert-manager-letsencrypt-part1/  and  https://cbp-group.github.io/kube-istio-externaldns-cert-manager-letsencrypt-part2/ ). It’s originally in French, but here are the links to the translation if it can help you: http://translate.google.com/translate?hl=&sl=fr&tl=en&u=https%3A%2F%2Fcbp-group.github.io%2Fkube-istio-externaldns-cert-manager-letsencrypt-part1%2F http://translate.google.com/translate?sl=fr&tl=en&u=https%3A%2F%2Fcbp-group.github.io%2Fkube-istio-externaldns-cert-manager-letsencrypt-part1%2F Note that with Istio 1.6, there are some changes in the configuration for the wedge to work."
Istio upgrade from 1.4.6 -> 1.5.0 throws istiod errors : remote error: tls: error decrypting message - Security - Discuss Istio,Just upgraded istio from 1.4.6 (helm) to istio 1.5.0 (istioctl) [Purged istio and installed from istioctl] but it appears the istiod logs keep throwing the following : This also leads to no sidecars successfully launching and failing with : Weirdly other clusters that I upgraded go through fine. Any idea where this error might be popping up from ? istioctl analyze works fine.,"error goes away after killing the nodes (recreating) but istio-proxies still fail with : info	Envoy proxy is NOT ready: config not received from Pilot (is Pilot running?): cds updates: 1 successful, 0 rejected; lds updates: 0 successful, 0 rejected","Hi, I have the same issue. After upgrading from 1.4.6 to 1.5.0, my ingressgateway istio-proxy says: Istiod is running fine, but I have not purged my cluser, I’ve just killed the old Pilot. Any ideas?",istio 1.5.1 Have you solved this problem? :喜悦:  Same problem,"yes, this was due to a duplicate service entry rule. I saw the duplication and failure in pilot logs and on removal of the duplicate service entry this was resolved.",Can you help me？ i install istio 1.5.1,"thanks, your suggestion fix my problem.","/u/kuber_kaul    /u/joaquin_philippi 
For my case, upgrading from 1.4.10 to 1.5.8, I have  istio-ingressgateway  pods are in   state even though they are running. I checked logs on  istiod  and  istio-ingressgateway  but they are not helpful istio-ingressgateway-564dd9c995-g8jqt istio-proxy [Envoy (Epoch 0)] [2020-07-20 00:29:10.967][19][warning][config] [bazel-out/k8-opt/bin/external/envoy/source/common/config/_virtual_includes/grpc_stream_lib/common/config/grpc_stream.h:91] gRPC config stream closed: 14, upstream connect error or disconnect/reset before headers. reset reason: connection failure istio-ingressgateway-564dd9c995-g8jqt istio-proxy 2020-07-20T00:29:12.147575Z   info    Envoy proxy is NOT ready: config not received from Pilot (is Pilot running?): cds updates: 0 successful, 0 rejected; lds updates: 0 successful, 0 rejected istiod-678b7fb6dc-4h9nd discovery 2020-07-20T00:29:49.908147Z   info    grpc: Server.Serve failed to complete security handshake from ""10.88.10.14:42890"": EOF istiod-678b7fb6dc-4h9nd discovery 2020-07-20T00:29:49.961482Z   info    Handling event update for pod harbor-harbor-jobservice-7f85c99df4-k4bxk in namespace federation-lab-sandbox-us-east1 -> 10.88.10.12 I also increased the cpu and memory of the  istio-ingressgateway  but no luck either on this. Any helps is appreciated."
"Istio 1.6.3: ingressgateway error ""Proto constraint validation failed"" - Security - Discuss Istio","This is a new thread changing the title of the  https://discuss.istio.io/t/istio-1-6-3-requestauthentication-dont-work-with-keycloak/7409/2 I’m trying to setup this RequestAuthentication. In the ingressgateway logs I see this error: If I understand correctly, the ingressgatewaway didn’t receive a reply from  http://192.168.202.21:8000/auth/realms/istio  but ececuting a curl from the ingressgateway pod I receive some data in response: What I’m doing wrong?","it’s actually istiod to fetch the jwks and send it to Envoy, could you check if istiod is able to access  http://192.168.202.21:8000/auth/realms/istio ?",Sorry to be late. Seems that istiod can access the issuer: The complete istiod log is  https://drive.google.com/file/d/1cJkY_R6jXDCtg6Egpo_4xgmXaC91IyY9/view?usp=sharing,Opened also as a bug:  https://github.com/istio/istio/issues/25578
Istio 1.5 AuthorizationPolicy using JWT - Security - Discuss Istio,"I was trying to set up Authorization Policy by following  https://istio.io/docs/tasks/security/authorization/authz-jwt/ But when I apply this policy for my service then I get ‘RBAC: access denied’ Please find the envoy proxy logs below, [Envoy (Epoch 0)] [2020-03-27 14:40:31.225][24][debug][rbac] [external/envoy/source/extensions/filters/http/rbac/rbac_filter.cc:68] checking request: remoteAddress: 10.1.0.65:57780, localAddress: 10.1.0.64:9080, ssl: uriSanPeerCertificate: spiffe://cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account, subjectPeerCertificate: , headers: ‘:authority’, ‘localhost’ 
‘:path’, ‘/productpage’ 
‘:method’, ‘GET’ 
‘content-type’, ‘application/json’ 
‘authorization’, ‘Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IkRIRmJwb0lVcXJZOHQyenBBMnFYZkNtcjVWTzVaRXI0UnpIVV8tZW52dlEiLCJ0eXAiOiJKV1QifQ.eyJleHAiOjM1MzczOTExMDQsImdyb3VwcyI6WyJncm91cDEiLCJncm91cDIiXSwiaWF0IjoxNTM3MzkxMTA0LCJpc3MiOiJ0ZXN0aW5nQHNlY3VyZS5pc3Rpby5pbyIsInNjb3BlIjpbInNjb3BlMSIsInNjb3BlMiJdLCJzdWIiOiJ0ZXN0aW5nQHNlY3VyZS5pc3Rpby5pbyJ9.EdJnEZSH6X8hcyEii7c8H5lnhgjB5dwo07M5oheC8Xz8mOllyg–AHCFWHybM48reunF–oGaG6IXVngCEpVF0_P5DwsUoBgpPmK1JOaKN6_pe9sh0ZwTtdgK_RP01PuI7kUdbOTlkuUi2AO-qUyOm7Art2POzo36DLQlUXv8Ad7NBOqfQaKjE9ndaPWT7aexUsBHxmgiGbz1SyLH879f7uHYPbPKlpHU6P9S-DaKnGLaEchnoKnov7ajhrEhGXAQRukhDPKUHO9L30oPIr5IJllEQfHYtt6IZvlNUGeLUcif3wpry1R5tBXRicx2sXMQ7LyuDremDbcNy_iE76Upg’ 
‘user-agent’, ‘PostmanRuntime/7.22.0’ 
‘accept’, ‘ ’ 
‘cache-control’, ‘no-cache’ 
‘postman-token’, ‘f06a794e-1bd7-4c03-ad78-1638a309b71a’ 
‘accept-encoding’, ‘gzip, deflate, br’ 
‘content-length’, ‘4868’ 
‘x-forwarded-for’, ‘192.168.65.3’ 
‘x-forwarded-proto’, ‘http’ 
‘x-request-id’, ‘012804b1-67ca-942d-9636-40478e932e75’ 
‘x-b3-traceid’, ‘f8f9e4f94847aec5ce7dec347a5bfa5d’ 
‘x-b3-spanid’, ‘ce7dec347a5bfa5d’ 
‘x-b3-sampled’, ‘1’ 
‘x-envoy-internal’, ‘true’ 
‘x-forwarded-client-cert’, ‘By=spiffe://cluster.local/ns/default/sa/bookinfo-productpage;Hash=5e82efecebbaf212aae6359cec7cbc0b6aa281ddeaf3e7adb280c503a5c04a5f;Subject="""";URI=spiffe://cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account’ 
, dynamicMetadata: filter_metadata { 
key: “istio_authn” 
value { 
fields { 
key: “request.auth.principal” 
value { 
string_value: “cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account” 
} 
} 
fields { 
key: “source.namespace” 
value { 
string_value: “istio-system” 
} 
} 
fields { 
key: “source.principal” 
value { 
string_value: “cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account” 
} 
} 
fields { 
key: “source.user” 
value { 
string_value: “cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account” 
} 
} 
} 
} [Envoy (Epoch 0)] [2020-03-27 14:40:31.225][24][debug][rbac] [external/envoy/source/extensions/filters/http/rbac/rbac_filter.cc:111] enforced denied 
[2020-03-27T14:40:31.224Z] “GET /productpage HTTP/1.1” 403 - “-” “-” 0 19 1 - “192.168.65.3” “PostmanRuntime/7.22.0” “012804b1-67ca-942d-9636-40478e932e75” “localhost” “-” - - 10.1.0.64:9080 192.168.65.3:0 outbound_.9080_._.productpage.default.svc.cluster.local - Please help me to solve this issue. Thanks in advance.",/u/yangminzhu  could you take a look?,Have you applied the corresponding RequestAuthentication policy so that the JWT token is accepted?,"i got the same error having configured the RequestAuthentication, AuthorizationPolicy, DestinationRule and PeerAuthentication as tls PERMISSIVE, i m still having 503 … 
my yaml as follows : 
apiVersion:  http://security.istio.io/v1beta1 
kind: RequestAuthentication 
metadata: 
name: authentication-req 
spec: 
selector: 
matchLabels: 
app: admin-service 
jwtRules: apiVersion:  http://security.istio.io/v1beta1 
kind: AuthorizationPolicy 
metadata: 
name: authorization-pol 
spec: 
selector: 
matchLabels: 
app: admin-service 
action: ALLOW 
rules: could you please help ?","The  requestPrincipal  field has a different format (e.g.  testing@secure.istio.io/testing@secure.istio.io ), check the example in  https://istio.io/latest/docs/tasks/security/authorization/authz-jwt/ ."
Istio 1.6.5: Chiron generated cert doesn't include the custom dnsNames as SAN - Security - Discuss Istio,"Trying to enable mTLS and following the certificate generation as in here:  https://istio.io/latest/docs/tasks/security/cert-management/dns-cert/ but the generated secret/certificate doesn’t have the  : field at all 
Also, the generated secret has json with fields names as ‘cert-chain.pem’ and ‘key.pem’ for certificate and key respectively but the ingress gateway is expecting field names to be ‘tls.crt’ and ‘tls.key’ and is throwing an error when reading it : Any help on these issues is much appreciated. Many thanks",cc  /u/oliver  for certificate related issues.
Istio mTLS CA certs request SAN list with istio >1.6 - Security - Discuss Istio,"I am looking for the way to request CA certs which is signed by CA authority for the mTLS. 
trusted domain is cluster.local 
I need to request a root cert and nerd to provide SAN list, what its going to be in the SAN list so that all the workloads with in the kubernetes cluster gets the certs and signed by root cert.",cc  /u/oliver  for CA certs related issues.
Is it possible that an identical PeerAuthentication could result in two different network environments? - Security - Discuss Istio,"Hello, I’m in the middle of upgrading istio from 1.5.4 to 1.6.1 on my private environment and I found something weird. 
I had a workload set that had been working properly with istio 1.5.4. 
However, once I applied the version 1.6.1 into it as canary, it no longer works appropriately. 
I tried to adjust a namespace-wide PeerAuthentication with Permissive type to the workload set and I found that it worked differently with those versions. It worked worked with 1.5.4 perfectly but it didn’t with 1.6.4. 
So I additionally tested it with another tls mode ‘Disable’ with the same namespace-wide PeerAuthentication, then it worked in both of versions obviously. Speaking with more details, there had been no PeerAuthentication affecting to it before I applied the PeerAuthentication. It has the top priority of authentication policy in my workload set as there is no other one. I think it is the most important and interesting point that every workload in it communicates with each other through ssl mode. Honestly, I think that it is normal that it doesn’t work with permissive mode due to   on both of versions, however, it works with permissive mode of version 1.5.4. 
Could anyone let me know why it works differently?",/u/yangminzhu  can you take a look? Thanks.,seems some difference of auto mTLS in 1.5 and 1.6? cc  /u/incfly  for further look.,"1.5 to 1.6 change to make auto mTLS enabled by default, so the client workloads start to send mTLS traffic. However, the real issue seems to be is: your client and server won’t work with Istio mTLS anyway. You can try at 1.5 with STRICT && DestinationRule.ISTIO_MUTUAL see if it works or not. We support https over Istio mTLS.  https://istio.io/v1.3/docs/tasks/security/https-overlay/  You can follow this instruction and see if there’s any issue."
Istio 1.6.4: Authorisation policy ALLOW is denying - Security - Discuss Istio,"HI, 
I am trying to restrict access to my db namespaces and allow access only to service namespace When I create a Authorization policy for ALLOW I am not getting the expected result and its denied for all, while for DENY it is working perfectly fine, Please help to debug this issue, what are the other parameters to consider Please see I have enabled MTLS cluster wide  and also have a destination rule for the service namespace to talk to kafka namespace. Regards 
Sudhamsh","Hi  /u/sudhamsh_kandukuri Deny policies take precedence over allow policies. so if you would apply   then it has higher priority than  allow policy(tcp-policy) 
see this 
 https://istio.io/latest/docs/concepts/security/#implicit-enablement if that is not the case can you share the deny policy you are using. may be this will help you.","Thanks for the reply Shubam, I am not having allow and deny together, As I was not getting the desired output with ALLOW action, I was trying deny to check if Authorization policy is working, My problem is ALLOW policies are not working as expected, its just denying for all pods in the service namespace to db namespace after I apply Authorization policy with ALLOW action Regards 
Sudhamsh","Hi 
oh, it should work don’t know why it should not work here. can you give some more info like the destination rule which you applied etc. 
also check it any deny policy is there or not.","The following is the destinationRule apiVersion: “ http://networking.istio.io/v1alpha3 ” 
kind: “DestinationRule” 
metadata: 
name: service-kafka-mtls-disable 
namespace: service-ns 
spec: 
host: “*.service-kafka.svc.cluster.local” 
trafficPolicy: 
tls: 
mode: DISABLE Regards 
Sudhamsh",Am i understanding right you have to access svc in kafka ns from service ns and you defined destination rule service-ns (client side) not in the ns where service is deployed(kafka ns)and disable the tls mode for that. Not sure may be it affects others connection also bcz     https://istio.io/latest/docs/reference/config/security/authorization-policy/#Source try to apply DR in the kafka ns.(svc deployed) or change this mode to ISTIO_MUTUAL or MUTUAL. May be this will help you.,"Yes, your understanding is right, Will try to change the DR to Kafka and check","perhaps this link would help 
","Thanks for the link  /u/sabyasachi2k I have a basic question, can Authorization policy be implemented between namespaces, most of the examples I see are in the same namespace. My use-case is as follows with the following namespaces: Service : service-ns 
Database: db-ns 
Kafka: kafka-ns (without sidecar, have Destination Rule (DR) in kafka)[ /u/shubham  I have now changed the DR ] Can I have a policy such that only the pods in Service-ns have access to the svc in db-ns on port 27017 [TCP port] and which namespace that policy should reside. The below example is also within same namespace: 
 https://istio.io/latest/docs/concepts/security/#using-istio-authorization-on-plain-tcp-protocols Looking for help",Sure you can. Keep adding whatever ns you want to allow access in the from namespace section.  It should work.
Can Istio Security Peer Authentication & JWT Authentication Used in Parallel - Security - Discuss Istio,"Hi there, I’m trying to apply the security example tutorial found here against a solution that i’m trying to deploy. https://github.com/GoogleCloudPlatform/istio-samples/tree/master/security-intro The use case is that i would deploy Elasticseach + Kibana into the mesh and configure End-User outside of Kubernetes to access Elasticsearch API with JWT Authentication.  While i was successful in configuring and applying that I found that my Kibana deployment to be failing.  I know it has something to do with the RequestAuthentication + AuthorizationPolicy defined I get a RBAC: access denied error when I tried CURLing elasticsearch from my kibana’s istio-proxy sidecar. Have I misconfigured something here?  Is there the option of just enabling end-user JWT for client requests outside of kubernetes and disabling it for internal service to service communication?",Could you give out more info like the configuration file or the pod log info?,"Hi William, here are the yamls that would be of interests.  It’s no diff from the istio security examples provided.  In fact everything is working as I expected until i introduce the Kibana client application that would essentially be trying to access the elasticsearch-master service which would essentially fail due to JWT / RBAC security.  So what i needed was a mechanism where i could essentially allow access internal service access to bypass JWT authentication and only apply that only to those outside the mesh.    ***  Just a note that I’ve implemented a workaround by applying the RequestAuthentication / AuthorizationPolicy against the istio-ingressgateway and istio-system namespace which seems to do the trick for the most part. apiVersion:  http://security.istio.io/v1beta1 kind: RequestAuthentication metadata: name: elk-api-server namespace: my-test-namespace spec: selector: jwtRules: apiVersion:  http://security.istio.io/v1beta1 kind: AuthorizationPolicy metadata: name: elk-auth-policy namespace: my-test-namespace spec: selector: action: DENY rules:",/u/yangminzhu  could you take a look?,"In short, I guess my usecase is that if i set a RequestAuthentication against my elasticsearch service that’s inside the mesh I would like to set an AuthorizationPolicy that’s only applicable to client applications tryiing to call it outside the mesh and allow those inside the mesh to bypass having to have JWT Authentication. /u/yangminzhu , let me know what kind of logs you would need and i can set things up to duplicate.","Thanks for reaching out, if I’m understanding correctly, you want to enforce the JWT/AuthZ policy only for external requests but not for the requests from internal service? And currently you workaround this by applying the policy to ingress gateway? It’s totally valid to apply policies on ingress gateway and that’s actually one of the common use cases, why do you think it’s workaround for you? If you really want to apply the policies on workload, you can do it like the following: 
 
 
 
 
 
 The authZ policy will deny the request if it doesn’t have JWT   is from the istio-ingressgateway.","Hi YangminZhu, thanks for getting back to me. I’m fairly new to istio so forgive such beginner question.  I just learned and was able to get the RequestAuthentication and AuthorizationPolicy against my-test-namespace working properly.  Only I used the AuthorizationPolicy defined: apiVersion:  http://security.istio.io/v1beta1 kind: AuthorizationPolicy metadata: name: elastic-auth-policy namespace: my-test-namespace spec: selector: action: DENY rules: This basically excluded my kibana service which also lives in the same namespace to access the elasticsearch","Yangmin, can you further advise how i can go troubleshooting if my authorization policy is not working as expected.","I’m not sure which part of the authorization policy is not working as expected, could you elaborate a little bit what is the expected behavior here? Also when you copy/paste any policies could you enclose it with ``` so that it will have the proper formatting? thanks."
'Upgrading' from citadel to istiod (istio 1.4 to 1.5) - Security - Discuss Istio,"After upgrading from istio 1.4 to 1.5 everything initially proceeded smoothly, however recently my Ingress Gateway started failing to connect to an internal service, and was logging  SSL certificate expired  errors. 
Looking into this further, it appears that the gateway may still have been using the file-system mounted certificates generated by istio-citadel, and with citadel removed from the 1.5 installation these then expired without being renewed. 
I had initially thought that the problem was that I was still running the (deprecated) node-agent workload in the cluster, and that this might be preventing the loading of certs from  istiod 
Re-installing citadel renewed the certs, and fixed the issue - but I’d much prefer to run using the ‘new’ istiod/sds setup. Even after uninstalling citadel and node-agent again, the ingress still appeared to be mounting certs from the citadel-generated secrets into  /etc/certs . 
Currently I’ve found that removing citadel/node-agent, and removing the  key-and-cert  secrets created by citadel seems to result in the ‘correct’ (new) behaviour - certs are no longer mounted to  /etc/certs  and the certificates used by the ingress gateway appear to have a much shorter expiry (~24h?) compared with the citadel-generated certificates. So - my assumption is that for some reason with the original cert secrets (from citadel) present, the ingress gateway was using these, rather than loading certs from  istiod  - and that now that these secrets have been deleted the behaviour is as expected. Does this sound reasonable, or have I got myself into a situation where everything works ‘for now’, but is likely to fail in the future? Thanks!"
Renew certificates - Security - Discuss Istio,"Hi there, we run istio 1.4.0 with certmanager and certificates from Let’s Encrypt. After the announcement of the 
CAA bug and the following revocation of effected certificates do I want to trigger the certamanger to 
renew the certificates.  As far as I know recreates the certificate manager the certificates shortly before the 90 days are over. I do not find a way to trigger the certmanager to renew the certs. How will I do that? Best regards, 
Jan","i’m not quite understand the problem description. it seems to me that you want to take protection due to the recent letsencrypt accident? and you use the lets encrypt && cert manager in for istio ingress case? AFAIK, Istio does not manage the certmanager itself, it only ensures when your secrets containing ingress https cert updated, that can be loaded by ingress gateway envoy. If you observe the k8s secret updated, but ingress gateway envoy does not, that’s a bug.","Good morning. Yes, due to the Let’s Encrypt accident were some certificates of our services faulty. I would like to 
renew them on my own. 
Well, I achieved this by deleting the current certificate configuration AND the resulted TLS key and 
configured the certificate again and waited for the challenges. The great thing is: 
Old SSL certificate were running and working well until the deploying of the new certificates. But you could be right, the renew should be managed by certmanager itself and not by ISTIO. .-) Best regards, 
Jan",/u/palic  - I’m trying to get my renewed cert in but unfortunately missing something . Posted here - https://discuss.istio.io/t/importing-renewed-letsencrypt-based-cert/5774 Can you pls help ?,"Hej  /u/adurai81 , sorry, I cannot help you with this issue. Best regards, 
Jan",/u/adurai81  I had the same issue and was able to get it resolved by restarting the ilbgateway pod in the istio-system namespace
Does Authorization Policy Conditions support object array value for request.auth.claims? - Security - Discuss Istio,"Hello, I am integrating Keycloak with Istio Security as of version 1.4.3, I would like to access the   from the  payload of JWT, but cannot access the deeper json path  . The payload from JWT as below: The config of AuthorizationPolicy as below, if a request to httpbin/headers, the ISTIO security would check the json path of request.auth.claims.permissions.scopes to see whether with the value of “httpbin:headers” assigned, but it seems request.auth.claims only supports the 1st tier key and the value of string map. Thank you in advance! 
Anderson","There is an issue created on github,  https://github.com/istio/istio/issues/21340"
Authorization Policy IP allow/deny not working on services different than ingress-gateway - Security - Discuss Istio,"Hi everyone, Currently, I’m trying to allow/deny incoming traffic to a specific service according to the ip of the request. The example on this page  https://istio.io/latest/docs/tasks/security/authorization/authz-ingress/ , where the usage of source.ipBlocks to allow/deny external incoming traffic worked as expected. When that same authorization policy was now targeted to other pods on a different namespace, it stops working. The only way to make it work is by evaluating a specific  header[X-Envoy-External-Address]  to the address I’m looking to block/allow. This is not an appropriate workaround as it doesn’t support CIDR. This the authorizationpolicy I used on the first example which worked. The authorization policy used on other namespace that didn’t work: The configuration of  externalTrafficPolicy  is already set to  local . When logging the istio-proxy on the specific pod, the origin IP is printed with its expected value whenever a new incoming request is received. Is this the expected behavior or am I missing something?","I guess the reason why it’s stop working when in non ingress pod is because the  sourceIP  attribute will not be the real client IP then. According to  https://github.com/istio/istio/issues/22341 , (not done yet) this aims at providing better support without setting k8s externalTrafficPolicy to  local , and supports CIDR range as well. But what I’m not sure is: after routing from ingress gateway, to the httpbin pod, whether the  remoteIP  attribute will be propogated as the same?  /u/yangminzhu  Do you know about that?","Thanks for your response. That PR is talking about a specific use case when a proxy is sitting in front of the ingress-gateway, affecting the original ip. Do you think  remoteIP  will also be useful for the case I presented? If that’s the case, I might as well try to apply an EnvoyFilter manifest into httpbin pod with an RBAC filter. But it would be easier to just know if  remoteIP  actually propagates as the same, as you just asked in your question.","Got and example working successfully using EnvoyFilters, specifically with remote_ip condition applied on httbin. Sharing the manifest for reference.",This is great! Basically you confirmed the httpbin can see the remote_ip address as original client Ip address right? even after the ingress gateway route to the httpbin pod.,"Yep, apparently that’s exactly what’s happening, used external ip addresses on the manifest and conditions matched as expected on a pod different than istio-ingressgateway."
"How to secure against traffic interception by VirtualService ""merging"" - Security - Discuss Istio","Hey guys! I’ve just spent a few hours unwinding a problem of my own making - I use a single ingressgateway in the istio-system namespace, and then I publish virtualservices in each namespace (dev, prod, test, etc), to direct traffic to services in these namespaces. I created virtualservices in two namespaces, using the identical hostname. Since both are bound to my gateway, I ended up with traffic ingressing the gateway for the hostname randomly (or was it random?) hitting each service. Other than being rather confusing, it occurs to me that this behaviour would be a handy way to “intercept” production traffic, simply by deploying a virtualservice with the hostname “ http://prod-auth-server.example.com ” into a test/dev namespace. What’s the recommended way to avoid this vulnerability/misconfiguration? Thanks! 
D","We have written a validating webhook to prevent situations that would clearly overlap. But there still some amount of risk as any new VirtualService could apply a prefix route for example that is more generic. So this validation does a decent enough job of preventing predictable patterns, but can’t safe guard things entirely.",This seems like a networking API question. Asking in networking category would have better chance of getting an answer.,What you can do is configuring the Ingress Gateway  https://istio.io/latest/docs/reference/config/networking/gateway/#Server  with a   in the host(s). E.g.: And you would not match a VirtualService deployed in the  test  or  dev  namespace with the  prod.domain.tld  hostname. See the docs linked for more information (starting at  ). Does that help  /u/funkypenguin ? Or perhaps I misunderstood your question.,"Thanks  /u/gertvdijk  - that’s helpful, but doesn’t help my specific application, since I use dynamic hostnames in the namespaces (in fact, I also use dynamic namespace names), and I wouldn’t want my CI to be altering the IngressGateway resource within istio-system every time! "
Istio 1.4.10: Do not request client certificate on ingress - Security - Discuss Istio,"Hi, Running Istio 1.4.10-gke.4 in GKE. I am serving HTTPS through an ingress gateway.  Only a server certificate is configured.  No authentication. Problem: a small subset of users, running (older) Android and (latest) Chrome, receive a “No certificates found” popup when visiting the site hosted through the ingress.  I assume this is because a client certificate is being requested in the SSL handshake. Is there a way to disable the ingress requesting a client certificate in the SSL handshake? Thank you "
TLS SDS/credentialName not working with Ingress Gateway - Security - Discuss Istio,"I have a workload running on a kubernetes cluster with Istio. I can use TLS with the one shared certificate, but I can’t get  credentialName  to work. Here are some relevant snippets from my Gateway My Istio Ingress gateway is running in the namespace  istio-system , and the secrets are in the same namespace (truncated output below). The above pod has the following description And finally, a look at the secrets (truncated output): I created the secrets  istio-ingressgateway-certs  and  api-termination-istio-tls-secret-autogen . Log output from the SDS container is The failed response looks like this I’m not sure what the next steps are to troubleshoot this.","There are a few places to look. First, port-forward the config_dump endpoint on the  ingress-gateway  with  kubectl -n istio-system port-forward $(kubectl -n istio-system get pod -l app=istio-ingressgateway -o jsonpath='{.items[0].metadata.name}') 15000:15000 &  and then hit  localhost:15000/config_dump . Search the config_dump output for the secret name  api-termination-istio-tls-secret-autogen . There should be a  dynamic_active_listener  configured with this sds_secret_config. For example, when I follow the  Secure Ingress (SDS)  tutorial, I end up with a  dynamic_active_listener  with the following sds config: If this is present, it means the ingress-gateway is configured to receive that secret from the embedded  nodeagent , which is serving sds secrets at  unix:/var/run/ingress_gateway/ In the current master branch, the nodeagent has a debug endpoint which shows   active sds connections, and the secrets being served. You could use the latest build, and port forward  8080:8080  on the ingress as well, and then hit  http://localhost:8080/debug/sds/gateway . There should again be a secret with the same name. For example, when hitting this debug endpoint after running the secure ingress SDS task, I get Assuming everything seems in order from these previous steps, it could be a problem with the actual content of the secrets your supplying? Let me know if this helps at all.","When I view the contents of  localhost:15000/config_dump , there is not a section for  tls_certificate_sds_secret_configs . I do see that the directory is mounted and there’s something in that directory: That doesn’t appear to be a file, so I’m not sure what it is. I don’t see any  clients Above I posted the output to  get secrets . Here’s the content of the secret (obviously redacted). When I look back at  https://istio.io/docs/tasks/traffic-management/ingress/secure-ingress-sds/#configure-a-tls-ingress-gateway-for-multiple-hosts  I notice that step   references ""  serverCertificate   and   privateKey   should not be empty."" Does that mean I should make the keys in my Secret  serverCertificate   and   privateKey ? When I try that, kubernetes complains that the keys need to be  tls.crt  and  tls.key …","I deleted the TLS Secret and created a new  generic  secret based on the tutorial, but I still don’t see the key/cert. The results are the same as above.","This is a Unix Domain Socket, which the  ingress-gateway  uses to   secrets from the SDS service running on the embedded node agent. With SDS, the secrets never get mounted into the pod. Have you tried making the keys of the secret  key  and  cert  exactly?","I made a mistake earlier, but the good news is that it’s working now. I combed through the deployment.yaml for the ingressgateway and found that it was missing the environment variable  ISTIO_META_USER_SDS  and one  volumeMounts  for the existing  ingress-proxy  container. I added those, but I forgot to change my  Gateway  back to referencing a  credentialName  instead of the file based approach. I have confirmed that a generic Secret, as shown in the tutorial, and a tls Secret both work. Thanks for all your help. It’s all working now.",Thank you for posting this issue and especially last comment. I was able to configure TLS for ingress gateway using credentialName/SDS. Someone who have problem with configuration TLS using credentialName need to check your env variable ISTIO_META_USER_SDS and volumeMounts for istio-proxy.,"I am a little confuse about this. Also for me it works when using serverCertificate and privateKey but not when using credentialName. Where should I add the env ISTIO_META_USER_SDS? On istio-ingressgateway workload? What should be the value of ISTIO_META_USER_SDS variable? 
SDS_ENABLED which is also a variable of istio-ingressgateway by default has a value of false. Should I change it to true? Thank you",Even I have the same issue with Istio 1.6.8. Need to find a way to enable sds
Envoy filter - per_filter_config - Security - Discuss Istio,"Hi, I try to reach via istio version 1.3.3 a situation when my service let’s say XYZ will be ignored by external authorization service configured by envoy filter too (ExtAuthz). I saw API for envoy filters has changed and I should be able to add this property for route ( https://www.envoyproxy.io/docs/envoy/latest/api-v2/config/filter/http/ext_authz/v2/ext_authz.proto#config-filter-http-ext-authz-v2-extauthzperroute ) but probably I did something wrong and it doesn’t work as I expect. In envoy documentation, they present a way how to add this in envoy config  https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/ext_authz_filter#per-route-configuration . I prepared following yaml to configure this property for my app but I get an error like   json: cannot unmarshal string into Go value of type map[string]json.RawMessage . My yaml looks like this: `apiVersion:  http://networking.istio.io/v1alpha3 
kind: EnvoyFilter 
metadata: 
name: bypass-auth 
namespace: default 
spec: 
configPatches: What’s more I/m not sure what is correct to use as a type ROUTE_CONFIGURATION or VIRTUAL_HOST as an applyTo type.","Looks like applying this yaml file fails due to this error  json: cannot unmarshal string into Go value of type map[string]json.RawMessage 
Since this is using networking API,  /u/lambdai  could you take a look or help to triage this issue? 
 /u/mgwizdz  please feel free to post the question in networking category.",/u/mgwizdz  yaml is indent sensitive. Could you format your config patch? Otherwise it’s hard to tell if there is problem in your config.,"What’s more, you are adding per route config so I believe you should apply to  HTTP_ROUTE  instead of  ROUTE_CONFIGURATION  and  VIRTUAL_HOST 
 https://istio.io/docs/reference/config/networking/envoy-filter/#EnvoyFilter-ApplyTo","Hey, sorry for mess but generally I created few version so here you go: ver 1: ver 2:","Having issues with excluding per route validation by ext authz, the question is - is it possible to have 
 Without filters describe only for patching? When i’m trying to apply examples above i got an error pointing on the fact that the “filters” should be there. Will be interested in the solution addressing for the original problem reported","Hi, I modified a little bit my yaml and it looks like it deploys correctly but still, this filter property is not added into envoy configuration. Do you have any ideas about what I should change there?","lambdai, have you tried your configuration? for me it is not being applied correctly on istio version 1.4.6","This is my configuration, it is working for me."
Principle of least privilege for external service access - Security - Discuss Istio,"Hi all. I’m trying to design an architecture where only certain pods have for example access to S3 and other pods have access to  http://archive.ubuntu.com . What I’ve designed so far is: istio 1.6.7 Use Calico NetworkPolicies to deny all outward traffic fro the application except for DNS and to istio-system. Created gateways and VirtualServices for  http://archive.ubuntu.com  to direct to an egress gateway. Set STRICT peer authentication policies in the application namespace. At this point traffic to  http://archive.ubuntu.com  is flowing nicely, but for all pods. So I attempted an AuthorizationPolicy like this: But now I get RBAC access denied. Then I tried adding this: To the destination rule, and now get a “upstream connect error or disconnect/reset before headers. reset reason: connection failure” Any suggestions?",You need to use Gateway config to enable the gateway to accept mTLS first. This can be done via set Gateway’s mTLS mode to ISTIO_MUTUAL as well.,"Thanks for the reply, sorry for being pretty new to istio but can you point me in the right direction for how to set that? (I don’t see anything I can set in the IstioOperator spec)",Try out this guide-  https://preliminary.istio.io/latest/docs/tasks/traffic-management/egress/egress-gateway-tls-origination-sds/,"Hmm… looking through, I don’t see the similarity… I’m looking to have MUTUAL_TLS between the sidcar and the egress…  http://archive.ubuntu.com  is actually on port 80. Does that example still apply here?",I’m not sure what similarity you are looking for. You can change ports as you want- the idea should be the same. This task setup is similar to what you desire,"Hmm OK, I’ll give it a go, thanks. Just to be clear, this should work on 1.6.7? That documentation is for 1.7…",Do these look correct?,"This was with 1.7 by the way, can anyone spot what I’m doing wrong or is this a bug?",Do you want to check this -->  https://istio.io/latest/docs/tasks/traffic-management/egress/egress-control/,It seems my ultimate goal of using AuthorizationPolicy to limit access to certain egress external services via egress gateway isn’t possible at the moment so I’ll design something else. Thanks for the replies anyway!
Trust between meshes - Security - Discuss Istio,"Hi 
We have 2 clusters each having their own independent CA(multiple meshes). We are looking at a way to acheive end to end mTLS trust across clusters so we can propagate clientID(spiffeID) and therefore apply Authn/Authz policies. 
This document  https://istio.io/docs/ops/deployment/deployment-models/#trust-between-meshes 
says we can exchange trustBundle manually across clusters so we can trust and do end to end mTLS. Haven’t found any examples/documentation regarding how to acheive this.",/u/leitang  Could you take a look?,"AFAIK,  https://istio.io  does not have an example or a guide for exchanging trust bundles manually across clusters. You may create a feature request on  https://github.com/istio/istio.io/issues  to request for adding such documentation to  https://istio.io .","I have raised an issue for the same:  https://github.com/istio/istio/issues/23985 Since this would take sometime, do you have any pointers on how to acheive the same.","This document is mostly about using an existing intermediate CA, but it sort of works to describe plugging in multiple root certificates as well:  https://istio.io/latest/docs/tasks/security/cert-management/plugin-ca-cert/ . If you include multiple concatenated root certificates in root-cert.pem, these will be distributed as trusted root certificates across a cluster. Note: this assumes they are in the same logical trust domain. If you want to trust one root certificate differently than the other, you’ll need to consider either terminating TLS at gateways and explicitly providing certificates to your gateways or using constraints like name constraints on the signing certificate itself to prevent impersonation of a service in one mesh by a service in another mesh."
Istio in Kubernetes: Oauth2 External Auth - Security - Discuss Istio,"Hi all, I’m to replace a Nginx Ingress Controller with Istio Gateway and am looking for the appropriate means to integrate an external OAuth2 Proxy. The Nginx Ingress controller handles this with annotations on the Ingres resource and is documented here: 
 https://kubernetes.github.io/ingress-nginx/examples/auth/oauth-external-auth/ I am looking to do something similar with the Istio Gateway. The closest article that I can find related to this is using a EnvoyFilter Lua script as shown here: 
 https://medium.com/plangrid-technology/custom-user-authentication-in-istio-67c90458b093 This looks like a good resource, but was wondering if there was more information about this. I’m also wondering if there is an easier way to achieve this (as the syntax is pretty simple in the case of the Nginx Ingress controller - I’m wondering if someone has done this before with the Istio Gateway). What is the best way to go about integrating Istio in Kubernetes with an external Oauth2 service? Thank you for reading, and any feedback is much appreciated.","Hi Joe, I’m looking at doing this as well. What did you settle on?","Hi haggs, I ended up using the EnvoyFilter attached to the istio ingress gateway, kinda as documented in that blog post. I really wish I could find an easier way, as writing the code in Lua seems kinda fragile. I wonder if there are any plans to use the web assembly plugins available in newer Istio versions.","Ok thanks! Did you by chance check out this auth service:  https://github.com/istio-ecosystem/authservice  It was pretty easy to use out of the box. Likewise I am looking forward to a WASM plugin, I know the group on the IBM adapter have talked about moving their adapter there.",/u/yangminzhu  is there any plan to add a user guide into  http://istio.io  that integrates with external auth?,"the user guide could be a good blog on  http://istio.io  if the original author is wiling to send our a PR. On the other hand, we’re working to improve the ext_authz use case in istio to provide first-class support but this is still in early stage and currently we do not have concrete timeline, will share the design with the community once it’s ready.","/u/joe_j 
Hi Joe, 
I am also looking to integrate oauth2 proxy with istio ingress gateway. Did you get any other alternative approach on this?","Thanks all for the replies. I did look into authservice. I was looking for a way to authenticate on a per-k8s-service basis. And each namespace has its own oauth2 service, so I needed a way to send auth requests directed at a specific k8s service to a specific oauth2 proxy service in a specific namespace. With Nginx ingress, this worked well with ingress annotations: auth-url to auth each request through the ingress and auth-signin to land the user on a failed login page. So basically, on a per k8s service basis, I needed to have something that allows me to call an auth url for every request and allow me a way to redirect the user to a signin url if the auth request fails (and preserve the “next url”). I couldn’t find a way to do this with either ext_auth or authservice, but maybe I missed something. It’s almost if the Istio approaches (istio docs, ext_auth, authservice) assume a user will be making api requests to istio backed services rather than browsing with a Webbrowser. I ended up going the envoyfilter route (on the ingress gateway), which is unfortunate because it feels really fragile. For every k8s service needing ingress for every namespace, I needed to deploy a gateway envoyfilter with a Lua code block that matches the domain and path component for that service and applies my auth logic there as Lua code. I can’t write unit tests for this Lua code either (not sure how to write tests for a Lua filler). It’s unfortunate because this was so easy with the Nginx ingress annotations, but maybe I’m missing something obvious. This was a huge obstacle to moving away from Nginx ingress to Istio ingress. Maybe a webassembly plugin approach would work for this?"
Istio 1.7 - Setup for JWT Auth - Security - Discuss Istio,"Hi, I’ve got 4 websites with different domains and different auth services. All of them are using jwt for authentication. All of them are located in separate names paces, except the data storage which are in a namespace used by all of them. Now I’d like to use the jwt authentication policies of istio. But on some sites it’s mentioned that I’ve got to enable the service account token projection in kubernetes to use that policies. 
Is that true or can I use the policies without the projections? Thanks 
Marc","who is issuing the JWT token? You only need to make sure istio is able to get the jwks from the issuer (usually specified by the  jwksUri  field in the RequestAuthentication), and then use the AuthorizationPolicy to enforce actual access control based on the JWT claims. You don’t need the service account token project in k8s, that’s for a separate thing, do not get it confused with your end user JWT token authentication."
Reading identity of the source service - Security - Discuss Istio,"Hello, 
I have mTLS enabled, and I’d like to read the identity of the source service, that is calling me (e.g. the k8s service name w/ namespace). 
What’s the best way to do that?","You can try to use the  x_forwarded_client_cert  header, make sure you have enabled mTLS first."
Migrating Kiali from HTTP to HTTPS with istio 1.5.7 using istioctl - Security - Discuss Istio,"Hi All, I am using istioctl to setup istio1.5.7 with kiali, Jaeger. Right now kiali is exposed on HTTP is there a way I can turn this to HTTPS? Thank you 
Ram T","I’m not sure how you’re handling it, but one thing you can surely do is create a gateway on Istio IngressGateway using HTTPS and point it to a VirtualService/DestinationRule that points to the Kiali."
Healthchecks and mTLS - Security - Discuss Istio,"Hi, Regards, 
Marvin"
Istio-proxy still send encrypted data to pods - Security - Discuss Istio,"Hi, I have deployed istio on my dev EKS and I have enabled encryption. 
when I try to connect my application I’m getting error 403 from my application. I’ve started investigate the issue and I found that istio-proxy sending to my application encrypted packets instead of plaintext. How can I resolve this issue?",There are two modes permissive mode and mtls mode. How do you set the policy? https://istio.io/latest/docs/concepts/security/#authentication-policies
JWT-ALB-AuthorizationPolicyIssue - Security - Discuss Istio,"Hi, 
I am running istio in EKS cluster, using the ALB to obtain OIDC token. ALB puts the JWT in the header x-amzn-oidc-data. How to configure ISTIO to parse the JWT token in x-amazon-oidc-data, extract the claims , put into heder, so that it can be used in x-amzn-oidc-data. Below Configuration is not working.Could you please check apiVersion: “ http://security.istio.io/v1beta1 ” 
kind: “RequestAuthentication” 
metadata: 
name: “jwt-example-httpbin” 
namespace: foo 
spec: 
selector: 
matchLabels: 
app: httpbin 
jwtRules: apiVersion:  http://security.istio.io/v1beta1 
kind: AuthorizationPolicy 
metadata: 
name: require-jwt-httpbin 
namespace: foo 
spec: 
selector: 
matchLabels: 
app: httpbin 
action: ALLOW 
rules: 
- from: 
- source: 
requestPrincipals: [“ https://trominos.okta.com/oauth2/default/* ”] 
when: 
- key: request.auth.claims[groups] 
values: [“group”] 
EOF","Could you respond, is any way to use the JWT in x-amazon-oidc-data in RequestAuthentication, x-amazon-oidc-data is set by AWS ALB",/u/yangminzhu   /u/incfly  could you take a look as this. user want to parse a specific kind of issuer and token,Also from the values: [“group”] you set a group value. Could you check whether your token contains such value?
Equivalent to traefik forwardAuth (external authorization in istio) - Security - Discuss Istio,"Hello, We are building an API gateway in which we want to authorise requests against our existing OAuth2 Authentication Provider. In traefik there is the option to use the forwardAuth middleware to pass headers to the Provider which will return a 200 or otherwise which traefik will act upon. I know there are EnvoyFilters that might possibly fill the gap here, but I’m not 100% on exactly what these should look like to meet our needs, and if there if something a little less low-level that we could use instead. Thanks!"
OIDC - OpenID Connect for 1.7 and beyond - Security - Discuss Istio,I’m wondering if the OIDC solution (for IBM) proposed in the blog article as a Mixer plugin is still the appropriate solution? https://istio.io/latest/blog/2019/app-identity-and-access-adapter/ Is there no initiative moving this into core Istio? It feels like it could be part of the gateway.,As far as I know there is no enhancement for integrating this adapter with Istio 1.7. Perhaps there are other ongoing work that could do the same job as app identity and access adapter (e.g. ext_authz)  /u/yangminzhu
Istio mTLS strange behavior (bug?) - Security - Discuss Istio,"Currently, we are working on implementing a new GKE setup for our application. It includes GKE (1.16) with Workload Identity and Istio OSS (1.6.8). We are trying to apply STRICT mTLS policy. And it works fine for most microservices except few ones that are calling another one during startup. It receives TCP RST. And it receives due that fact, that it tries to connect without mTLS (plain-text http): debug envoy connection [external/envoy/source/extensions/transport_sockets/tls/ssl_socket.cc:226] [C77289] TLS error: 268435612:SSL routines:OPENSSL_internal:HTTP_REQUEST I thought that we affected that bug:  https://github.com/istio/istio/issues/11130 , but… it’s not true, because I’m able to do the same call via curl successfully (for test purposes, I’ve added curl command prior to java -jar app.jar in entrypoint). Moreover, in case I’m disabling STRICT mTLS mode during startup and re-add it (STRICT policy) after successful application initialization - it able to make the same call to the same destination microservice, which is totally weird. Both microservices are Java11 springoot… ReactorNetty/0.9.5.RELEASE is used for making call. We have old cluster (GKE 1.14 without workload identity) and Istio 1.1.17 and here it works fine. P.S. I’m struggling with this issue without any significant progress for the whole last week, so any ideas/advice are welcomed.","I’ve tried to look into   headers (an only successful connection is logged in envoy logs) and the picture is following: 
 ""x_forwarded_client_cert"": ""By=spiffe://cluster.local/ns/dst-qa/sa/iden-dst-qa-us-west1;Hash=2c63516e6f040e774e5d6b4ca42016f587dc831a3b59bcd031ae5661c00fb2b2;Subject="""";URI=spiffe://cluster.local/ns/src-qa/sa/iden-src-qa-us-west1"", The connection from another source pod to the same destination: ""x_forwarded_client_cert"": ""By=spiffe://cluster.local/ns/dst-qa/sa/iden-dst-qa-us-west1;Hash=307a06d8fbbff3a23cce3fafa71890fdbb56e5557acdf64811b24916fe320956;Subject="""";URI=spiffe://cluster.local/ns/src-dev/sa/iden-src-dev-us-west1"", spiffe URI is the same, but hash is different, so I hope that there should not be an issue. Each connection uses it’s own certificates(?)","The most interesting thing is tcpdump output. During the failed connection, we have the following picture: 
","The situation with successful connection is also not so clear for me: 
 P.S. http/400 is a valid response that I’m expecting as a result of my request.","Hi, may I know if you have applied both STRICT mTLS policy and DestinationRule? May you show some sample config you have applied for the mTLS?","Hi  /u/jtrbs , 
According to the documentation, the default mTLS policy managed with the following peer authentication policy manifest: and DestinationRule is no more needed starting from 1.4.","Yes, Istio 1.5+ is using auto mTLS by default. If both client and server have sidecars, they will establish mTLS connection. If one of them does not have a sidecar, then it fallbacks to plain-text.","But… in our case, we have sidecars for both microservices in place. This issue looks very similar to  https://github.com/istio/istio/issues/16391 , but it was fixed almost a year ago.","The issue is resolved now. 
After examining of debug logs from caller pod, the following message was fond: The key is   . It means that the connection was not handled by any of envoy routes and handled by default PassthroughCluster virtual cluster. Disabling of   solve the issue, but… a potential downside of this solution is that some of the telemetry metrics on the client side can be loosed. More correct solution become increasing of   to 5s (default is 100ms). Now apps operate correctly in any phase. Unfortunately, the root cause is still not clear. P.S. Solution was provided by GCP Support Team.",Related github issue:  https://github.com/istio/istio/issues/16581
AuthorizationPolicy not Enforced - Security - Discuss Istio,"I’m using Istio 1.7 with the Ingress Gateway and Envoy Proxy sidecars on my workload. On my Ingress Gateway, I’ve enabled JWT validation with this. I’ve verified the Ingress Gateway is able to confirm JWT signatures/expirations and so forth.  I’m also able to open selected routes to not be filtered by authentication like so. But when I go and try to do more complex things to control resources dependent on JWT claims, the rules aren’t enforced for me.  I’m not sure what I’m doing wrong. I’ve tried this where I want to allow request to a certain path only if the email claim in my JWT matches.  The request that should have been caught by this policy is allowed to go through even if my email is  me@abc.com I’ve also tried using a  DENY  action like this and still no dice. Can anyone point me in the right direction on what I’m doing wrong?  Also what would be a good way to analyze the rules and enforcement.  I don’t see anything coming out of the envoy logs.  But would like to see which part of the rule is failing or if the rule is even being activated for a request.","In your RequestAuthentication policy, it seems you didn’t specify the  jwksUri  field to provide the jwks for validating your JWT token?",The  jwksUri  is optional.  It uses the OpenID API contract standards when not supplied to calculate the public key API path.
Trouble using existing CA Certs - Security - Discuss Istio,"Hello, I’m having some trouble using an existing CA with Istio. I followed the instructions  https://istio.io/latest/docs/tasks/security/cert-management/plugin-ca-cert/  and installed my root cert, ca-key, ca-cert and cert-chain which is identical to the ca-key into the ‘cacerts’ secret in the ‘Istio-system’ namespace. I then used istioctl to install Istio… istiod starts with no errors but the ingress and egress gateways both fail to become ready. In the ingress/egress controller logs, I see this: further down in the logs, I see this: and this… and those error continue forever. I logged into the ingress/egress container and I don’t see any certs generated. when I remove my cacerts secret, Istio starts normally. here’s my cacerts secret: in my case, I have only the Istio cacert so ca-cert.pem and cert-chain.pem are identical.","i have a  Makefile  copied and updated from istio’s git, it will create self signed CA, try if certs generated with this help, comments in the  Makefile  has instructions.","Thank you. I had found that Makefile earlier and it does indeed produce working ca certs. Using that Makefile, I eventually traced my specific problem to the fact that my openssl commands were not adding a newline character to certs and keys that were being generated. Once I added a ‘\n’ to my ca secrets, Istio began to work normally.","Glad you fixed this, would you mind to clarify a little bit what do you mean  I added a ‘\n’ to my ca secrets  (maybe a diff of the change)? /u/oliver  I wonder if this can be improved so that it’s clearly logged that the ca secrets is malformed?","certainly… openssl creates certs and keys with no trailing newline character. the end of the file is: “-----END CERTIFICATE-----”. Istio would not accept my CA certs and keys until I added a newline to those files like this: ""-----END CERTIFICATE----- <----- hit enter here 
"". I suspect there’s a regex somewhere that’s looking for “-----END CERTIFICATE-----\n” i.e. there’s a newline after ‘-----END CERTIFICATE-----’ and since openssl doesn’t add that be default, the match fails.",see also:  https://github.com/istio/istio/issues/24609
TLS handshake with custom CA using wildcard egress - Security - Discuss Istio,"I’m trying to setup istio (v1.7.3) on AKS (v1.16.13) in a way that for all HTTPS requests within my domain, the TLS handshake is performed transparently by egress gateway. I ended up with something like this ( http://abc.mydomain.com  is an external URL so that’s why I created a ServiceEntry for it): I have mounted my certificate in the egress gateway and verified with: kubectl exec -n istio-system “$(kubectl -n istio-system get pods -l istio=egressgateway -o jsonpath=’{.items[0].metadata.name}’)” – ls -al /etc/istio/mydomain-ca-certs I’m getting the following when invoking   from one of the pods running in another namespace: 
curl: (35) OpenSSL SSL_connect: SSL_ERROR_SYSCALL in connection to  http://abc.mydomain.com:443 I’ve also tried what’s described here ( https://discuss.istio.io/t/trust-custom-root-ca-on-egress-gateway/3063 ) but I’m getting the error as above. Any idea what I might be doing wrong?","You’re setting the  caCertificates  in the destination rule for egress gateway, that seems a bit strange, I’m not sure if this is the correct way.   /u/jimmychen  for  custom cert on egress gateway.",I’ve posted the same question on stackoverflow to reach out to a broader community:  https://stackoverflow.com/questions/64338861/tls-handshake-with-custom-ca-using-wildcard-egress
Authenticating peer service - Security - Discuss Istio,"We currently are using Istio v1.5.10 in our Kubernetes cluster with a PeerAuthentication policy forcing strict mTLS between sidecars. When service A sends a request to service B, we would like to have service B be able to verify that the request originated from service A (and not service C). Is there any convenient way to do this with Istio? Can the sidecar add a header to the incoming HTTP request indicating the name of the peer service (validated by mTLS)?",Is the intent to just prevent service C to service B communication? This can be achieved indirectly using Authorization policy  https://istio.io/latest/docs/tasks/security/authorization/authz-deny/  by adding a “from:” condition based on the service principal. This does assume that there is a destination rule to service B forcing all traffic there to go through Istio Mutual MTLS  https://istio.io/latest/docs/reference/config/networking/destination-rule/ .,"No, both services A and C should be allowed to send requests to service B. We just want B to be able to know definitively which service the request came from. If we were doing mTLS ourselves, we would be able to do this easily be looking at the client certificate in question.",My understanding is that behavior is true with the ISTIO Mutual mode - the x509 cert is also passed to the application in the HTTP header with a SAN indicating the identity of the calling service,How do you turn that on? Right now no such header is being set.
Terminating MTLS in ingressgateway - what about authorization? - Security - Discuss Istio,"Hey everybody, We have two ingress scenarios: The first works perfectly. We can apply both an authentication policy and an authorization policy. 
But in the latter scenario I can only find a way to authenticate (via SDS and the CA-certificate). A single CA-certificate can of course authenticate more than one client certificate so how to do we apply an authorization policy that gives e.g. a single client certificate access to this and another client certificate access to that (when they have the same CA-certificate and the MUTUAL TLS has been terminated in the ingress gateway). Optimally I would like the certificate info from the client certificate to be available in e.g. requestPrincipals as it is after JWT authentication. But that appears not to be the case!? Hope for some insight  Best regards 
Jesper","Well, nothing yet I see  Partially inspired by this: 
 But alas no success yet. I’m definitely still using the filter in wrong way. Any insight on this? Even when I fix the envoy filter request I would still very much like to request built in Istio functionality to do authorization on certificates after authenticating them via SDS. E.g. via the hash value. Best regards 
Jesper Berggren","Is this essentially to match against more attributes (e.g. the fingerprint) in the x509 certificate in AuthorizationPolicy? We’re going to add some more support of this (more details in  https://docs.google.com/document/d/12Vde40n6N_oGZBC6j0S4R7ztWpNjWiOhc8aIU7dDWrc/edit#bookmark=id.n0skem2l92fj , join Istio community to gain access) This should allow you to match directly on the x509 URI and DNS san even if it’s your own cert (not issued by Istio).","Hi YangminZhu, Thanks for your update  The design document does indeed look promising - especially the part about “additional attributes for matching”. I guess they will be available in an AuthorizationPolicy? When do you think we can expect this much needed functionality (at least for us)? Best regards 
Jesper","yes, it will be available in the AuthorizationPolicy as some new attributes. Unfortunately this probably cannot meet the 1.8 timeline due to the limited resource, we will try to get them in the next version (1.9). Also any community help on the implementation is greatly welcomed and appreciated, so feel free to reach out if you could help."
How to setup SSL cert using istio with AWS EKS - Security - Discuss Istio,"Hi Team, We are using   to deploy our k8 applications and we installed istio in it. 
By default when AWS EKS is created we get AWS classic load balancer we attached wild card certificate to it. so if am exposing my k8 service of type clusterIP and i want to attach different certificate for few k8 services how i can override the loadbalacer one i tried adding certificate to gateway using credentialName but its not working. i tried the approach defined in this documentation  but its not working ->  https://istio.io/latest/docs/tasks/traffic-management/ingress/secure-ingress/#configure-traffic-for-the-bookinfo-com-host",The guide you referred to is for services exposed through Ingress gateway to use different certs. Is that your use case?  /u/jimmychen,"I’m just trying to add more details what was mentioned above. We work on similar usecase. 
We are using AWS EKS to deploy our k8 applications with istio for orchestration. 
As a part of EKS creation, the load balancer created is a classic load balancer.For SSL termination at Load balancer, wild card certificate is attached to it common for all applications as the CLB supports only one certificate. If i have to expose K8 service using type Cluster IP with a different domain than the  load balancer certificate, how can i override it? I tried calling the ARN of certificate from ACM and passed it while creating gateway and also tried the approach of using secrets.But none of them worked. Please help on how to manage secured calls using istio and passing the cert details in gateway and not in services.",yes  /u/liminwang  can you please share us if you have any usecase with AWS cloud
Istio Ingress Gateway - https and path based routing - Security - Discuss Istio,"Hi All, Hope you are doing fine… We are trying to implement path based routing using Istio ingress controller (Gateway and Virtualservice) along with https (SSL). Our application is react based SPA and it expects “/” instead of any path. We want to have a single host and wants to pass appname as parameter in URL to reach to the app…like  https://test.abcd.com/app1  and  https://test.abcd.com/app2...Now  if we are defining “/app1 or /app2” in virtual service as a routing rule instead of “/”, SPA is not getting loaded and we are getting 404. One solution could be some rewrite rule but unable to make it successful yet… Another solution is we can have dedicated host for each app/service. but the problem with it is we will need separate certificate for each host and that we don’t want. Wild card certificate could be an option but may not be approved by security. Can you please provide your expert advise?",yes you need to add a rewrite rule,"I wish it be that simple   I already added rewrite the way you have described above, problem is application UI is based on React and it expects “/” but the backend is based on nodejs and it expects full path with /app1.",It seems like you need to layout / configure your applications and matching routes to be more effective. Your UI most likely can be configured to listen on different endpoints.
AuthorizationPolicy Issue - Security - Discuss Istio,"Hi All, I am trying to implement authorization policy to allow/deny traffic from one service to other…As soon as I am enabling AuthorizationPolicy with any option(deny/allow), I am getting below error - upstream connect error or disconnect/reset before headers. reset reason: connection termination Please advice.","can you provide the authorization policies, your deployment, istio version and what requests you’re sending?",I am actually new to authorization policies. Can you please share some good article/example to start it.,"Yeah, sure, I think the best start is to read the basic security concept page  https://istio.io/latest/docs/concepts/security/  and then try out the example tasks in a real cluster:  https://istio.io/latest/docs/tasks/security/authorization/authz-http/"
Minimum TLS version? - Security - Discuss Istio,"I’m trying to use the gateway TLS options as specified here: 
 https://istio.io/docs/reference/config/networking/gateway/#Server-TLSOptions This does not seem to work. I can go into the istio-ingressgateway container, dump the envoy config (via  curl localhost:15000/config_dump ) and I’m not seeing any TLS protocol version configuration in the gateway configuration, nor in the target’s istio-proxy configuration. I am able to connect with TLSv1, TLSv1.1 or TLSv1.2. Obviously, I’d only like to connect with TLSv1.2 or higher. I’m not seeing any obvious errors via  kubectl logs  on the containers either. Suggestions? (Note: this question was also asked by someone else back in May 2019, and there were no responses.)","there’re some known issues about tls inspector, does not work with tls 1.3. we have a fix in 1.4.6. could you try to upgrade to 1.4.6 to see if this fix your problem?","/u/incfly  I have installed istio 1.6 and with the below gateway settings and it seems that doesn’t work properly, because a run testssl and got this response Testing protocols via sockets except NPN+ALPN gateway.yaml","I’m a bit confused. Your gateway specifies min 1.2 max 1.3. which is matching what the testssl’s output, Do I miss anything?","With min = TLSv1.2 and max = TLSv1.3, TLS 1.1 should not even be offered. 
The results should be  closer to:","thats right  /u/tshort , the result should appear like this: Its seems that the gateway is ignoring the minProtocolVersion.",here is the stack overflow question.,/u/tshort  i believe for passthrough mode the TLS is handled by app not istio. you can confirm this by simply changing it in the app side and check. or move the TLS certs to istio (SDS might be a good option).,"/u/prabhu-mannu , agreed about the gateway. The Gateway configuration only applies to non-passthrough connections. We use SDS and “moving the TLS certs to istio” won’t fix the issue; TLS certs have no mechanism to limit the TLS version. We have a non-trivial patch which modifies the JSON and other files to limit the TLS version and supported ciphers. Unfortunately, it is not amenable to easy configuration via YAML. In fact, the testssl.sh output I provided was from our patched cluster.","If istio is handling the ssl termination (via SDS). you can set the minimum and maximum tls versions. I can confirm that it works, provided that the TLS mode is SIMPLE or MUTAL. 
You can also define the supported cipherSuites (once supported by envoy) ->  https://istio.io/latest/docs/reference/config/networking/gateway/#ServerTLSSettings-TLSmode 
 https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/auth/common.proto 
your config should be something like this",We are using PASSTHROUGH. The mechanism as described doesn’t work for that option.,"I change my configuration in istio 1.6 like you propose, but I got the same result, server keep offer the 1.1","/u/tshort 
you can only set the tls configs where the TLS is terminated https://istio.io/latest/docs/tasks/traffic-management/ingress/ingress-sni-passthrough/ /u/framled   can you check if the config is valid, also ensure that credentialName used is valid. i have not used 1.6 yet but i can assure that 1.2,1.3,1.4 this setting works fine. 
i have not tried the cipherSuites yet. Below is the extract of what i have my setup","/u/prabhu-mannu :  Agreed, the problem is that we are using istio for local termination because we are   using SIMPLE, we are using PASSTHROUGH at the gateway and ISTIO_MUTUAL between pods. Our nginx pod is actually fronted by the istio-proxy. We could replace nginx with anything, and that still wouldn’t solve our problem as the istio-proxy terminates TLS. We can’t configure the istio-proxy TLS termination, and   is the problem. The fundamental problem is that istio   provide support for configuring TLS within the istio-proxy containers EXCEPT for ingress-gateway termination, which does not work for the very common PASSTHROUGH configuration.","My istio version is 1.6.4. The  minProtocolVersion  can work. 
"
Grace period for token validation whenever the JWK changes - Security - Discuss Istio,"When JWK changes, clients may hold valid (and unexpired) JWTs signed with the previous signing key and Istio will block the request. In order to avoid blocking service requests while the clients are busy fetching new access tokens, can Istio allow validating tokens signed with the previous key for an extra amount of time for example grace period of 5 minutes? If yes, how to do it? If no, is there any other way to achieve it?","How exactly is the JWK changing in this scenario? Is the Service issuing the JWT changing the content of its JWK by adding a new signing key? In this case, my understanding is most such services take care to not purge their previous signing keys for considerably longer than 5 minutes. The other scenario (I can think of) is if we manually change the jwkURI in our request Authentication resource. However, given that 
(a) this is a manual intervention, 
(b) tokens are expected to last for a short time which makes it fairly standard for clients to request new tokens and 
©This is a security issue where interruption of service is tolerable as opposed to allowing malicious actors with slightly older tokens access to the service Could you elaborate further why you think previous tokens should be allowed?","Thanks for the reply! JWK is changed by the access management system issuing the JWT. I will check the configs of the system whether they will take care of not purging it or not. 
In our case, previous tokens should be allowed to minimise downtime of the service.","As Shankar mentioned, this is not something Istiod should work around against. Your JWK management side should ensure not rotate to new keys unless all JWT signed by old keys are expired or okay to ignore them (e.g. trigger re-authentication flow is acceptable)."
How to enable mTLS within mesh in AWS EKS? - Security - Discuss Istio,"Hey, I am new to this community as I just started learning istio. We have an EKS cluster, so I followed this article and was able to configure TLS for ingress gateway. 
 https://medium.com/faun/managing-tls-keys-and-certs-in-istio-using-amazons-acm-8ff9a0b99033 This setup terminates TLS at gateway, but I also want to enable mTLS within mesh for securing service-service communication. Can someone please share more details on this?",it should be pretty straightforward with  https://istio.io/latest/docs/reference/config/security/peer_authentication/
Cloudflare source IP filtering with Authorization Policy possible? - Security - Discuss Istio,I am trying to find a way to use an Authorization Policy to filter on the Cloudflare cf-connecting-ip. Since we proxy all our requests using Cloudflare we are not able to get the source ip directly so the from matchers in the Authorization Policy wont work. I was able to do this pretty easily with a list checker but I understand that this is deprecated and will be removed soon. Any ideas?,"Looking at the Cloudflare documentation  https://support.cloudflare.com/hc/en-us/articles/200170986-How-does-Cloudflare-handle-HTTP-Request-headers- , it looks like  If there was no existing X-Forwarded-For header in the request sent to Cloudflare, X-Forwarded-For has an identical value to the CF-Connecting-IP header , any chance to use  X-Forwarded-For  in your case? We just merged a PR (hopefully will be in 1.8) to support the  X-Forwarded-For  in the remoteIp field in Authz:  https://github.com/istio/istio/pull/27906",Yeah I think that would address this particular case. Thank you. /u/yangminzhu  Is it possible for these lists to be provided via HTTP APIs like they were in the old list handlers?,"Currently we don’t support the dynamic data source in Authz API. One workaround is to write a custom controller to automatically update the Authz API based on your data source, see  https://github.com/istio/client-go"
Authservice AuthN Example - Out of Date and Not Working? - Security - Discuss Istio,"Hi all, I’m trying to step through the  https://github.com/istio-ecosystem/authservice/tree/master/bookinfo-example  and have a few questions. The current example relies on a  https://github.com/istio-ecosystem/authservice/blob/36dd2ca04858bd4eab5b866bcb42536fef759e15/bookinfo-example/config/bookinfo-authn-policy-template.yaml  which I believe was deprecated in favor of the new AuthN API resources:  https://istio.io/latest/docs/reference/config/security/authorization-policy/  and  https://istio.io/latest/docs/reference/config/security/request_authentication/ . Are the following manifests appropriate replacements? If so, I can submit a PR to address this. Just wanted to make sure I was implementing them correctly first. Second, I am using Keycloak as my OIDC provider. You can see my JWT Issuer rules in the RequestAuthentication resource above. If these lines are commented out,  /productpage  will return a 403. If they are NOT commented out,  /productpage  will return a 200. This seems strange to me as the docs suggest I should expect a 401 when requests are being denied. Furthermore, why are requests being allowed when I add the JWT rule and denied when it is absent?"
RequestAuthentication doesn't work with keycloak running on https in Istio1.6.8 - Security - Discuss Istio,I have tried enabling the Istio jwt authentication and authorization for my backend services with keycloak. This functionality works completely fine on plain http without any issues and I shifted over everything onto https and things started to fail. The same RequestAuthentication rules and AuthorizationPolicy rules doesn’t work with https endpoints. I kind of exposed the keycloak in the same cluster on istio ingress gateway with custom go daddy cert this is a valid cert and not a wildcard cert but for some reason the RequestAuthentication still fails. Is this is cert issue?? How can I make istio to trust the client cert from go daddy?? Can someone help me on this??
Adding volumes and volumeMounts to sidecar with global SDS enabled - Security - Discuss Istio,"Hi, I realized that the injection-template.yaml will   add user volumeMounts ( sidecar.istio.io/userVolumeMount ) to the sidecar container but will only add user volumes ( sidecar.istio.io/userVolume ) if  global.sds.enabled  is set to  false . I did not see any mention in the documentation that user volumes may not be used with this setting enabled. Is there any reason why the two annotations are treated differently w.r.t. global SDS? 
In case there is not, which should be the preferred behavior, to always add or to conditionally add both the user volumes and user volumeMounts? Thanks!","Since this is fairly specific, maybe I should open an issue on the istio/istio Github to get an opinion?","Hi Emike, if you already have created an issue on GitHub, could you please link it here. 
Thanks!","Hi Jonas, I have, but I have not been following it up since then. 
Please refer to  https://github.com/istio/istio/issues/21308 . Is this still an issue in the latest releases? 
If so, please update the ticket or create one of your own "
Internal auth with lua filter - Security - Discuss Istio,"Hi everyone, 
I’m running Istio 1.7.4 and faced with an unexpected behavior while calling the internal auth service in order to validate jwt token. 
I applied lua filter to all inbound HTTP traffic and calling auth service within a mesh, but got 403 w/o any errors/warnings in istio-gateway log (request reached the auth service sidecar) 
 Did I miss something? Would appreciate any comments/suggestion."
Passing Authorization headers automatically (JWT) between microservices - Security - Discuss Istio,"Hello, 
We are implementing Istio in existing architecture, where inter service communication is not authorized via JWT tokens, authorization is made at system entry point (custom API GW component) after which headers are stripped. I have tried with test configuration for Istio with request authentication and authorization policies placed on namespace/workload level. Problem I am facing that downstream services are protected via own authorization policies which expect jwt claims, but in current ms implementation jwt is not propagated in service to service HTTP communication. I would like to avoid changes in ms implementation (jwt propagation). Is Istio capable of passing automatically Authorization headers in service mesh?",cc  /u/yangminzhu  for authorization policies.,Do you just want to forward the JWT payload to your application service? This can be done with the  outputPayloadToHeader  field in the request authentication policy:  https://istio.io/latest/docs/reference/config/security/jwt/,"Thanks for your reply! Yes, I would like to forward the jwt from Service1 -> Service2 -> Service3, so claims on each service authorization policy can be matched an ex: key: request.auth.claims[roles]. Following is proxy log from Service2 when being invoked by Service1: [2020-11-24T14:11:56.985Z] “POST /users HTTP/1.1” 403 - “-” “-” 0 19 0 - “-” “axios/0.19.2” “5740bb3c-9d02-99d0-9aa0-99bf2c29b178” “system-administration:3000” “-” - - 10.4.0.154:3000 10.4.0.152:39644 outbound_.3000_._.system-administration.istiodev.svc.cluster.local - 
2020-11-24T14:14:11.928862Z     debug   envoy jwt       Called Filter : setDecoderFilterCallbacks 
2020-11-24T14:14:11.929484Z     debug   envoy jwt       Called Filter : decodeHeaders 
2020-11-24T14:14:11.929557Z     debug   envoy jwt       Prefix requirement ‘/’ matched. 
2020-11-24T14:14:11.929590Z     debug   envoy jwt       extract authorizationBearer 
2020-11-24T14:14:11.929618Z     debug   envoy jwt       origins-0: JWT authentication starts (allow_failed=false), tokens size=0 
2020-11-24T14:14:11.929641Z     debug   envoy jwt       origins-0: JWT token verification completed with: Jwt is missing If  outputPayloadToHeader  is solution, what would be the value of the property? Thanks.","Hi Dean!  Just to confirm, you wanna do the following: Ingress Gateway -> Service1 -> Service2 -> Service3 The JWT is provided to the Ingress Gateway in the Authorization header and you want to add that same header to your call to Service 2 and so on, right? I don’t see how to do that automatically, since it would be very hard for Istio (or any other proxy) to correlate the incoming TCP Socket to the outgoing TCP Socket (i.e., to know they belong to the same http or grpc request). From Istio’s point of view, the outgoing socket could belong to any request received or even started by an internal job of your application. It also cannot determine which thread in your application was responsible for handling a specific request. The  outputPayloadToHeader  is used so The Proxy can outputs the  base64(jwt_json) , for a successfully verified JWT received by the Proxy, to your application under a new Header of your choice (i.e. the value of  outputPayloadToHeader  itself). You could, instead, build a client library for making requests from your service to another that is able to lookup the original request and bypass the header on every call you make (something like a session). Hope this helps","Hi Leandro, Thanks for your response! I am considering other option, to have authorization policies placed on Ingress Gateway resource, therefore I wouldn’t get 401 from downstream services. Currently I don’t see any flaw to this approach. Is there a possibility to map selected claims to header values? Ex. request.auth.claims[user_id] => header.user_id Thanks.","You’re very welcome! One way I see to do this is to use  outputPayloadToHeader  and create a Filter ( https://istio.io/latest/docs/reference/config/networking/envoy-filter/ ) to get the information on that header and better organize it. But, once again, when you get this Header on  Service A  and then call an new  Service B , your application will have to provide this value in the request, so  Service B  has access to it to. This may help:  https://github.com/BarDweller/istio-content-based-routing/blob/1a42d1029e99e64084e30117cbf744a7dac51906/istio-envoy-filter-jwt-lua.yaml . But use the  outputPayloadToHeader , so you can be sure that Istio has already validated the JWT you received."
API key based authorization - Security - Discuss Istio,"How can I do the api key in uri based authorization in Istio? 
For example: 
Allow requests with the specific api_key value 
 https://example.com/service?api_key=abcdef12345",this is a very insecure method of authorization and is not supported by Istio. If you would like to support something like this you would probably have to write a LUA filter to parse the key and potentially call another service to validate it.
Setting request headers with values from a JWT - Security - Discuss Istio,Before Istio 1.5 with the mixer it was easy to set headers related to values included in a JWT. How can I do this in Istio 1.5? Example:,"Do you want to inject request headers before JWT is forwarded to the application? One way you can do is to inject an EnvoyFilter after Istio authentication filter, and add your logic of settings headers there.",I found this yesterday looking for something else https://github.com/BarDweller/istio-content-based-routing/tree/1a42d1029e99e64084e30117cbf744a7dac51906,"Hello, This code works with istio 1.5.x. https://gist.github.com/inaiat/63a7525dbcf7c8824e7dc1a58927c0ef","This works for me. Envoy jwt auth adds the claims to the dynamic metadata. ISTIO by default uses the issuer as the key in the dynamic metadata. step 1: 
Update the access log so that you can see what values you get in the dynamic metadata. 
add this to the access logs: “auth_jwt”:""%DYNAMIC_METADATA(envoy.filters.http.jwt_authn)%"" In this step you should be able to find out the key for which you can access your claims. step2: 
Create an envoy filter that uses the dynamic metadata to add headers to the request.",You can use outputPayloadToHeader to have istio base64 encode the jwt payload and pass it along as a a header,Wow!! This seems the best option! Thank you.,"/u/inaiat  How does this helps? 
its indeed  forward the JWT token as an header but it does not decode it on the Envoy part. /u/thet_ko  how  shouldnt your EnvoyFilter includes also section for the jwt_authn filter? 10x","/u/chen  I receive a payload in base64. Like this: 
{ 
“sub”: “1234567890”, 
“name”: “John Doe”, 
“admin”: true 
} So, my app can handle this jwt payload.","Ho, yes my app also, but i thought the main idea for this thread was to be able to decrypt the jwt on the Envoy and use specific claims as request headers. 
i fail to get the decryption part properly.",Sure… I cant handle this with latest istio (1.7.x) versions. So I use this approach (I think this easiest way),"Hi Chen, You can add just add request authentication similar to what inaiat has done. The envoy filter will use this jwt token to do its parsing and processing. Note this line inside the envoy metafilter: 
local claims = meta[""{add the key here from step1. This is most likely your jwt issuer url.}""]","Thanks, i’ve already got this working. my problem was that i was trying to use the ‘outputPayLoadToHeader’ on the EnvoyFilter and basically do the decryption myself and that was the wrong direction. i’ve removed the outputPayloadToHeader from the requestAuthentication as start decoding it myself on the lua script was waste of time. the magic was indeed on the jwt_authn filter. 
meta=request_handle:streamInfo():dynamicMetadata():get(“envoy.filters.http.jwt_authn”) 
it did the decryption part and i only needed to read the claims from the metadata based on my issuer. thanks:)"
End User Auth for external use and MTLS for internal service-service communication? - Security - Discuss Istio,"I’m trying to setup a namespace such that any services exposed through an ingress gateway/virtual service require end user JWT authentication, but the same service when accessed from another internal service will use normal mTLS authentication. Here is my general setup: With this setup external JWT auth works. Any incoming request to the ‘api’ service requires a JWT. 
The problem I’m hitting, which I thought would be solved by the ‘peers’ section in the auth policy is that it looks like JWT auth is also required when another service (lets call that service ‘limits’) tries to make a request to  the ‘api’ service. This is the response: If I remove the auth policy, communication is allowed again. I have to assume that a typical use to end user authentication is for requests that originate outside of the mesh and that the same services that ingress will communicate with should also be accessible by other internal services that live within the mesh without requiring end user authentication. Is there an additional auth policy I need to add to inform the mesh to not require end user authentication for internal service-service communication?","This is an interesting use case. As far as I know, we don’t support external for jwt+mTLS while internal for mTLS only. The reason is for external -> ingress -> serviceA communication, we don’t distinguish ingress from other internal services (i.e., internal serviceB -> serviceA). As a result, serviceA just simply checks jwt and peer cert given your auth policy. /u/yangminzhu  please correct me if i am wrong. And do you think it is something we can support and is there any workaround to unblock rob@ ?","Sorry, I may have been a little unclear. I’m not looking for the combination of the two. I want either supported depending on use case. 
Traffic is coming from an end user outside of the mesh. In this case I want the origin JWT authentication applied. 
(end user) => (gateway) => (api)  (in this case JWT should be used) 
Traffic is coming from a service within the mesh. In this case I want mtls to be applied (but not JWT). 
(limits) => (api)  (in this case mtls should be used)","One thing you could do is to apply the JWT policy on  (gateway)  and apply the mTLS policy on  (api) . This might be a little different from what you might be thinking but I think it effectively have the same outcome. If you want to apply the JWT policy on  (api)  for some reason, you may need to look into some workaround as it’s not directly supported in today’s API. For example, you maybe use it with RBAC to require JWT for requests from service account other than ingressgateway.","Thanks  /u/yangminzhu . I can give that a try. One clarification here, when you say the gateway, do you mean something: Where ‘gateway’ is the name of the actual Gateway resource. Or something like: Where the target is the service name of the istio gateway in the istio-system namespace?","The target name should be  ""istio-ingressgateway""  which is the service name of the ingress gateway. You should also set the namespace to “istio-system”:","/u/yangminzhu   yes that does work. However, there is one more wrinkle in my use case. Each namespace also has its own JWT signing key. Adding the origin authentication does to the ingress gateway does work for a single namespace (I have a namespace per tenant). Once I had in more than one namespace, the authentication fails since there are multiple signing keys. Is it possible to have ingress gateways outside if the istio-system namespace and alongside each tenant namespace?","You can add as many origins as you need, with different issuers. If any validate than the request is validated.","That makes sense, and should have been obvious to me. I’ll give that a try, thanks for your help!","/u/rjbez17  Thank you for providing the example, that’s very nice! /u/rob  Please let us know if you need any help.","/u/yangminzhu  the Istio example  https://istio.io/docs/tasks/security/authn-policy/#end-user-authentication   is showing the JWT policy on the service httpbin, are you saying the JWT policy won’t work if traffic is coming from inside the mesh?","/u/dwctua  From what I’ve been trying to do, if JWT origin auth is set on a service, then any traffic (whether its coming from the outside into the gateway and through to that service or if its coming from anther internal service) will require JWT auth. The example given above about switching JWT auth to the ingressgateway service/pod does work. I have verified that. In that case external traffic coming into the gateway will require JWT auth but none of the internal services will. The only piece I still need to try is to have multiple JWKS entries (from what the filter does I suspect this will work) but I’m not sure i’ll get to verifying that will work until later today or Monday.",Thanks for clarification  /u/rob ! I misread your examples. Personally I would prefer to have a consistent authentication regardless where is the traffic coming from.,"Hello everyone. I understood  /u/rob  needs as I have the same need: let the user access, with JWT, the services, while letting kube services call between each other without JWT. I think new Istio gives the possibility of making that, according to the documentation, but I’d like that this could be confirmed by someone, as I’m going to try it only in a few days. https://istio.io/latest/docs/concepts/security/#authentication",would love to know if with latest istio version (RequestAuthenticaiton + PeerAuthentication) we get this solved without a workaround. as we are trying to achieve the exact same  thing 10x,"This can be easily supported with the latest policy, you just need: Apply RequestAuthentication + AuthoziationPolicy on ingress gateway so that all traffic entering the mesh will need a valid JWT token; Apply PeerAuthentication in mesh level so that all traffic within the mesh will require the mTLS.","great that exactly what i did. 
the only difference is that i didnt set the requestAuthentication on the ingress itself, but on the namespace itself, that’s why i needed to add the namespaces source on the authorization policy. based on your suggestion it means that no matter to which app, whenever request came from outside the mesh, it will require jwt, but all communication inside the mesh, will use the mTLS withouth needing the token. 
make sense. 10x","Hello, I tried what you explained, with the following configurations: Gateway: RequestAuthentication: PeerAuthentication: Deployment 1 (+ vs, svc, authorization policy) Deployment 2 (+ vs, svc, authorization policy) 
 http://kc-istio-integr-2:8080/due/internaltest . 
 Any hint regarding that? 
Maybe it is a not-handled mechanism, or bugged PeerAuthentication? 
Documentation is very poor on that and I am not able to understand. Thank you very much "
Best way to turn off mTLS for NodePort - Security - Discuss Istio,"(This is for Istio 1.6.2) 
So, we have a Postgres pod running in our development cluster, and if we set istio-injection=enabled for the namespace, trying to use nodeport to get in fails with an SSL error (for instance, with pgcli, it will fail to connect and give this error: received invalid response to SSL negotiation) I can disable Envoy being added to the pod with annotation of 
 http://sidecar.istio.io/inject:  ‘false’, but that also means no tls to the database is happening even inside the cluster, and that’s not quite what I want, even if that means the NodePort will work. What would be easiest way to turn off mTLS for the NodePort only?"
mTLS PeerAuthentication: allowing specific sources/clients using AuthorizationPolicy? - Security - Discuss Istio,"Hi there, Just rather new to Istio so bear with me as I’m trying to understand from a conceptual point of view. I’ve set up the PeerAuthentication successful in a couple of namespaces and this works all as expected. I can also work with RequestAuthorization without any problems. Allowing clients from a certain principle on the mTLS/Peer is done from the AuthorizationPolicy as well specifying the mTLS principle right? So having a strict policy on PeerAuthentication guarantees the identity which in turn enables the specification and the authenticity of the principle? I want to make sure I can control who’s able to access who as a first line of control using mTLS. More fine grained control can be done using RequestAuthorization using JWT and AuthorizationPolicy on requestPrincipals. Is this a sane strategy? Or am I approaching this backwards? Thanks, 
Martijn","Yes your approach sounds good, typically mTLS is used for app to app communication. So you use mTLS to help determine where traffic can come from and RequestAuthorization helps determine the “who” can talk to your application.",Thanks for getting back. Did a small demo on some sandbox cluster. This will have a huge impact on how we will think about deployments from a dev perspective.
Correct way to require a jwt to access a workload from ingress - Security - Discuss Istio,"I’m trying to create an authorization policy (in Istio 1.17.3) that requires a jwt to access a particular workload for ingress traffic. I’m getting errors logged but it otherwise seems to work; I’m hoping someone can validate my approach, which uses the requestPrincipal to check the token. Istiod continually logs an error telling me that: Here’s my test authorization policy. I’m attempting to allow access from the sleep service with no token, but ingress (or anything originating from istio-system) requires a token: Am I doing something wrong? Is there a preferred way to do this? I’m trying to apply the policy to the workload itself since there are other workloads which do not have this requirement. Clearly the rule is not being skipped in all cases since it’s working (and behaves very differently when I remove that rule). Thanks for any input.","I’m having the same issue, I found this resource  https://istio.io/latest/docs/reference/config/security/conditions/  which basically says the requestPrincipals field is HTTP only. I have yet to find out how to fix this, I’m guessing it’s to do with the port the container is on but I’m not sure, I might try changing it from 5000 to 80 and see what happens",I figured out the fix was to add the  name  field to the service’s port section e.g.  name: http
JWT without sub claim - Security - Discuss Istio,"In AuthorizationPolicy, source.requestPrincipals is of format “iss/sub” claims. In my JWT there is no “sub” claim. How do I authorize my JWT then?","Hi  /u/sudhakar890 , some fields like  request.auth.claims  or  request.auth.audiences  may help  https://istio.io/latest/docs/reference/config/security/conditions/ ."
Istio 1.7 CORS Policy not fully working - Security - Discuss Istio,"When I apply the CORS policy, not all of the CORS headers are serialized back.  I only get back the following headers.  I’m wondering if I’m doing anything wrong?  I do have a JWT policy using the  RequestAuthentication  definition also applied to the same gateway the virtual service below is applied to. I’m expecting as expected in this  https://istio.io/latest/docs/reference/config/networking/virtual-service/#CorsPolicy",I was able to get CORS preflight to work by adding an explicit AuthPolicy in the same namespace as the ingress gateway.
Setting pilot.jwksResolverExtraRootCA using Secrets - Security - Discuss Istio,"Hi All, I see extra root CA can be set using below options 
1. When installing via helm, you can now specify a PEM-encoded certificate in pilot.jwksResolverExtraRootCA in your values.yaml to trust an additional CA certificate 
2. During installation you can directly specify your certificate as a command-line argument 
Reference:  https://github.com/istio/istio/pull/17176 But looking for an option to set the pilot.jwksResolverExtraRootCA contents from secrets. Like, storing the pem content in secret and reference the mount path in values.yaml. Kindly advice on how to proceed. Thanks in advance. Thanks, 
G Dinesh Krishnan"
gRPC based application access through Istio Ingress in AKS - Security - Discuss Istio,Please advice how to implement gRPC based access through Istio Ingress in AKS…
Citadelclient Failed to Create Certificate - Security - Discuss Istio,"Istio fails to start in vm even after providing all needed files. I transferred cluster.env, istio-token, mesh.yaml, root-cert.pem, hosts automatically generated when running “istioctl x workload entry configure -f workloadgroup.yaml -o “${WORK_DIR}” --autoregister” (showing below) and followed installation guide  https://istio.io/latest/docs/setup/install/virtual-machine/#configure-the-virtual-machine . However, when “running _sudo systemctl start istio”, I get the issues shown in the screenshots below. I’m running version 1.8.1 ----------------> 
cluster.env 
-----------------> 
CANONICAL_REVISION=‘latest’ 
CANONICAL_SERVICE=‘reviews-v2’ 
DNS_AGENT=’’ 
ISTIO_INBOUND_PORTS=’   ’ 
POD_NAMESPACE=‘vm-services’ 
SERVICE_ACCOUNT=‘reviews-v2-vm’ 
TRUST_DOMAIN=‘cluster.local’ 
ISTIO_META_NETWORK=‘vm-network’ -----------------> 
mesh.yaml 
-----------------> 
defaultConfig: 
discoveryAddress: istiod.istio-system.svc:15012 
proxyMetadata: 
CANONICAL_REVISION: latest 
CANONICAL_SERVICE: reviews-v2 
DNS_AGENT: “” 
ISTIO_META_AUTO_REGISTER_GROUP: reviews-v2 
ISTIO_META_CLUSTER_ID: Kubernetes 
ISTIO_META_DNS_CAPTURE: “true” 
ISTIO_META_MESH_ID: “” 
ISTIO_META_NETWORK: “” 
ISTIO_META_WORKLOAD_NAME: reviews-v2 
ISTIO_METAJSON_LABELS: ‘{“app”:“reviews-v2”,“ http://service.istio.io/canonical-name%22:%22reviews-v2%22,%22service.istio.io/canonical-version%22:%22latest ”}’ 
POD_NAMESPACE: vm-services 
SERVICE_ACCOUNT: reviews-v2-vm 
TRUST_DOMAIN: cluster.local 
tracing: 
zipkin: 
address: zipkin.istio-system:9411 -----------------> 
istio-token (providing the following info: 
-----------------> 
{ 
“aud”: [ 
“istio-ca” 
], 
“exp”: 1608577250, 
“iat”: 1608573650, 
“iss”: “kubernetes.default.svc”, 
“ http://kubernetes.io ”: { 
“namespace”: “vm-services”, 
“serviceaccount”: { 
“name”: “reviews-v2-vm”, 
“uid”: “d5a87b61-31a7-47a6-81f1-58a383e906ab” 
} 
}, 
“nbf”: 1608573650, 
“sub”: “system:serviceaccount:vm-services:reviews-v2-vm” 
} -----------------> 
hosts 
-----------------> 
istio-eastwestgateway-external-ip istiod.istio-system.svc  Docs 
[X ] Installation 
  Networking 
  Performance and Scalability 
  Extensions and Telemetry 
[ X] Security 
  Test and Release 
  User Experience 
  Developer Infrastructure 
  Upgrade Run pilot-agent proxy 
 https://user-images.githubusercontent.com/64979576/102828069-9e02b680-4398-11eb-872f-604f7e03ca0b.png Run tail -f /var/log/istio/istio.log 
 https://user-images.githubusercontent.com/64979576/102828048-980cd580-4398-11eb-81af-b692b6a276fd.png"
